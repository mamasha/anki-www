{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/core/Oops.svelte","../../src/core/Logger.svelte","../../src/core/Grid.svelte","../../node_modules/svelte/store/index.mjs","../../src/core/Version.Store.ts","../../src/core/Version.svelte","../../src/core/Powered.svelte","../../node_modules/json5/dist/index.js","../../node_modules/decimal.js/decimal.mjs","../../node_modules/fraction.js/fraction.js","../../src/core/Helpers.ts","../../src/core/Anki.ts","../../src/core/MathJax.svelte","../../src/core/Mp3.svelte","../../src/core/DragHandler.svelte","../../src/core/Pulse.svelte","../../src/core/OnDrag.svelte","../../src/core/Clock.svelte","../../node_modules/animejs/lib/anime.es.js","../../src/core/Congrats.svelte","../../src/core/IoBus.svelte","../../src/core/TimedCmd.svelte","../../src/plus-over/Model.svelte","../../src/plus-over/PlusOver.svelte","../../src/plus-over/Count.svelte","../../src/plus-over/Num.svelte","../../src/plus-over/Op.svelte","../../src/plus-over/Ans.svelte","../../src/plus-over/Pair.svelte","../../src/plus-over/Digit.svelte","../../src/plus-over/Main.svelte","../../src/gcd-lcm/Model.svelte","../../src/gcd-lcm/GcdLcm.svelte","../../src/gcd-lcm/Go.svelte","../../src/gcd-lcm/Num.svelte","../../src/gcd-lcm/Factor.svelte","../../src/gcd-lcm/Count.svelte","../../src/gcd-lcm/Main.svelte","../../src/zero/Model.svelte","../../src/zero/Count.svelte","../../src/core/AsciiMathUtils.ts","../../src/zero/Num.svelte","../../src/zero/Ans.svelte","../../src/zero/Op.svelte","../../src/zero/Main.svelte","../../src/core/AsciiMath.svelte","../../src/core/Progress.svelte","../../src/core/Timer.svelte","../../src/equation/Sequnces.svelte","../../src/equation/Utils.svelte","../../src/equation/Game.svelte","../../src/equation/Model.svelte","../../src/equation/Ans.svelte","../../src/equation/Main.svelte","../../src/fr-pairs/Model.svelte","../../src/fr-pairs/Game.svelte","../../src/fr-pairs/Ans.svelte","../../src/fr-pairs/Question.svelte","../../src/fr-pairs/Main.svelte","../../src/w-problem/WProblem.Ans.svelte","../../src/w-problem/WProblem.Text.svelte","../../src/w-problem/WProblem.Store.ts","../../src/w-problem/WProblem.Template.ts","../../src/w-problem/WProblem.Formatters.ts","../../src/w-problem/WProblem.Logic.ts","../../src/core/Fsm.ts","../../src/w-problem/WProblem.View.svelte","../../src/App.svelte","../../src/app.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.52.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<p>Oops...</p>","<script context=\"module\" lang=\"ts\">\r\n\r\n    interface ILog {\r\n        error(msg: string, err?: Error);\r\n        info(msg: string, err?: Error);\r\n    }\r\n\r\n    let _lines: string[] = [];\r\n    let _refresh = () => {};\r\n\r\n    function log(level: string, msg: string, err: string) {\r\n        let line = `${level} ${msg}`;\r\n        if (err) line += ` (${err})`;\r\n\r\n        console.log(line);\r\n\r\n        _lines.push(line);\r\n        _refresh();\r\n    }\r\n\r\n\r\n    export function info(msg: string, err?: Error) {\r\n        log(\"I\", msg, err?.message);\r\n    }\r\n\r\n    export function error(msg: string, err?: Error) {\r\n        log(\"E\", msg, err?.message);\r\n    }\r\n\r\n\r\n</script>\r\n\r\n\r\n<script lang=\"ts\">\r\n\r\n    let lines: string[] = _lines;\r\n\r\n    _refresh = () => {\r\n        lines = _lines;\r\n    }\r\n\r\n</script>\r\n\r\n{#each lines as line}\r\n    <p>{line}</p>\r\n{/each}\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { getContext, setContext } from \"svelte\";\r\n\r\n    export function getBgColor(ga: string, $default?: string) {\r\n        let fn: any = getContext(\"get-bg-color\");\r\n        if (!fn) return $default ?? \"bg-transparent\";\r\n        let bgColor = fn(ga, $default);\r\n        // console.log(`${ga}: ${bgColor}`);\r\n        return bgColor;\r\n    }\r\n\r\n</script>\r\n\r\n<script lang=\"ts\">\r\n\r\n    interface Layout {\r\n        areas: string;\r\n        cols: string;\r\n        rows: string;\r\n        bgColors?: any;\r\n    }\r\n\r\n    export let layout: Layout;\r\n    export let ga: string = \"unset\";\r\n    export let bgColor: string = getBgColor(ga);\r\n\r\n    setContext(\"get-bg-color\", function(ga: string, $default?: string) {\r\n        if (!layout.bgColors) return  $default ?? \"bg-transparent\";\r\n        return layout.bgColors[ga] ?? $default ?? \"bg-transparent\";\r\n    })\r\n\r\n</script>\r\n\r\n<div \r\n    class=\"my-grid {bgColor}\"\r\n    on:click|self\r\n    style=\"\r\n        grid-area:{ga};\r\n        --areas: {layout.areas}; \r\n        --cols: {layout.cols};\r\n        --rows: {layout.rows};\"\r\n>\r\n    <slot></slot>\r\n</div>\r\n\r\n\r\n<style>\r\n    .my-grid {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: grid;\r\n        align-items: center;\r\n        justify-items: center;\r\n        grid-template-areas: var(--areas);\r\n        grid-template-columns: var(--cols);\r\n        grid-template-rows: var(--rows);\r\n    }\r\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { onMount } from \"svelte\";\r\nimport { readable } from \"svelte/store\";\r\n\r\nfunction createVersions() {\r\n    let _db: string[] = [];\r\n    let _index: number = 0;\r\n    let _set: (v: string) => void;\r\n\r\n    let _current = readable<string>(\"\", (set) => {\r\n        _set = set; \r\n    });\r\n\r\n    function update() {\r\n        _set(_db.length > 0 ? _db[_index % _db.length] : \"\");\r\n    }\r\n\r\n\treturn {\r\n        current: _current,\r\n\t\tadd: (v: string, $default = false) => {\r\n            onMount(() => {\r\n                _db.push(v);\r\n\r\n                if ($default)\r\n                    _index = _db.length - 1;\r\n\r\n                update();\r\n\r\n                return () => {\r\n                    _db = _db.filter(x => x !== v);\r\n                    update();\r\n                }\r\n            });\r\n        },\r\n        next: () => {\r\n            _index++;\r\n            update();\r\n        }\r\n\t};\r\n}\r\n\r\nexport const versions = createVersions();","<script lang=\"ts\">\r\n    import { versions } from \"./Version.Store\";\r\n\r\n    export let ga: string;\r\n    export let v: string;\r\n\r\n    versions.add(v, true);\r\n\r\n    let {current} = versions;\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-click-events-have-key-events -->\r\n<span \r\n    on:click={() => versions.next()}\r\n    class=\"text-xs text-gray-300\"\r\n    style=\"grid-area:{ga}\"\r\n>\r\n   {$current}\r\n</span>","<script lang=\"ts\">\r\n    export let ga: string;\r\n    export let text: string;\r\n</script>\r\n\r\n<span \r\n    class=\"text-xs text-gray-400\"\r\n    style=\"grid-area:{ga}\"\r\n>\r\n   {text}\r\n</span>","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.JSON5 = factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar _global = createCommonjsModule(function (module) {\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self\n\t  // eslint-disable-next-line no-new-func\n\t  : Function('return this')();\n\tif (typeof __g == 'number') { __g = global; } // eslint-disable-line no-undef\n\t});\n\n\tvar _core = createCommonjsModule(function (module) {\n\tvar core = module.exports = { version: '2.6.5' };\n\tif (typeof __e == 'number') { __e = core; } // eslint-disable-line no-undef\n\t});\n\tvar _core_1 = _core.version;\n\n\tvar _isObject = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\tvar _anObject = function (it) {\n\t  if (!_isObject(it)) { throw TypeError(it + ' is not an object!'); }\n\t  return it;\n\t};\n\n\tvar _fails = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\n\t// Thank's IE8 for his funny defineProperty\n\tvar _descriptors = !_fails(function () {\n\t  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\tvar document = _global.document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar is = _isObject(document) && _isObject(document.createElement);\n\tvar _domCreate = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\n\tvar _ie8DomDefine = !_descriptors && !_fails(function () {\n\t  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tvar _toPrimitive = function (it, S) {\n\t  if (!_isObject(it)) { return it; }\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\tvar dP = Object.defineProperty;\n\n\tvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  _anObject(O);\n\t  P = _toPrimitive(P, true);\n\t  _anObject(Attributes);\n\t  if (_ie8DomDefine) { try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) { /* empty */ } }\n\t  if ('get' in Attributes || 'set' in Attributes) { throw TypeError('Accessors not supported!'); }\n\t  if ('value' in Attributes) { O[P] = Attributes.value; }\n\t  return O;\n\t};\n\n\tvar _objectDp = {\n\t\tf: f\n\t};\n\n\tvar _propertyDesc = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\tvar _hide = _descriptors ? function (object, key, value) {\n\t  return _objectDp.f(object, key, _propertyDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tvar _has = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\tvar id = 0;\n\tvar px = Math.random();\n\tvar _uid = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n\tvar _library = false;\n\n\tvar _shared = createCommonjsModule(function (module) {\n\tvar SHARED = '__core-js_shared__';\n\tvar store = _global[SHARED] || (_global[SHARED] = {});\n\n\t(module.exports = function (key, value) {\n\t  return store[key] || (store[key] = value !== undefined ? value : {});\n\t})('versions', []).push({\n\t  version: _core.version,\n\t  mode: _library ? 'pure' : 'global',\n\t  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n\t});\n\t});\n\n\tvar _functionToString = _shared('native-function-to-string', Function.toString);\n\n\tvar _redefine = createCommonjsModule(function (module) {\n\tvar SRC = _uid('src');\n\n\tvar TO_STRING = 'toString';\n\tvar TPL = ('' + _functionToString).split(TO_STRING);\n\n\t_core.inspectSource = function (it) {\n\t  return _functionToString.call(it);\n\t};\n\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) { _has(val, 'name') || _hide(val, 'name', key); }\n\t  if (O[key] === val) { return; }\n\t  if (isFunction) { _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key))); }\n\t  if (O === _global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    _hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    _hide(O, key, val);\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n\t});\n\t});\n\n\tvar _aFunction = function (it) {\n\t  if (typeof it != 'function') { throw TypeError(it + ' is not a function!'); }\n\t  return it;\n\t};\n\n\t// optional / simple context binding\n\n\tvar _ctx = function (fn, that, length) {\n\t  _aFunction(fn);\n\t  if (that === undefined) { return fn; }\n\t  switch (length) {\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\tvar PROTOTYPE = 'prototype';\n\n\tvar $export = function (type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) { source = name; }\n\t  for (key in source) {\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n\t    // extend global\n\t    if (target) { _redefine(target, key, out, type & $export.U); }\n\t    // export\n\t    if (exports[key] != out) { _hide(exports, key, exp); }\n\t    if (IS_PROTO && expProto[key] != out) { expProto[key] = out; }\n\t  }\n\t};\n\t_global.core = _core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library`\n\tvar _export = $export;\n\n\t// 7.1.4 ToInteger\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tvar _toInteger = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tvar _defined = function (it) {\n\t  if (it == undefined) { throw TypeError(\"Can't call method on  \" + it); }\n\t  return it;\n\t};\n\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tvar _stringAt = function (TO_STRING) {\n\t  return function (that, pos) {\n\t    var s = String(_defined(that));\n\t    var i = _toInteger(pos);\n\t    var l = s.length;\n\t    var a, b;\n\t    if (i < 0 || i >= l) { return TO_STRING ? '' : undefined; }\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n\tvar $at = _stringAt(false);\n\t_export(_export.P, 'String', {\n\t  // 21.1.3.3 String.prototype.codePointAt(pos)\n\t  codePointAt: function codePointAt(pos) {\n\t    return $at(this, pos);\n\t  }\n\t});\n\n\tvar codePointAt = _core.String.codePointAt;\n\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar _toAbsoluteIndex = function (index, length) {\n\t  index = _toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n\tvar fromCharCode = String.fromCharCode;\n\tvar $fromCodePoint = String.fromCodePoint;\n\n\t// length should be 1, old FF problem\n\t_export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n\t  // 21.1.2.2 String.fromCodePoint(...codePoints)\n\t  fromCodePoint: function fromCodePoint(x) {\n\t    var arguments$1 = arguments;\n\t // eslint-disable-line no-unused-vars\n\t    var res = [];\n\t    var aLen = arguments.length;\n\t    var i = 0;\n\t    var code;\n\t    while (aLen > i) {\n\t      code = +arguments$1[i++];\n\t      if (_toAbsoluteIndex(code, 0x10ffff) !== code) { throw RangeError(code + ' is not a valid code point'); }\n\t      res.push(code < 0x10000\n\t        ? fromCharCode(code)\n\t        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n\t      );\n\t    } return res.join('');\n\t  }\n\t});\n\n\tvar fromCodePoint = _core.String.fromCodePoint;\n\n\t// This is a generated file. Do not edit.\n\tvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n\tvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n\tvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\n\tvar unicode = {\n\t\tSpace_Separator: Space_Separator,\n\t\tID_Start: ID_Start,\n\t\tID_Continue: ID_Continue\n\t};\n\n\tvar util = {\n\t    isSpaceSeparator: function isSpaceSeparator (c) {\n\t        return typeof c === 'string' && unicode.Space_Separator.test(c)\n\t    },\n\n\t    isIdStartChar: function isIdStartChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c === '$') || (c === '_') ||\n\t        unicode.ID_Start.test(c)\n\t        )\n\t    },\n\n\t    isIdContinueChar: function isIdContinueChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c >= '0' && c <= '9') ||\n\t        (c === '$') || (c === '_') ||\n\t        (c === '\\u200C') || (c === '\\u200D') ||\n\t        unicode.ID_Continue.test(c)\n\t        )\n\t    },\n\n\t    isDigit: function isDigit (c) {\n\t        return typeof c === 'string' && /[0-9]/.test(c)\n\t    },\n\n\t    isHexDigit: function isHexDigit (c) {\n\t        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n\t    },\n\t};\n\n\tvar source;\n\tvar parseState;\n\tvar stack;\n\tvar pos;\n\tvar line;\n\tvar column;\n\tvar token;\n\tvar key;\n\tvar root;\n\n\tvar parse = function parse (text, reviver) {\n\t    source = String(text);\n\t    parseState = 'start';\n\t    stack = [];\n\t    pos = 0;\n\t    line = 1;\n\t    column = 0;\n\t    token = undefined;\n\t    key = undefined;\n\t    root = undefined;\n\n\t    do {\n\t        token = lex();\n\n\t        // This code is unreachable.\n\t        // if (!parseStates[parseState]) {\n\t        //     throw invalidParseState()\n\t        // }\n\n\t        parseStates[parseState]();\n\t    } while (token.type !== 'eof')\n\n\t    if (typeof reviver === 'function') {\n\t        return internalize({'': root}, '', reviver)\n\t    }\n\n\t    return root\n\t};\n\n\tfunction internalize (holder, name, reviver) {\n\t    var value = holder[name];\n\t    if (value != null && typeof value === 'object') {\n\t        for (var key in value) {\n\t            var replacement = internalize(value, key, reviver);\n\t            if (replacement === undefined) {\n\t                delete value[key];\n\t            } else {\n\t                value[key] = replacement;\n\t            }\n\t        }\n\t    }\n\n\t    return reviver.call(holder, name, value)\n\t}\n\n\tvar lexState;\n\tvar buffer;\n\tvar doubleQuote;\n\tvar sign;\n\tvar c;\n\n\tfunction lex () {\n\t    lexState = 'default';\n\t    buffer = '';\n\t    doubleQuote = false;\n\t    sign = 1;\n\n\t    for (;;) {\n\t        c = peek();\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[lexState]) {\n\t        //     throw invalidLexState(lexState)\n\t        // }\n\n\t        var token = lexStates[lexState]();\n\t        if (token) {\n\t            return token\n\t        }\n\t    }\n\t}\n\n\tfunction peek () {\n\t    if (source[pos]) {\n\t        return String.fromCodePoint(source.codePointAt(pos))\n\t    }\n\t}\n\n\tfunction read () {\n\t    var c = peek();\n\n\t    if (c === '\\n') {\n\t        line++;\n\t        column = 0;\n\t    } else if (c) {\n\t        column += c.length;\n\t    } else {\n\t        column++;\n\t    }\n\n\t    if (c) {\n\t        pos += c.length;\n\t    }\n\n\t    return c\n\t}\n\n\tvar lexStates = {\n\t    default: function default$1 () {\n\t        switch (c) {\n\t        case '\\t':\n\t        case '\\v':\n\t        case '\\f':\n\t        case ' ':\n\t        case '\\u00A0':\n\t        case '\\uFEFF':\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'comment';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        if (util.isSpaceSeparator(c)) {\n\t            read();\n\t            return\n\t        }\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[parseState]) {\n\t        //     throw invalidLexState(parseState)\n\t        // }\n\n\t        return lexStates[parseState]()\n\t    },\n\n\t    comment: function comment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineComment';\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'singleLineComment';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    multiLineComment: function multiLineComment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineCommentAsterisk';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    },\n\n\t    multiLineCommentAsterisk: function multiLineCommentAsterisk () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        lexState = 'multiLineComment';\n\t    },\n\n\t    singleLineComment: function singleLineComment () {\n\t        switch (c) {\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        read();\n\t    },\n\n\t    value: function value () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        case 'n':\n\t            read();\n\t            literal('ull');\n\t            return newToken('null', null)\n\n\t        case 't':\n\t            read();\n\t            literal('rue');\n\t            return newToken('boolean', true)\n\n\t        case 'f':\n\t            read();\n\t            literal('alse');\n\t            return newToken('boolean', false)\n\n\t        case '-':\n\t        case '+':\n\t            if (read() === '-') {\n\t                sign = -1;\n\t            }\n\n\t            lexState = 'sign';\n\t            return\n\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            buffer = '';\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    identifierNameStartEscape: function identifierNameStartEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t            break\n\n\t        default:\n\t            if (!util.isIdStartChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    identifierName: function identifierName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            buffer += read();\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameEscape';\n\t            return\n\t        }\n\n\t        if (util.isIdContinueChar(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('identifier', buffer)\n\t    },\n\n\t    identifierNameEscape: function identifierNameEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            break\n\n\t        default:\n\t            if (!util.isIdContinueChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    sign: function sign$1 () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', sign * Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    zero: function zero () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\n\t        case 'x':\n\t        case 'X':\n\t            buffer += read();\n\t            lexState = 'hexadecimal';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * 0)\n\t    },\n\n\t    decimalInteger: function decimalInteger () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalPointLeading: function decimalPointLeading () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalPoint: function decimalPoint () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalFraction: function decimalFraction () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalExponent: function decimalExponent () {\n\t        switch (c) {\n\t        case '+':\n\t        case '-':\n\t            buffer += read();\n\t            lexState = 'decimalExponentSign';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentSign: function decimalExponentSign () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentInteger: function decimalExponentInteger () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    hexadecimal: function hexadecimal () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'hexadecimalInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    hexadecimalInteger: function hexadecimalInteger () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    string: function string () {\n\t        switch (c) {\n\t        case '\\\\':\n\t            read();\n\t            buffer += escape();\n\t            return\n\n\t        case '\"':\n\t            if (doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case \"'\":\n\t            if (!doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case '\\n':\n\t        case '\\r':\n\t            throw invalidChar(read())\n\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            separatorChar(c);\n\t            break\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    },\n\n\t    start: function start () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        // This code is unreachable since the default lexState handles eof.\n\t        // case undefined:\n\t        //     return newToken('eof')\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t            buffer = read();\n\t            lexState = 'identifierName';\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameStartEscape';\n\t            return\n\n\t        case '}':\n\t            return newToken('punctuator', read())\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        if (util.isIdStartChar(c)) {\n\t            buffer += read();\n\t            lexState = 'identifierName';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        if (c === ':') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        lexState = 'value';\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case '}':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (c === ']') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case ']':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the default lexState.\n\t        // if (c === undefined) {\n\t        //     read()\n\t        //     return newToken('eof')\n\t        // }\n\n\t        throw invalidChar(read())\n\t    },\n\t};\n\n\tfunction newToken (type, value) {\n\t    return {\n\t        type: type,\n\t        value: value,\n\t        line: line,\n\t        column: column,\n\t    }\n\t}\n\n\tfunction literal (s) {\n\t    for (var i = 0, list = s; i < list.length; i += 1) {\n\t        var c = list[i];\n\n\t        var p = peek();\n\n\t        if (p !== c) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    }\n\t}\n\n\tfunction escape () {\n\t    var c = peek();\n\t    switch (c) {\n\t    case 'b':\n\t        read();\n\t        return '\\b'\n\n\t    case 'f':\n\t        read();\n\t        return '\\f'\n\n\t    case 'n':\n\t        read();\n\t        return '\\n'\n\n\t    case 'r':\n\t        read();\n\t        return '\\r'\n\n\t    case 't':\n\t        read();\n\t        return '\\t'\n\n\t    case 'v':\n\t        read();\n\t        return '\\v'\n\n\t    case '0':\n\t        read();\n\t        if (util.isDigit(peek())) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        return '\\0'\n\n\t    case 'x':\n\t        read();\n\t        return hexEscape()\n\n\t    case 'u':\n\t        read();\n\t        return unicodeEscape()\n\n\t    case '\\n':\n\t    case '\\u2028':\n\t    case '\\u2029':\n\t        read();\n\t        return ''\n\n\t    case '\\r':\n\t        read();\n\t        if (peek() === '\\n') {\n\t            read();\n\t        }\n\n\t        return ''\n\n\t    case '1':\n\t    case '2':\n\t    case '3':\n\t    case '4':\n\t    case '5':\n\t    case '6':\n\t    case '7':\n\t    case '8':\n\t    case '9':\n\t        throw invalidChar(read())\n\n\t    case undefined:\n\t        throw invalidChar(read())\n\t    }\n\n\t    return read()\n\t}\n\n\tfunction hexEscape () {\n\t    var buffer = '';\n\t    var c = peek();\n\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    c = peek();\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tfunction unicodeEscape () {\n\t    var buffer = '';\n\t    var count = 4;\n\n\t    while (count-- > 0) {\n\t        var c = peek();\n\t        if (!util.isHexDigit(c)) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    }\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tvar parseStates = {\n\t    start: function start () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (token.type) {\n\t        case 'identifier':\n\t        case 'string':\n\t            key = token.value;\n\t            parseState = 'afterPropertyName';\n\t            return\n\n\t        case 'punctuator':\n\t            // This code is unreachable since it's handled by the lexState.\n\t            // if (token.value !== '}') {\n\t            //     throw invalidToken()\n\t            // }\n\n\t            pop();\n\t            return\n\n\t        case 'eof':\n\t            throw invalidEOF()\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator' || token.value !== ':') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        parseState = 'beforePropertyValue';\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        if (token.type === 'punctuator' && token.value === ']') {\n\t            pop();\n\t            return\n\t        }\n\n\t        push();\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforePropertyName';\n\t            return\n\n\t        case '}':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforeArrayValue';\n\t            return\n\n\t        case ']':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'eof') {\n\t        //     throw invalidToken()\n\t        // }\n\t    },\n\t};\n\n\tfunction push () {\n\t    var value;\n\n\t    switch (token.type) {\n\t    case 'punctuator':\n\t        switch (token.value) {\n\t        case '{':\n\t            value = {};\n\t            break\n\n\t        case '[':\n\t            value = [];\n\t            break\n\t        }\n\n\t        break\n\n\t    case 'null':\n\t    case 'boolean':\n\t    case 'numeric':\n\t    case 'string':\n\t        value = token.value;\n\t        break\n\n\t    // This code is unreachable.\n\t    // default:\n\t    //     throw invalidToken()\n\t    }\n\n\t    if (root === undefined) {\n\t        root = value;\n\t    } else {\n\t        var parent = stack[stack.length - 1];\n\t        if (Array.isArray(parent)) {\n\t            parent.push(value);\n\t        } else {\n\t            parent[key] = value;\n\t        }\n\t    }\n\n\t    if (value !== null && typeof value === 'object') {\n\t        stack.push(value);\n\n\t        if (Array.isArray(value)) {\n\t            parseState = 'beforeArrayValue';\n\t        } else {\n\t            parseState = 'beforePropertyName';\n\t        }\n\t    } else {\n\t        var current = stack[stack.length - 1];\n\t        if (current == null) {\n\t            parseState = 'end';\n\t        } else if (Array.isArray(current)) {\n\t            parseState = 'afterArrayValue';\n\t        } else {\n\t            parseState = 'afterPropertyValue';\n\t        }\n\t    }\n\t}\n\n\tfunction pop () {\n\t    stack.pop();\n\n\t    var current = stack[stack.length - 1];\n\t    if (current == null) {\n\t        parseState = 'end';\n\t    } else if (Array.isArray(current)) {\n\t        parseState = 'afterArrayValue';\n\t    } else {\n\t        parseState = 'afterPropertyValue';\n\t    }\n\t}\n\n\t// This code is unreachable.\n\t// function invalidParseState () {\n\t//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n\t// }\n\n\t// This code is unreachable.\n\t// function invalidLexState (state) {\n\t//     return new Error(`JSON5: invalid lex state '${state}'`)\n\t// }\n\n\tfunction invalidChar (c) {\n\t    if (c === undefined) {\n\t        return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t    }\n\n\t    return syntaxError((\"JSON5: invalid character '\" + (formatChar(c)) + \"' at \" + line + \":\" + column))\n\t}\n\n\tfunction invalidEOF () {\n\t    return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t}\n\n\t// This code is unreachable.\n\t// function invalidToken () {\n\t//     if (token.type === 'eof') {\n\t//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n\t//     }\n\n\t//     const c = String.fromCodePoint(token.value.codePointAt(0))\n\t//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n\t// }\n\n\tfunction invalidIdentifier () {\n\t    column -= 5;\n\t    return syntaxError((\"JSON5: invalid identifier character at \" + line + \":\" + column))\n\t}\n\n\tfunction separatorChar (c) {\n\t    console.warn((\"JSON5: '\" + (formatChar(c)) + \"' in strings is not valid ECMAScript; consider escaping\"));\n\t}\n\n\tfunction formatChar (c) {\n\t    var replacements = {\n\t        \"'\": \"\\\\'\",\n\t        '\"': '\\\\\"',\n\t        '\\\\': '\\\\\\\\',\n\t        '\\b': '\\\\b',\n\t        '\\f': '\\\\f',\n\t        '\\n': '\\\\n',\n\t        '\\r': '\\\\r',\n\t        '\\t': '\\\\t',\n\t        '\\v': '\\\\v',\n\t        '\\0': '\\\\0',\n\t        '\\u2028': '\\\\u2028',\n\t        '\\u2029': '\\\\u2029',\n\t    };\n\n\t    if (replacements[c]) {\n\t        return replacements[c]\n\t    }\n\n\t    if (c < ' ') {\n\t        var hexString = c.charCodeAt(0).toString(16);\n\t        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n\t    }\n\n\t    return c\n\t}\n\n\tfunction syntaxError (message) {\n\t    var err = new SyntaxError(message);\n\t    err.lineNumber = line;\n\t    err.columnNumber = column;\n\t    return err\n\t}\n\n\tvar stringify = function stringify (value, replacer, space) {\n\t    var stack = [];\n\t    var indent = '';\n\t    var propertyList;\n\t    var replacerFunc;\n\t    var gap = '';\n\t    var quote;\n\n\t    if (\n\t        replacer != null &&\n\t        typeof replacer === 'object' &&\n\t        !Array.isArray(replacer)\n\t    ) {\n\t        space = replacer.space;\n\t        quote = replacer.quote;\n\t        replacer = replacer.replacer;\n\t    }\n\n\t    if (typeof replacer === 'function') {\n\t        replacerFunc = replacer;\n\t    } else if (Array.isArray(replacer)) {\n\t        propertyList = [];\n\t        for (var i = 0, list = replacer; i < list.length; i += 1) {\n\t            var v = list[i];\n\n\t            var item = (void 0);\n\n\t            if (typeof v === 'string') {\n\t                item = v;\n\t            } else if (\n\t                typeof v === 'number' ||\n\t                v instanceof String ||\n\t                v instanceof Number\n\t            ) {\n\t                item = String(v);\n\t            }\n\n\t            if (item !== undefined && propertyList.indexOf(item) < 0) {\n\t                propertyList.push(item);\n\t            }\n\t        }\n\t    }\n\n\t    if (space instanceof Number) {\n\t        space = Number(space);\n\t    } else if (space instanceof String) {\n\t        space = String(space);\n\t    }\n\n\t    if (typeof space === 'number') {\n\t        if (space > 0) {\n\t            space = Math.min(10, Math.floor(space));\n\t            gap = '          '.substr(0, space);\n\t        }\n\t    } else if (typeof space === 'string') {\n\t        gap = space.substr(0, 10);\n\t    }\n\n\t    return serializeProperty('', {'': value})\n\n\t    function serializeProperty (key, holder) {\n\t        var value = holder[key];\n\t        if (value != null) {\n\t            if (typeof value.toJSON5 === 'function') {\n\t                value = value.toJSON5(key);\n\t            } else if (typeof value.toJSON === 'function') {\n\t                value = value.toJSON(key);\n\t            }\n\t        }\n\n\t        if (replacerFunc) {\n\t            value = replacerFunc.call(holder, key, value);\n\t        }\n\n\t        if (value instanceof Number) {\n\t            value = Number(value);\n\t        } else if (value instanceof String) {\n\t            value = String(value);\n\t        } else if (value instanceof Boolean) {\n\t            value = value.valueOf();\n\t        }\n\n\t        switch (value) {\n\t        case null: return 'null'\n\t        case true: return 'true'\n\t        case false: return 'false'\n\t        }\n\n\t        if (typeof value === 'string') {\n\t            return quoteString(value, false)\n\t        }\n\n\t        if (typeof value === 'number') {\n\t            return String(value)\n\t        }\n\n\t        if (typeof value === 'object') {\n\t            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n\t        }\n\n\t        return undefined\n\t    }\n\n\t    function quoteString (value) {\n\t        var quotes = {\n\t            \"'\": 0.1,\n\t            '\"': 0.2,\n\t        };\n\n\t        var replacements = {\n\t            \"'\": \"\\\\'\",\n\t            '\"': '\\\\\"',\n\t            '\\\\': '\\\\\\\\',\n\t            '\\b': '\\\\b',\n\t            '\\f': '\\\\f',\n\t            '\\n': '\\\\n',\n\t            '\\r': '\\\\r',\n\t            '\\t': '\\\\t',\n\t            '\\v': '\\\\v',\n\t            '\\0': '\\\\0',\n\t            '\\u2028': '\\\\u2028',\n\t            '\\u2029': '\\\\u2029',\n\t        };\n\n\t        var product = '';\n\n\t        for (var i = 0; i < value.length; i++) {\n\t            var c = value[i];\n\t            switch (c) {\n\t            case \"'\":\n\t            case '\"':\n\t                quotes[c]++;\n\t                product += c;\n\t                continue\n\n\t            case '\\0':\n\t                if (util.isDigit(value[i + 1])) {\n\t                    product += '\\\\x00';\n\t                    continue\n\t                }\n\t            }\n\n\t            if (replacements[c]) {\n\t                product += replacements[c];\n\t                continue\n\t            }\n\n\t            if (c < ' ') {\n\t                var hexString = c.charCodeAt(0).toString(16);\n\t                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n\t                continue\n\t            }\n\n\t            product += c;\n\t        }\n\n\t        var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) { return (quotes[a] < quotes[b]) ? a : b; });\n\n\t        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n\t        return quoteChar + product + quoteChar\n\t    }\n\n\t    function serializeObject (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var keys = propertyList || Object.keys(value);\n\t        var partial = [];\n\t        for (var i = 0, list = keys; i < list.length; i += 1) {\n\t            var key = list[i];\n\n\t            var propertyString = serializeProperty(key, value);\n\t            if (propertyString !== undefined) {\n\t                var member = serializeKey(key) + ':';\n\t                if (gap !== '') {\n\t                    member += ' ';\n\t                }\n\t                member += propertyString;\n\t                partial.push(member);\n\t            }\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '{}';\n\t        } else {\n\t            var properties;\n\t            if (gap === '') {\n\t                properties = partial.join(',');\n\t                final = '{' + properties + '}';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                properties = partial.join(separator);\n\t                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\n\t    function serializeKey (key) {\n\t        if (key.length === 0) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        var firstChar = String.fromCodePoint(key.codePointAt(0));\n\t        if (!util.isIdStartChar(firstChar)) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        for (var i = firstChar.length; i < key.length; i++) {\n\t            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n\t                return quoteString(key, true)\n\t            }\n\t        }\n\n\t        return key\n\t    }\n\n\t    function serializeArray (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var partial = [];\n\t        for (var i = 0; i < value.length; i++) {\n\t            var propertyString = serializeProperty(String(i), value);\n\t            partial.push((propertyString !== undefined) ? propertyString : 'null');\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '[]';\n\t        } else {\n\t            if (gap === '') {\n\t                var properties = partial.join(',');\n\t                final = '[' + properties + ']';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                var properties$1 = partial.join(separator);\n\t                final = '[\\n' + indent + properties$1 + ',\\n' + stepback + ']';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\t};\n\n\tvar JSON5 = {\n\t    parse: parse,\n\t    stringify: stringify,\n\t};\n\n\tvar lib = JSON5;\n\n\tvar es5 = lib;\n\n\treturn es5;\n\n})));\n","/*!\r\n *  decimal.js v10.4.2\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or ±Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var halfPi,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.asin();\r\n  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return halfPi.minus(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'lt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'gt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is ±Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with different signs.\r\n    // Return NaN if both are ±Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is ±Infinity or x is ±0.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with the same sign.\r\n    // Return NaN if both are ±Infinity with different signs.\r\n    // Return y if x is finite and y is ±Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, ±Infinity or ±0...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n      ? NaN\r\n\r\n      // Return ±Infinity if either is ±Infinity.\r\n      // Return ±0 if either is ±0.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, ±0)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either ±Infinity, NaN or ±0?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n */\r\nfunction maxOrMin(Ctor, args, ltgt) {\r\n  var y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    } else if (x[ltgt](y)) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(±0)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// ±Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|Decimal} The y-coordinate.\r\n * x {number|string|Decimal} The x-coordinate.\r\n *\r\n * atan2(±0, -0)               = ±pi\r\n * atan2(±0, +0)               = ±0\r\n * atan2(±0, -x)               = ±pi for x > 0\r\n * atan2(±0, x)                = ±0 for x > 0\r\n * atan2(-y, ±0)               = -pi/2 for y > 0\r\n * atan2(y, ±0)                = pi/2 for y > 0\r\n * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n * atan2(±Infinity, +Infinity) = ±pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both ±Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is ±Infinity or y is ±0\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is ±Infinity or x is ±0\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|Decimal}\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    // Duplicate.\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n\r\n      // Infinity, NaN.\r\n      } else if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n\r\n    } else if (t !== 'string') {\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    // Minus sign?\r\n    if ((i = v.charCodeAt(0)) === 45) {\r\n      v = v.slice(1);\r\n      x.s = -1;\r\n    } else {\r\n      // Plus sign?\r\n      if (i === 43) v = v.slice(1);\r\n      x.s = 1;\r\n    }\r\n\r\n    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|Decimal} The argument of the logarithm.\r\n * y {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, 'lt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 'gt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The base.\r\n * y {number|string|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n","/**\n * @license Fraction.js v4.2.0 05/03/2022\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throw Fraction['InvalidParameter'];\n    }\n    return n * s;\n  }\n\n  // Creates a new Fraction internally without the need of the bulky constructor\n  function newFraction(n, d) {\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    var f = Object.create(Fraction.prototype);\n    f[\"s\"] = n < 0 ? -1 : 1;\n\n    n = n < 0 ? -n : n;\n\n    var a = gcd(n, d);\n\n    f[\"n\"] = n / a;\n    f[\"d\"] = d / a;\n    return f;\n  }\n\n  function factorize(num) {\n\n    var factors = {};\n\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n\n      while (n % i === 0) {\n        n/= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n      s+= 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1)\n        factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n    return factors;\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n\n      if (n % 1 !== 0 || d % 1 !== 0) {\n        throw Fraction['NonIntegerParameter'];\n      }\n\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n          {\n            if (\"d\" in p1 && \"n\" in p1) {\n              n = p1[\"n\"];\n              d = p1[\"d\"];\n              if (\"s\" in p1)\n                n*= p1[\"s\"];\n            } else if (0 in p1) {\n              n = p1[0];\n              if (1 in p1)\n                d = p1[1];\n            } else {\n              throw Fraction['InvalidParameter'];\n            }\n            s = n * d;\n            break;\n          }\n        case \"number\":\n          {\n            if (p1 < 0) {\n              s = p1;\n              p1 = -p1;\n            }\n\n            if (p1 % 1 === 0) {\n              n = p1;\n            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n              if (p1 >= 1) {\n                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n                p1/= z;\n              }\n\n              // Using Farey Sequences\n              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n              while (B <= N && D <= N) {\n                M = (A + C) / (B + D);\n\n                if (p1 === M) {\n                  if (B + D <= N) {\n                    n = A + C;\n                    d = B + D;\n                  } else if (D > B) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                  break;\n\n                } else {\n\n                  if (p1 > M) {\n                    A+= C;\n                    B+= D;\n                  } else {\n                    C+= A;\n                    D+= B;\n                  }\n\n                  if (B > N) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                }\n              }\n              n*= z;\n            } else if (isNaN(p1) || isNaN(p2)) {\n              d = n = NaN;\n            }\n            break;\n          }\n        case \"string\":\n          {\n            B = p1.match(/\\d+|./g);\n\n            if (B === null)\n              throw Fraction['InvalidParameter'];\n\n            if (B[A] === '-') {// Check for minus sign at the beginning\n              s = -1;\n              A++;\n            } else if (B[A] === '+') {// Check for plus sign at the beginning\n              A++;\n            }\n\n            if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n              w = assign(B[A++], s);\n            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n              if (B[A] !== '.') { // Handle 0.5 and .5\n                v = assign(B[A++], s);\n              }\n              A++;\n\n              // Check for decimal places\n              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n                w = assign(B[A], s);\n                y = Math.pow(10, B[A].length);\n                A++;\n              }\n\n              // Check for repeating places\n              if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n                x = assign(B[A + 1], s);\n                z = Math.pow(10, B[A + 1].length) - 1;\n                A+= 3;\n              }\n\n            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n              w = assign(B[A], s);\n              y = assign(B[A + 2], 1);\n              A+= 3;\n            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n              v = assign(B[A], s);\n              w = assign(B[A + 2], s);\n              y = assign(B[A + 4], 1);\n              A+= 5;\n            }\n\n            if (B.length <= A) { // Check for more tokens on the stack\n              d = y * z;\n              s = /* void */\n              n = x + d * v + z * w;\n              break;\n            }\n\n            /* Fall through on error */\n          }\n        default:\n          throw Fraction['InvalidParameter'];\n      }\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n      d/= 2) {\n    }\n\n    for (; d % 5 === 0;\n      d/= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n  function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a%= b;\n      if (!a)\n        return b;\n      b%= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    parse(a, b);\n\n    if (this instanceof Fraction) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse variable a\n      this[\"s\"] = P[\"s\"];\n      this[\"n\"] = P[\"n\"] / a;\n      this[\"d\"] = P[\"d\"] / a;\n    } else {\n      return newFraction(P['s'] * P['n'], P['d']);\n    }\n  }\n\n  Fraction['DivisionByZero'] = new Error(\"Division by Zero\");\n  Fraction['InvalidParameter'] = new Error(\"Invalid argument\");\n  Fraction['NonIntegerParameter'] = new Error(\"Parameters must be integer\");\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return newFraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n        this[\"d\"] * P[\"n\"]\n      );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return newFraction(this['s'] * this['n'], this['d']);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        throw Fraction['DivisionByZero'];\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return newFraction(\n        this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n        P[\"d\"] * this[\"d\"]\n      );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return newFraction(0, 1);\n      }\n      return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(a, b) {\n\n      parse(a, b);\n\n      // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n\n        if (P['s'] < 0) {\n          return newFraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return newFraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      }\n\n      // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n      if (this['s'] < 0) return null;\n\n      // Now prime factor n and d\n      var N = factorize(this['n']);\n      var D = factorize(this['d']);\n\n      // Exponentiate and take root for n and d individually\n      var n = 1;\n      var d = 1;\n      for (var k in N) {\n        if (k === '1') continue;\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n        N[k]*= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k]/= P['d'];\n        } else return null;\n        n*= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k]*= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k]/= P['d'];\n        } else return null;\n        d*= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return newFraction(d, n);\n      }\n      return newFraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      eps = eps || 0.001;\n\n      var thisABS = this['abs']();\n      var cont = thisABS['toContinued']();\n\n      for (var i = 1; i < cont.length; i++) {\n\n        var s = newFraction(cont[i - 1], 1);\n        for (var k = i - 2; k >= 0; k--) {\n          s = s['inverse']()['add'](cont[k]);\n        }\n\n        if (s['sub'](thisABS)['abs']().valueOf() < eps) {\n          return s['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction(true) => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          str+= \" \";\n          n%= d;\n        }\n\n        str+= n;\n        str+= '/';\n        str+= d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          n%= d;\n        }\n\n        str+= \"\\\\frac{\";\n        str+= n;\n        str+= '}{';\n        str+= d;\n        str+= '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] < 0 ? \"-\" : \"\";\n\n      str+= N / D | 0;\n\n      N%= D;\n      N*= 10;\n\n      if (N)\n        str+= \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \"(\";\n        for (var i = cycLen; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(Fraction, \"__esModule\", { 'value': true });\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n","import { Decimal } from \"decimal.js\"\r\nimport Fraction from \"fraction.js\"\r\n\r\nimport {error} from './Logger.svelte'\r\n\r\ntype Float = number | Decimal;\r\ntype OneOrMany<T> = T | T[];\r\n\r\nexport function throwError(msg: string): never {\r\n    error(msg);\r\n    throw(msg);\r\n}\r\n\r\n// WARN: rand(min, max) is inclusive   min <= result <= max\r\nexport function rand(min: number, max: number) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max + 1);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport function randFrom<T>(arr: readonly T[]): T {\r\n    return arr[rand(0, arr.length-1)];\r\n}\r\n\r\nexport function randFromIf<T>(arr: readonly T[], \r\n    iff: (x: T) => boolean): T \r\n{\r\n    let filtered = arr.filter(iff);\r\n    // assert there is any number in filtered array\r\n    return filtered[rand(0, filtered.length-1)];\r\n}\r\n\r\nexport const trueFalse = \r\n    () => rand(0, 1) == 0;\r\n\r\nexport const randSign = () => \r\n    rand(0, 1) == 0 ? +1 : -1;\r\n\r\nexport function pm(num: number): number\r\nexport function pm(num: Decimal): Decimal\r\nexport function pm(num: number | Decimal)\r\n{\r\n    let plusOrMinus = (rand(0, 1) == 0 ? +1 : -1);\r\n    return typeof num === 'number' ?\r\n        num * plusOrMinus : \r\n        num.mul(plusOrMinus);\r\n}\r\n\r\nexport function randId(len: number, charSet?: string) {\r\n    charSet ??= 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var str = '';\r\n    for (var i = 0; i < len; i++) {\r\n        var indx = Math.floor(Math.random() * charSet.length);\r\n        str += charSet.charAt(indx);\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function shuffle<T>(src: readonly T[]): T[] {\r\n    let dst = [...src];\r\n    for (let i = dst.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [dst[i], dst[j]] = [dst[j], dst[i]];\r\n    }\r\n    return dst;\r\n}\r\n\r\nlet audio = new AudioContext();\r\n\r\nexport function beep() {\r\n    var osc = audio.createOscillator();\r\n    var gain = audio.createGain();\r\n\r\n    osc.connect(gain);\r\n    gain.connect(audio.destination);\r\n\r\n    gain.gain.value = 0.5;\r\n    osc.frequency.value = 440;\r\n    osc.type = \"triangle\";\r\n\r\n    osc.start();\r\n\r\n    setTimeout(() => osc.stop(), 50);\r\n} \r\n\r\nexport const run = (task: () => void) =>\r\n    setTimeout(task, 0);\r\n\r\nexport const delay = (ms: number) =>\r\n    new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport const range = (start: number, end: number) =>\r\n    Array.from({length: (end - start)}, (_, k) => k + start);\r\n\r\nexport function safe(func: () => void) {\r\n    try {\r\n        return func();\r\n    }\r\n    catch (err) {\r\n        let name = func.name;\r\n        if (name === \"\") name = \"unknown\";\r\n        error(`Error in ${name}`, err);\r\n    }\r\n}\r\n\r\nexport const splitNoEmpty = (str: string, delim?: string) =>\r\n    str.split(delim ?? \" \").filter(Boolean).map(x => x.trim());\r\n\r\nexport const isFraction = (d: Decimal) =>\r\n    !d.toFraction()[1].eq(1);\r\n\r\ntype MapT<T, Dst> = T extends any[] ? Dst[] : Dst;\r\n\r\nexport function n2d<T extends OneOrMany<Float>>(arg: T): MapT<T, Decimal> {\r\n    if (typeof arg === 'number') \r\n        return <any> new Decimal(arg);\r\n\r\n    if (!Array.isArray(arg))\r\n        return <any> arg;\r\n\r\n    return <any> arg.map(\r\n        x => typeof x === 'number' ? new Decimal(x) : x);\r\n}\r\n\r\nexport function d2n<T extends OneOrMany<Float>>(arg: T): MapT<T, number> {\r\n    if (typeof arg === 'number') \r\n        return <any> arg;\r\n\r\n    if (!Array.isArray(arg))\r\n        return <any> arg.toNumber();\r\n\r\n    return <any> arg.map(\r\n        x => typeof x === 'number' ? x : x.toNumber());\r\n}\r\n\r\nexport function d2t(d: Decimal, excludeWhole = true): string {\r\n    let parts = d.toFraction();\r\n\r\n    if (parts[1].eq(1))\r\n        return d.toNumber().toLocaleString('en');\r\n\r\n    let fr = new Fraction(d.toNumber());\r\n\r\n    return fr.toFraction(excludeWhole);\r\n}\r\n\r\nexport const nd2f = (n: Decimal, d: Decimal) =>\r\n    new Fraction(n.toNumber(), d.toNumber());\r\n\r\nexport const d2f = (d: Decimal) => \r\n    new Fraction(d.toNumber());\r\n\r\nexport const f2d = (fr: Fraction) => \r\n    n2d(fr.n).div(fr.d);\r\n\r\nexport const t2d = (str: string) =>\r\n    f2d(new Fraction(str));\r\n\r\nexport function allAreUnique<T>(arr: T[]): boolean {\r\n    let set = new Set<string>();\r\n    for (let x of arr) {\r\n        let str = `${x}`;\r\n        if (set.has(str)) return false;\r\n        set.add(str);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const vibrateSOS = () =>\r\n    navigator.vibrate([100,30,100,30,100,30,200,30,200,30,200,30,100,30,100,30,100]);\r\n\r\nexport function isNumeric(value: string): boolean {\r\n    return /^-?\\d+$/.test(value);\r\n}\r\n","import JSON5 from \"json5\"\r\n\r\nimport { splitNoEmpty } from \"./Helpers\";\r\nimport { error } from \"./Logger.svelte\";\r\n\r\n\r\ninterface Card {\r\n    userId: string;\r\n    content: string;\r\n    config: string;\r\n    problemId: string;\r\n    answers: string;\r\n    variables: string;\r\n    sets: string;\r\n    options: string;\r\n}\r\n\r\ndeclare let ankiCard: Card;\r\n\r\ninterface IAnki {\r\n    hideLoader(): void;\r\n    getCard(): Card;\r\n    getConfig<Config>(): Config;\r\n    commands(): Iterable<string[]>;\r\n    tokens(): string[];\r\n}\r\n\r\nclass CAnki implements IAnki {\r\n    hideLoader() {\r\n        let loader = document.getElementById(\"loader\");\r\n        loader.style.display = \"none\";\r\n    }\r\n\r\n    getCard(): Card {\r\n        return ankiCard;\r\n    }\r\n\r\n    getConfig<Config>(): Config {\r\n        try {\r\n            return JSON5.parse(ankiCard.config);\r\n        }\r\n        catch (err) {\r\n            error(err);\r\n            return <any> {};\r\n        }\r\n    }\r\n\r\n    *commands() {\r\n        let content = ankiCard.content.replaceAll('\\n', ' ');\r\n\r\n        if (!content.includes(';')) return;\r\n\r\n        let cmds = ankiCard.content.split(';')[0];\r\n\r\n        for (let cmd of splitNoEmpty(cmds, ',')) {\r\n            yield splitNoEmpty(cmd, ' ');\r\n        }\r\n\r\n    }\r\n\r\n    tokens(): string[] {\r\n        let content = ankiCard.content.replaceAll('\\n', ' ');\r\n\r\n        let tokens = content.includes(';') ?\r\n            content.split(';')[1] :\r\n            content;\r\n\r\n        return splitNoEmpty(tokens, ',');\r\n    }\r\n}\r\n\r\nexport const Anki: IAnki = new CAnki();\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { delay, safe, run } from \"./Helpers\";\r\n\r\n    declare var MathJax;\r\n\r\n    let _initialized: boolean = false;\r\n    let _refreshIsRequested: boolean = false;\r\n\r\n    // refreshes are delayed on initialization\r\n\r\n    function refresh() {\r\n        if (!_refreshIsRequested) return;\r\n\r\n        _refreshIsRequested = false;\r\n\r\n        safe(() => MathJax.typeset());\r\n    }\r\n\r\n    export function refreshMath() {\r\n        _refreshIsRequested = true;\r\n\r\n        if (!_initialized) return;\r\n\r\n        run(refresh);\r\n    }\r\n\r\n    export function initMath() {\r\n        run(async () => {\r\n            await delay(2000);\r\n            _initialized = true;\r\n            refresh();\r\n        });\r\n    }\r\n</script>\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { randFrom, run } from \"./Helpers\";\r\n\r\n    const names = [\"yes\", \"no\", \"done\", \"idle\", \"sound-on\", \"sound-off\", \r\n        \"on-drag-start\", \"on-drag-end\", \"time-is-up\"] as const;\r\n\r\n    export type Mp3Name = typeof names[number];\r\n\r\n    let _library: Map<Mp3Name, HTMLAudioElement[]> = new Map();\r\n    let _soundOn: boolean = true;\r\n\r\n    function loadFrom(assetsFolder: string) {\r\n\r\n        function loadNext(folder: string, name: Mp3Name, no: number) {\r\n            let fileName = folder === \"\" ?\r\n                `${name}-${no}.mp3` :\r\n                `${folder}/${name}-${no}.mp3`;\r\n\r\n            let audio = new Audio(fileName);\r\n\r\n            audio.addEventListener(\"canplaythrough\", _ => {\r\n                // console.log(`loaded: ${fileName}`);\r\n                let tracks = _library.get(name);\r\n                tracks.push(audio);\r\n                run(() => loadNext(folder, name, no + 1));\r\n            }, {once: true});\r\n        }\r\n\r\n        names.forEach(name => {\r\n             // console.log(`loading tracks of '${name}'`);\r\n            _library.set(name, []);\r\n            run(() => loadNext(assetsFolder, name, 1))\r\n        });\r\n    }\r\n\r\n    interface IMp3 {\r\n        play(name: Mp3Name);\r\n        buildMp3Library(assetsFolder: string, soundOn: boolean);\r\n        soundSwitch(soundOn: boolean);\r\n        playRandom();\r\n        readonly soundIsOn: boolean;\r\n    }\r\n\r\n    function play(name: Mp3Name) {\r\n        let tracks = _library.get(name);\r\n\r\n        if (!tracks || tracks.length === 0) return;\r\n\r\n        let track = randFrom(tracks);\r\n\r\n        track.play().catch(err => {});\r\n    }\r\n\r\n    class CMp3 implements IMp3 {\r\n        play(name: Mp3Name) {\r\n            if (!_soundOn) return;\r\n\r\n            play(name);\r\n        }\r\n\r\n        buildMp3Library(assetsFolder: string, soundOn: boolean) {\r\n            _soundOn = soundOn;\r\n            run(() => loadFrom(\"\"));\r\n            run(() => loadFrom(assetsFolder));\r\n        }\r\n\r\n        soundSwitch(soundOn: boolean) {\r\n            if (_soundOn === soundOn) return;\r\n\r\n            play(soundOn ? \"sound-on\" : \"sound-off\");\r\n            _soundOn = soundOn;\r\n        }\r\n\r\n        playRandom() {\r\n            if (!_soundOn) return;\r\n\r\n            play(randFrom(names));\r\n        }\r\n\r\n        get soundIsOn() {\r\n            return _soundOn;\r\n        }\r\n    }\r\n\r\n    export const Mp3: IMp3 = new CMp3();\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { randId } from \"./Helpers\";\r\n\r\n\r\n    interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\r\n    let str = p => `[${p.x}x${p.y}]`;\r\n\r\n    export interface DragArgs {\r\n        id: string,\r\n        start: Point,\r\n        offset: Point\r\n    }\r\n\r\n    export interface DragEvents {\r\n        \"drag:start\": DragArgs,\r\n        \"drag:end\": DragArgs,\r\n        \"drag:move\": DragArgs,\r\n        \"drag:other\": {}\r\n    }\r\n\r\n    export type EventName = keyof(DragEvents);\r\n\r\n    interface Config {\r\n        id: string;\r\n        snapTo: [number, number];\r\n    }\r\n\r\n    type Options = Partial<Config>;\r\n\r\n    let _activeDrags: Set<HTMLElement> = new Set();\r\n\r\n    export function beingDragged(elem: HTMLElement) {\r\n        return _activeDrags.has(elem);\r\n    }\r\n\r\n    export function handleDragEvents(elem: HTMLElement, options?: Options) {\r\n\r\n        let _config: Config = {\r\n            id: options?.id ?? randId(5),\r\n            snapTo: options?.snapTo ?? [1, 1]\r\n        }\r\n\r\n        let _myId = -1;\r\n        let _start: Point = {x: 0, y: 0};\r\n        let _last: Point = {x: 0, y: 0};\r\n\r\n        let _skippedMoves: number = 0;\r\n        let _moves: number = 0;\r\n\r\n        function fire(name: EventName, args?: DragArgs) {\r\n            switch (name) {\r\n                case \"drag:start\":\r\n                    _activeDrags.add(elem);\r\n                    break;\r\n                case \"drag:end\":\r\n                    _activeDrags.delete(elem);\r\n                    break;\r\n            }\r\n            elem.dispatchEvent(\r\n                new CustomEvent(name, { detail: args })\r\n            );\r\n        }        \r\n\r\n        function makeArgs(touch: Touch, start?: Point): DragArgs {\r\n            let pnt: Point = {\r\n                x: (.5 + touch.clientX) | 0,\r\n                y: (.5 + touch.clientY) | 0,\r\n            }\r\n\r\n            start ??= pnt;\r\n\r\n            let offset: Point = {\r\n                x: pnt.x - start.x,\r\n                y: pnt.y - start.y\r\n            }\r\n\r\n            return {\r\n                id: _config.id,\r\n                start, offset\r\n            }\r\n        }\r\n\r\n        function snapToGrid(args: DragArgs, last: Point): boolean {\r\n            let sameCell = \r\n                Math.abs(last.x - args.offset.x) < _config.snapTo[0] &&\r\n                Math.abs(last.y - args.offset.y) < _config.snapTo[1];\r\n\r\n            if (sameCell) return false;\r\n\r\n            args.offset.x -= args.offset.x % _config.snapTo[0]\r\n            args.offset.y -= args.offset.y % _config.snapTo[1]\r\n\r\n            return true;\r\n        }\r\n\r\n        function onTouchStart(ev: TouchEvent) {\r\n            if (_myId !== -1)\r\n                return fire(\"drag:other\");\r\n\r\n            let touch = ev.changedTouches[0];\r\n            let args = makeArgs(touch);\r\n\r\n            _myId = touch.identifier;\r\n            _start = args.start;\r\n            _last = args.offset;\r\n            _moves = 0;\r\n            _skippedMoves = 0;\r\n\r\n            // console.log(`touch start on ${_config.id} (${_myId}) at ${str(_start)}`);\r\n\r\n            fire(\"drag:start\", args);\r\n        }\r\n\r\n        function onTouchMove(ev: TouchEvent) {\r\n            let touch = ev.changedTouches[0];\r\n\r\n            if (_myId !== touch.identifier)\r\n                return _skippedMoves++;\r\n\r\n            let args = makeArgs(touch, _start);\r\n\r\n            if (!snapToGrid(args, _last))\r\n                return _skippedMoves++;\r\n            \r\n            _last = args.offset;\r\n            _moves++;\r\n\r\n            fire(\"drag:move\", args);\r\n        }\r\n\r\n        async function onTouchEnd(ev: TouchEvent) {\r\n            let touch = ev.changedTouches[0];\r\n\r\n            if (_myId !== touch.identifier)\r\n                return fire(\"drag:other\");\r\n\r\n            let args = makeArgs(touch, _start);\r\n\r\n            // console.log(`touch end on ${_config.id} (${_myId}) at ${str(args.offset)} moves=${_moves} (skipped ${_skippedMoves})`);\r\n\r\n            _myId = -1;\r\n\r\n            fire(\"drag:end\", args);\r\n        }\r\n\r\n        elem.addEventListener(\"touchstart\", onTouchStart, {passive: true});\r\n        elem.addEventListener(\"touchmove\", onTouchMove, {passive: true});\r\n        elem.addEventListener(\"touchend\", onTouchEnd, {passive: true});\r\n        elem.addEventListener(\"touchcancel\", onTouchEnd, {passive: true});\r\n\r\n        return {\r\n            destroy() {\r\n                elem.removeEventListener(\"touchstart\", onTouchStart);\r\n                elem.removeEventListener(\"touchmove\", onTouchMove);\r\n                elem.removeEventListener(\"touchend\", onTouchEnd);\r\n                elem.removeEventListener(\"touchcancel\", onTouchEnd);\r\n            }\r\n        }\r\n    }\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { beingDragged } from \"./DragHandler.svelte\";\r\n    import { delay, randFrom, rand, run } from \"./Helpers\";\r\n\r\n    let Config = {\r\n        duration: 500,\r\n        interval: 10000,\r\n        jitter: 7000,\r\n    }\r\n\r\n    let zoomOut = [\r\n        { transform: 'scale(1, 1)' },\r\n        { transform: 'scale(1.03, 1.03)' },\r\n        { transform: 'scale(1, 1)' }\r\n    ];\r\n    \r\n    let zoomIn = [\r\n        { transform: 'scale(1, 1)' },\r\n        { transform: 'scale(0.98, 0.98)' },\r\n        { transform: 'scale(1, 1)' }\r\n    ];\r\n\r\n    let xShift = [\r\n        { transform: 'translate(0px, 0px)' },\r\n        { transform: 'translate(-1px, 0px)' },\r\n        { transform: 'translate(+1px, 0px)' },\r\n        { transform: 'translate(0px, 0px)' }\r\n    ];\r\n    \r\n    let yShift = [\r\n        { transform: 'translate(0px, 0px)' },\r\n        { transform: 'translate(0px, -1px)' },\r\n        { transform: 'translate(0px, +1px)' },\r\n        { transform: 'translate(0px, 0px)' }\r\n    ];\r\n    \r\n    let xyShift = [\r\n        { transform: 'translate(0px, 0px)' },\r\n        { transform: 'translate(-1px, -1px)' },\r\n        { transform: 'translate(+1px, +1px)' },\r\n        { transform: 'translate(0px, 0px)' }\r\n    ];\r\n    \r\n    let yxShift = [\r\n        { transform: 'translate(0px, 0px)' },\r\n        { transform: 'translate(+1px, -1px)' },\r\n        { transform: 'translate(-1px, +1px)' },\r\n        { transform: 'translate(0px, 0px)' }\r\n    ];\r\n    \r\n    let rotate = [\r\n        { transform: 'rotate(0deg)' },\r\n        { transform: 'rotate(-2deg)' },\r\n        { transform: 'rotate(+2deg)' },\r\n        { transform: 'rotate(0deg)' }\r\n    ];\r\n\r\n    let pulses = [\r\n        zoomOut, zoomIn,\r\n        xShift, yShift, xyShift, yxShift,\r\n        rotate\r\n    ];\r\n\r\n    async function startPulsing(elem: HTMLElement, config: typeof Config) {\r\n        for (;;) {\r\n            let {interval, jitter, duration} = config;\r\n            let timeout = rand(interval - jitter, interval + jitter);\r\n\r\n            await delay(timeout);\r\n\r\n            if (beingDragged(elem))\r\n                continue;\r\n\r\n            let pulse = randFrom(pulses);\r\n            elem.animate(pulse, duration);\r\n        }\r\n    }\r\n\r\n    export function pulse(elem: HTMLElement, config?: typeof Config) {\r\n        run(() => startPulsing(elem, config ?? Config));\r\n    }\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { handleDragEvents } from './DragHandler.svelte';\r\n    import type { EventName, DragArgs } from './DragHandler.svelte';\r\n    import type { Mp3Name } from \"./Mp3.svelte\"\r\n    import { Mp3 } from './Mp3.svelte';\r\n\r\n\r\n    interface BounceOptions {\r\n        id?: string;\r\n        snapTo?: [number, number];\r\n    }\r\n\r\n    type DragEvent = CustomEvent<DragArgs>;\r\n    type Point = DragArgs[\"start\"];\r\n\r\n    export function bounceOnDrag(elem: HTMLElement, options?: BounceOptions) {\r\n\r\n        options ??= {}\r\n        options.snapTo ??= [5, 5];\r\n\r\n        function setTranslate(pnt: Point) {\r\n            elem.style.transform = `translate3d(${pnt.x}px, ${pnt.y}px, 0px)`;\r\n        }\r\n\r\n        function removeTranslation() {\r\n            elem.style.transform = null;\r\n        }\r\n\r\n        function bounceBack(from: Point) {\r\n\r\n            let back = [\r\n                { transform: `translate3d(0px, 0px, 0px)` },\r\n            ];\r\n\r\n            elem.animate(back, {\r\n                duration: 100,\r\n                easing: \"cubic-bezier(.87,.74,.96,1.83)\"\r\n            })\r\n            .onfinish = () => removeTranslation();\r\n        }\r\n\r\n        function onDragStart(ev: DragEvent) {\r\n            Mp3.play(\"on-drag-start\");\r\n        }\r\n\r\n        function onDragMove(ev: DragEvent) {\r\n            setTranslate(ev.detail.offset);\r\n        }\r\n\r\n        function onDragEnd(ev: DragEvent) {\r\n            Mp3.play(\"on-drag-end\");\r\n            bounceBack(ev.detail.offset)\r\n        }\r\n\r\n        elem.addEventListener(\"drag:start\", onDragStart);\r\n        elem.addEventListener(\"drag:move\", onDragMove);\r\n        elem.addEventListener(\"drag:end\", onDragEnd);\r\n\r\n        let drag = handleDragEvents(elem, options);\r\n\r\n        return {\r\n            destroy() {\r\n                drag.destroy();\r\n                elem.removeEventListener(\"drag:start\", onDragStart);\r\n                elem.removeEventListener(\"drag:move\", onDragMove);\r\n                elem.removeEventListener(\"drag:end\", onDragEnd);\r\n            }\r\n        }\r\n    }\r\n\r\n    type SoundMap = Map<EventName, Mp3Name>;\r\n\r\n    export function soundsOnDrag(elem: HTMLElement, map?: SoundMap) {\r\n\r\n        map ??= new Map();\r\n\r\n        function onDragStart(ev: DragEvent) {\r\n            Mp3.play(map.get(\"drag:start\"));\r\n        }\r\n\r\n        function onDragEnd(ev: DragEvent) {\r\n            Mp3.play(map.get(\"drag:end\"));\r\n        }\r\n\r\n        elem.addEventListener(\"drag:start\", onDragStart);\r\n        elem.addEventListener(\"drag:end\", onDragEnd);\r\n\r\n        let drag = handleDragEvents(elem);\r\n\r\n        return {\r\n            destroy() {\r\n                drag.destroy();\r\n                elem.removeEventListener(\"drag:start\", onDragStart);\r\n                elem.removeEventListener(\"drag:end\", onDragEnd);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n</script>","<script>\r\n\timport { onMount } from 'svelte';\r\n    import { pulse } from './Pulse.svelte';\r\n    import { Mp3 } from \"./Mp3.svelte\"\r\n    import { bounceOnDrag } from \"./OnDrag.svelte\";\r\n\r\n    export let ga;\r\n\r\n    let soundOn = Mp3.soundIsOn;\r\n\tlet time = new Date();\r\n\r\n\t// these automatically update when `time`\r\n\t// changes, because of the `$:` prefix\r\n\t$: hours = time.getHours();\r\n\t$: minutes = time.getMinutes();\r\n\t$: seconds = time.getSeconds();\r\n\r\n\tonMount(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\ttime = new Date();\r\n\t\t}, 1000);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(interval);\r\n\t\t};\r\n\t});\r\n\r\n    function soundSwitch() {\r\n        soundOn ^= true;\r\n        Mp3.soundSwitch(soundOn);\r\n    }\r\n</script>\r\n\r\n<svg viewBox='-50 -50 100 100' style=\"grid-area:{ga}\"\r\n    on:click={soundSwitch}\r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n\t<circle class={soundOn ? 'clock-face-enabled' : 'clock-face-disabled'} r='48'/>\r\n\r\n\t<!-- markers -->\r\n\t{#each [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] as minute}\r\n\t\t<line\r\n\t\t\tclass='major'\r\n\t\t\ty1='35'\r\n\t\t\ty2='45'\r\n\t\t\ttransform='rotate({30 * minute})'\r\n\t\t/>\r\n\r\n\t\t{#each [1, 2, 3, 4] as offset}\r\n\t\t\t<line\r\n\t\t\t\tclass='minor'\r\n\t\t\t\ty1='42'\r\n\t\t\t\ty2='45'\r\n\t\t\t\ttransform='rotate({6 * (minute + offset)})'\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t{/each}\r\n\r\n\t<!-- hour hand -->\r\n\t<line\r\n\t\tclass='hour'\r\n\t\ty1='2'\r\n\t\ty2='-20'\r\n\t\ttransform='rotate({30 * hours + minutes / 2})'\r\n\t/>\r\n\r\n\t<!-- minute hand -->\r\n\t<line\r\n\t\tclass='minute'\r\n\t\ty1='4'\r\n\t\ty2='-30'\r\n\t\ttransform='rotate({6 * minutes + seconds / 10})'\r\n\t/>\r\n\r\n\t<!-- second hand -->\r\n\t<g transform='rotate({6 * seconds})'>\r\n\t\t<line class='second' y1='10' y2='-38'/>\r\n\t\t<line class='second-counterweight' y1='10' y2='2'/>\r\n\t</g>\r\n</svg>\r\n\r\n<style>\r\n\tsvg {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.clock-face-enabled {\r\n\t\tstroke: orangered;\r\n\t\tfill: white;\r\n\t}\r\n\r\n\t.clock-face-disabled {\r\n\t\tstroke: #333;\r\n\t\tfill: white;\r\n\t}\r\n\r\n\t.minor {\r\n\t\tstroke: #999;\r\n\t\tstroke-width: 0.5;\r\n\t}\r\n\r\n\t.major {\r\n\t\tstroke: #333;\r\n\t\tstroke-width: 1;\r\n\t}\r\n\r\n\t.hour {\r\n\t\tstroke: #333;\r\n\t}\r\n\r\n\t.minute {\r\n\t\tstroke: #666;\r\n\t}\r\n\r\n\t.second, .second-counterweight {\r\n\t\tstroke: rgb(180,0,0);\r\n\t}\r\n\r\n\t.second-counterweight {\r\n\t\tstroke-width: 3;\r\n\t}\r\n</style>","/*\n * anime.js v3.2.1\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  nil: function (a) { return is.und(a) || a === null; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright © 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : \n      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width,\n    h: height,\n    vW: viewBox[2],\n    vH: viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress, isPathTargetInsideSVG) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;\n  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * scaleX;\n    case 'y': return (p.y - svg.y) * scaleY;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\n\nvar engine = (function () {\n  var raf;\n\n  function play() {\n    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {\n      raf = requestAnimationFrame(step);\n    }\n  }\n  function step(t) {\n    // memo on algorithm issue:\n    // dangerous iteration over mutable `activeInstances`\n    // (that collection may be updated from within callbacks of `tick`-ed animation instances)\n    var activeInstancesLength = activeInstances.length;\n    var i = 0;\n    while (i < activeInstancesLength) {\n      var activeInstance = activeInstances[i];\n      if (!activeInstance.paused) {\n        activeInstance.tick(t);\n        i++;\n      } else {\n        activeInstances.splice(i, 1);\n        activeInstancesLength--;\n      }\n    }\n    raf = i > 0 ? requestAnimationFrame(step) : undefined;\n  }\n\n  function handleVisibilityChange() {\n    if (!anime.suspendWhenDocumentHidden) { return; }\n\n    if (isDocumentHidden()) {\n      // suspend ticks\n      raf = cancelAnimationFrame(raf);\n    } else { // is back to active tab\n      // first adjust animations to consider the time that ticks were suspended\n      activeInstances.forEach(\n        function (instance) { return instance ._onDocumentVisibility(); }\n      );\n      engine();\n    }\n  }\n  if (typeof document !== 'undefined') {\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  return play;\n})();\n\nfunction isDocumentHidden() {\n  return !!document && document.hidden;\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)\n  instance._onDocumentVisibility = resetTime;\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    engine();\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.remove = function(targets) {\n    var targetsArray = parseTargets(targets);\n    removeTargetsFromInstance(targetsArray, instance);\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargetsFromInstance(targetsArray, instance) {\n  var animations = instance.animations;\n  var children = instance.children;\n  removeTargetsFromAnimations(targetsArray, animations);\n  for (var c = children.length; c--;) {\n    var child = children[c];\n    var childAnimations = child.animations;\n    removeTargetsFromAnimations(targetsArray, childAnimations);\n    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n  }\n  if (!animations.length && !children.length) { instance.pause(); }\n}\n\nfunction removeTargetsFromActiveInstances(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    removeTargetsFromInstance(targetsArray, instance);\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.1';\nanime.speed = 1;\n// TODO:#review: naming, documentation\nanime.suspendWhenDocumentHidden = true;\nanime.running = activeInstances;\nanime.remove = removeTargetsFromActiveInstances;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\nexport default anime;\n","<script lang=\"ts\">\r\n\r\n    import { onMount } from \"svelte\";\r\n    \r\n    import {rand, randFrom, range} from \"./Helpers\"\r\n\r\n    import anime from 'animejs/lib/anime.es'\r\n\r\n    let config = {\r\n        size: 18,\r\n        pos: [100, 120],\r\n        xSeed: [20, 100],\r\n        ySeed: [20, 120],\r\n        duration: 1500\r\n    }\r\n\r\n    interface Star {\r\n        box: HTMLElement\r\n        color: string\r\n    }\r\n\r\n    let stars: Star[];\r\n    let hidden: boolean = true;\r\n    \r\n    function reset() {\r\n        anime({\r\n            targets: stars.map(star => star.box),\r\n            translateX: 0,\r\n            translateY: 0,\r\n            rotate: 0,\r\n            opacity: 1,\r\n            duration: 0\r\n        });\r\n    }\r\n\r\n    export function play() {\r\n        let delay = () => rand(150, 300);\r\n        let translateX = () => randFrom([1, -1]) * (config.xSeed[0] + rand(0, config.xSeed[1]));\r\n        let translateY = () => randFrom([1, -1]) * (config.ySeed[0] + rand(0, config.ySeed[1]));\r\n        let rotate = () => rand(200, 360);\r\n        let scale = () => 1 + rand(1, 10) / 10;\r\n\r\n        reset();\r\n        hidden = false;\r\n\r\n        anime({\r\n            targets: stars.map(star => star.box),\r\n            translateX,\r\n            translateY,\r\n            rotate,\r\n            scale,\r\n            delay,\r\n            opacity: {\r\n                value: 0,\r\n                easing: 'linear',\r\n                delay: config.duration - 200,\r\n                duration: 500\r\n            },\r\n            easing: 'easeOutElastic',\r\n            duration: config.duration,\r\n            complete: () => hidden = true\r\n        })\r\n    }    \r\n\r\n    export let noOfStars: number = 150;\r\n\r\n    stars = range(0, noOfStars).map(() => { return {\r\n        box: undefined,\r\n        color: randFrom(['yellow', 'orange', 'red'])\r\n    }});\r\n\r\n    onMount(reset)\r\n\r\n</script>\r\n\r\n\r\n<div class:hidden>\r\n    {#each stars as star}\r\n        <div class=\"box\"\r\n            bind:this={star.box}\r\n            style=\"\r\n                --size: {config.size}px;\r\n                --left: {config.pos[0]}px;\r\n                --top: {config.pos[1]}px;\r\n            \"\r\n        >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" \r\n                viewBox=\"0 0 512 512\">\r\n                <polygon \r\n                    fill={star.color}\r\n                    stroke={star.color} \r\n                    stroke-width=\"37.6152\" \r\n                    stroke-linecap=\"round\" \r\n                    stroke-linejoin=\"round\" \r\n                    stroke-miterlimit=\"10\" \r\n                    points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 \r\n                            401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 \r\n                            29.274,197.007 188.165,173.919\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    {/each}\r\n</div>\r\n\r\n\r\n<style>\r\n    .hidden {\r\n        display: none;\r\n    }\r\n    .box {\r\n        position: absolute;\r\n        width: var(--size);\r\n        height: var(--size);\r\n        left: var(--left);\r\n        top: var(--top);\r\n        z-index: 1;\r\n    }\r\n</style>","<script context=\"module\" lang=\"ts\">\r\n\r\n    let callbacks: any = {};\r\n\r\n    export function onAny(name: string, cb: (args: any) => void): void {\r\n        let funcs = callbacks[name] ?? [];\r\n        funcs.push(cb);\r\n        callbacks[name] = funcs;\r\n    }\r\n\r\n    export function fireAny(name: string, args: any): void {\r\n        let funcs = callbacks[name] ?? [];\r\n        funcs.forEach(func => \r\n            setTimeout(() => func(args), 0));\r\n    }\r\n\r\n</script>\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import {fireAny} from \"./IoBus.svelte\"\r\n    import { rand } from \"./Helpers\";\r\n\r\n    export interface ITimedCmd {\r\n        reset();\r\n        cancel();\r\n    }\r\n\r\n    export class CTimedCmd implements ITimedCmd {\r\n        _cmd: string;\r\n        _timeout: number;\r\n        _jitter: number;\r\n        _timeoutId: any;\r\n\r\n        constructor(cmd: string, timeout: number, jitter?: number) {\r\n            this._cmd = cmd;\r\n            this._timeout = timeout;\r\n            this._jitter = jitter ?? 0;\r\n        }\r\n\r\n        set() {\r\n            let timeout = \r\n                rand(this._timeout - this._jitter, this._timeout + this._jitter);\r\n\r\n            this._timeoutId = setTimeout(\r\n                () => fireAny(this._cmd, {}), timeout\r\n            );\r\n        }\r\n\r\n        cancel() {\r\n            clearTimeout(this._timeoutId);\r\n        }\r\n\r\n        reset() {\r\n            this.cancel();\r\n            this.set();\r\n        }\r\n    }\r\n\r\n</script>\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import {onAny, fireAny} from \"./../core/IoBus.svelte\"\r\n    import {CTimedCmd} from \"./../core/TimedCmd.svelte\"\r\n    import type {ITimedCmd} from \"./../core/TimedCmd.svelte\"\r\n\r\n    export interface Config {\r\n        game: string,\r\n        rounds: number,\r\n        showHint: boolean,\r\n        soundOn: boolean\r\n    }\r\n    \r\n    export interface Game {\r\n        roundsLeft: number,\r\n        pair: number[],\r\n        nums: number[],\r\n        op: string,\r\n        sumDigit: number,\r\n        state: \"first-click\" | \"active\" | \"answered\",\r\n        answers: number[],\r\n        rightAt: number,\r\n        clickedAt: number,\r\n        showHint: boolean\r\n    }\r\n\r\n    export interface Round {\r\n        pair: number[],\r\n        nums: number[];\r\n        op: string;\r\n        sumDigit: number;\r\n        answers: number[];\r\n        rightAt: number;\r\n    }\r\n\r\n    export interface Msgs {\r\n        \"--cmd-new-round\": {}\r\n        \"--cmd-update-views\": Game\r\n        \"--evt-click\" : {}\r\n        \"--evt-answer\": {\r\n            index: number\r\n        }\r\n        \"--evt-yes\": {},\r\n        \"--evt-no\": {},\r\n        \"--evt-done\": {}\r\n        \"--cmd-idle\": {}\r\n    }\r\n\r\n    export function on<Name extends keyof(Msgs)>(name: Name, cb: (args: Msgs[Name]) => void): void {\r\n        onAny(name, cb);\r\n    }\r\n\r\n    export function fire<Name extends keyof(Msgs)>(name: Name, args?: Msgs[Name]): void {\r\n        fireAny(name, args);\r\n    }\r\n\r\n    export function newTimedCmd(cmd: keyof Msgs, timeout: number, jitter?: number): ITimedCmd {\r\n        return new CTimedCmd(cmd, timeout, jitter ?? 0);\r\n    }\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import {rand, randFrom, shuffle, trueFalse, randSign} from \"../core/Helpers\"\r\n    import {Anki} from './../core/Anki';\r\n    import {Mp3} from \"./../core/Mp3.svelte\";\r\n    import {error} from \"../core/Logger.svelte\";\r\n\r\n    import {newTimedCmd} from \"./Model.svelte\"\r\n    import {fire,} from './Model.svelte'\r\n    import type {Config, Game, Msgs, Round} from './Model.svelte'\r\n\r\n    interface IPlusOver {\r\n        newRound();\r\n        gotClicked();\r\n        gotAnswer(args: Msgs[\"--evt-answer\"]);\r\n        yes();\r\n        no();\r\n        done();\r\n        idle();\r\n    }\r\n\r\n    let _game: Game;\r\n    let _tcNewRound = newTimedCmd(\"--cmd-new-round\", 1000);\r\n    let _tcIdle = newTimedCmd(\"--cmd-idle\", 10000, 3000);\r\n\r\n    let _playbook: Round[] = [];\r\n    let _roundNo: number = -1;\r\n    let _m: number[] = [1, 8];\r\n\r\n    function getPair(): number[] {\r\n        let nums = Anki.tokens();\r\n        let pairs = [];\r\n        for (let i = 0; i < nums.length - 1; i += 2) {\r\n            pairs.push([\r\n                parseInt(nums[i]),\r\n                parseInt(nums[i+1])\r\n            ]);\r\n        }\r\n        let pair = randFrom(pairs);\r\n        return pair;\r\n    }\r\n\r\n    function splitToLines(numsInLine: number): number[][] {\r\n        let lines = [];\r\n        let line = [];\r\n\r\n        for (let token of Anki.tokens()) {\r\n            let num = parseInt(token);\r\n            line.push(num);\r\n\r\n            if (line.length == numsInLine) {\r\n                lines.push(line);\r\n                line = [];\r\n            }\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    function getLine(): number[] {\r\n        return randFrom(splitToLines(4));\r\n    }\r\n\r\n    function addPlusRound() {\r\n        let pair = getPair();\r\n\r\n        let sumDigit = (pair[0] + pair[1]) % 10;\r\n\r\n        let op = '+';\r\n\r\n        let a0 = pair[0];\r\n        let a1 = rand(_m[0], _m[1]);\r\n        let a = 10*a1 + a0;\r\n\r\n        let b0 = pair[1];\r\n        let b1 = rand(_m[0], _m[1] + 1 - a1);\r\n        let b = 10*b1 + b0;\r\n\r\n        let ans = a + b;\r\n\r\n        let nums = shuffle([a, b]);\r\n\r\n        let answers = shuffle([\r\n            ans,\r\n            ans + randSign() * rand(1, 9),\r\n            ans > 50 ? ans - 10 : ans + 10\r\n        ]);\r\n\r\n        let rightAt = answers.findIndex(x => x == ans);\r\n\r\n        _playbook.push({\r\n            pair,\r\n            nums,\r\n            op,\r\n            sumDigit,\r\n            answers,\r\n            rightAt\r\n        });\r\n    }\r\n\r\n    function addMinusRound() {\r\n        let pair = getPair();\r\n        let sumDigit = (pair[0] + pair[1]) % 10;\r\n\r\n        let op = '-';\r\n\r\n        let a0 = pair[0];\r\n        let a1 = rand(_m[0], _m[1] + 1);\r\n        let a = 10*a1 + a0;\r\n\r\n        let b1 = rand(_m[0], _m[1] + 1 - a1);\r\n        let b0 = pair[1];\r\n        let b = 10*b1 + b0;\r\n\r\n        let sum = a + b;\r\n\r\n        let nums = [sum, trueFalse() ? a : b];\r\n        let ans = sum - nums[1];\r\n\r\n        let answers = shuffle([\r\n            ans, \r\n            ans + rand(1, 9) * randSign(),\r\n            ans > 50 ? ans - 10 : ans + 10\r\n        ]);\r\n\r\n        let rightAt = answers.findIndex(x => x == ans);\r\n\r\n        _playbook.push({\r\n            pair,\r\n            nums,\r\n            op,\r\n            sumDigit,\r\n            answers,\r\n            rightAt\r\n        });\r\n    }\r\n\r\n    function addMulRound() {\r\n        let line = getLine();\r\n\r\n        let a = rand(line[0], line[1]);\r\n        let b = rand(line[2], line[3]);\r\n\r\n        let pair = [a % 10, b % 10];\r\n        let nums = shuffle([a, b]);\r\n        let op = \"x\";\r\n\r\n        let ans = a * b;\r\n        let sumDigit = ans % 10;\r\n\r\n        let answers = shuffle([\r\n            ans,\r\n            ans + randSign() * Math.min(...nums),\r\n            ans > 50 ? ans - 10 : ans + 10\r\n        ]);\r\n\r\n        let rightAt = answers.findIndex(x => x == ans);\r\n\r\n        _playbook.push({\r\n            pair,\r\n            nums,\r\n            op,\r\n            sumDigit,\r\n            answers,\r\n            rightAt\r\n        });\r\n    }\r\n\r\n    function addDivRound() {\r\n        let line = getLine();\r\n\r\n        let a = rand(line[0], line[1]);\r\n        let b = rand(line[2], line[3]);\r\n\r\n        let prod = a * b;\r\n\r\n        let pair = [a % 10, b % 10];\r\n        let nums = [prod, randFrom([a, b])];\r\n        let op = '/';\r\n\r\n        let ans = prod / nums[1];\r\n        let sumDigit = (a * b) % 10;\r\n\r\n        let answers = shuffle([\r\n            ans, \r\n            ans > 2 ? ans + randSign() : ans + 1,\r\n            ans > 50 ? ans - 10 : ans + 10\r\n        ]);\r\n\r\n        let rightAt = answers.findIndex(x => x == ans);\r\n\r\n        _playbook.push({\r\n            pair,\r\n            nums,\r\n            op,\r\n            sumDigit,\r\n            answers,\r\n            rightAt\r\n        });\r\n    }\r\n\r\n    function addNextRounds() {\r\n        let config = Anki.getConfig<Config>();\r\n        switch (config.game.toLocaleLowerCase()) {\r\n            case \"plus-over\":\r\n                addPlusRound();\r\n                addMinusRound();\r\n                break;\r\n            case \"mul-div\":\r\n                addMulRound();\r\n                addDivRound();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function fillRoundsAtStart() {\r\n        let config = Anki.getConfig<Config>();\r\n        let noOfRounds = config.rounds ?? 4;\r\n\r\n        for (let cnt = noOfRounds; cnt-- > 0; )\r\n        {\r\n            addNextRounds();\r\n        }\r\n    }\r\n\r\n    class CPlusOver implements IPlusOver {\r\n\r\n        constructor() {\r\n            for (let cmd of Anki.commands()) {\r\n                switch (cmd[0].toLocaleLowerCase()) {\r\n                    case \"m\": _m = cmd.slice(1).map(x => parseInt(x)); break;\r\n                }\r\n            }\r\n        }\r\n\r\n        newRound() {\r\n            let config = Anki.getConfig<Config>();\r\n\r\n            _tcIdle.reset();\r\n            _tcNewRound.cancel();\r\n\r\n            _roundNo++;\r\n\r\n            if (_roundNo >= _playbook.length)\r\n                error(`Round index out of bound: ${_roundNo} length=${_playbook.length}`);\r\n\r\n            let round = _playbook[_roundNo];\r\n            let count = _playbook.length - _roundNo;\r\n\r\n            let showHint = config.showHint ?? true;\r\n\r\n            _game = {\r\n                roundsLeft: count,\r\n                clickedAt: 0,\r\n                state: \"first-click\",\r\n                showHint,\r\n                ...round\r\n            }\r\n\r\n            fire(\"--cmd-update-views\", _game);\r\n        }\r\n\r\n        gotClicked() {\r\n            switch (_game.state) {\r\n                case \"first-click\": \r\n                    fire(\"--evt-answer\");\r\n                    break;\r\n                case \"answered\": \r\n                    fire(\"--cmd-new-round\");\r\n                    break;\r\n            }\r\n        }\r\n\r\n        yesNo() {\r\n            if (_game.state !== \"answered\")\r\n                return;\r\n\r\n            if (_game.roundsLeft <= 0)\r\n                return;\r\n\r\n            let correct = _game.clickedAt === _game.rightAt;\r\n\r\n            fire(correct ? \"--evt-yes\" : \"--evt-no\");\r\n        }\r\n\r\n        gotAnswer(args: Msgs[\"--evt-answer\"]) {\r\n            _tcIdle.reset();\r\n\r\n            switch (_game.state) {\r\n                case \"first-click\":\r\n                    _game.state = \"active\";\r\n                    break;\r\n                case \"active\":\r\n                    _game.clickedAt = args.index;\r\n                    _game.state = \"answered\";\r\n                    this.yesNo();\r\n                    break;\r\n                case \"answered\":\r\n                    fire(\"--cmd-new-round\");\r\n                    return;\r\n            }\r\n\r\n            fire(\"--cmd-update-views\", _game);\r\n        }\r\n\r\n        yes() {\r\n            if (_game.roundsLeft === 1) {\r\n                fire(\"--evt-done\");\r\n            } else {\r\n                Mp3.play(\"yes\");\r\n            }\r\n\r\n            _tcNewRound.reset();\r\n        }\r\n\r\n        no() {\r\n            Mp3.play(\"no\");\r\n            addNextRounds();\r\n        }\r\n\r\n        done() {\r\n            Mp3.play(\"done\");\r\n            addNextRounds();\r\n        }\r\n\r\n        idle() {\r\n            _tcIdle.reset();\r\n            Mp3.play(\"idle\");\r\n        }\r\n    }\r\n\r\n    export const PlusOver: IPlusOver = new CPlusOver();\r\n\r\n    fillRoundsAtStart();\r\n\r\n</script>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\";\r\n\r\n    import { on } from './Model.svelte'\r\n    import type { Game } from './Model.svelte'\r\n\r\n    let _count: string;\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"30px\"\r\n\r\n    function updateView(game: Game) {\r\n        _count = game.roundsLeft.toString();\r\n    }\r\n\r\n    on(\"--cmd-update-views\", updateView);\r\n\r\n    let _bgColor = getBgColor(ga);\r\n\r\n</script>\r\n\r\n<button \r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    {_count}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag, soundsOnDrag } from \"../core/OnDrag.svelte\";\r\n\r\n    import {on, fire,} from './Model.svelte'\r\n    import type {Game} from './Model.svelte'\r\n\r\n    export let ga: string;\r\n    export let index: number;\r\n    export let sz: number = 30\r\n\r\n    let _num: string;\r\n    let _bgColor = getBgColor(ga);\r\n    let _scale: number\r\n    let _sz: number;\r\n\r\n    function onClick() {\r\n        fire(\"--evt-click\");\r\n    }\r\n\r\n    function updateView(game: Game) {\r\n        _num = game.nums[index].toLocaleString('en');\r\n        _scale = _num.length <= 3 ? 1.2 : 2.0;\r\n        _sz = sz - _scale * _num.length;\r\n    }\r\n\r\n    on(\"--cmd-update-views\", updateView);\r\n\r\n</script>\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    on:click={onClick}\r\n    use:pulse\r\n    use:bounceOnDrag\r\n    use:soundsOnDrag={new Map([\r\n        [\"drag:start\", \"yes\"],\r\n        [\"drag:end\", \"no\"],\r\n    ])}\r\n>\r\n    {_num}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from \"./../core/Pulse.svelte\"\r\n    import { Mp3 } from '../core/Mp3.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\";\r\n\r\n    import { on } from './Model.svelte'\r\n    import type { Game } from './Model.svelte'\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"30px\"\r\n\r\n    let _op: string = \"+\";\r\n    let _bgColor = getBgColor(ga);\r\n\r\n    function updateView(game: Game) {\r\n        _op = game.op;\r\n    }\r\n\r\n    on(\"--cmd-update-views\", updateView);\r\n\r\n</script>\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    on:click={() => Mp3.playRandom()}\r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    {_op}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\";\r\n    \r\n    import {on, fire,} from './Model.svelte'\r\n    import type {Game} from './Model.svelte'\r\n\r\n    let _text: string\r\n    let _class: string\r\n    let _scale: number\r\n    let _sz: number;\r\n\r\n    export let ga: string;\r\n    export let index: number\r\n    export let sz: number = 30\r\n\r\n    function onClick() {\r\n        fire(\"--evt-answer\", {index});\r\n    }\r\n\r\n    function getText(game: Game): string {\r\n        if (game.state === \"first-click\")\r\n            return \"??\";\r\n\r\n        return game.answers[index].toLocaleString('en');\r\n    }\r\n\r\n    function getClass(game: Game) {\r\n        if (game.state === \"first-click\")\r\n            return \"bg-gray-100\";\r\n\r\n        if (game.state === \"active\")\r\n            return \"bg-orange-200\";\r\n\r\n        if (game.rightAt === index)\r\n            return \"bg-green-200\";\r\n\r\n        if (game.clickedAt !== index)\r\n            return \"bg-gray-100\";\r\n\r\n        return \"bg-red-200\";\r\n    }\r\n\r\n    function updateView(game: Game) {\r\n        _text = getText(game);\r\n        _class = getClass(game);\r\n\r\n        _scale = _text.length <= 3 ? 1.2 : 2.0;\r\n        _sz = sz - _scale * _text.length;\r\n    }\r\n\r\n    on(\"--cmd-update-views\", updateView);\r\n\r\n</script>\r\n\r\n<button \r\n    class={_class}\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    on:click={onClick}\r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    {_text}\r\n</button>","<script lang=\"ts\">\r\n    import { pulse } from \"../core/Pulse.svelte\";\r\n    import { getBgColor } from \"../core/Grid.svelte\"\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    import {on} from './Model.svelte'\r\n    import type {Game} from './Model.svelte'\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"15px\"\r\n\r\n    let _bgColor = getBgColor(ga);\r\n    let p1: string = \"?\";\r\n    let p2: string = \"?\";\r\n\r\n    function updateView(game: Game) {\r\n        p1 = game.showHint ? game.pair[0].toString() : \"?\";\r\n        p2 = game.showHint ? game.pair[1].toString() : \"?\";\r\n    }\r\n\r\n    on(\"--cmd-update-views\", updateView);\r\n\r\n</script>\r\n\r\n<div style=\"grid-area:{ga};font-size:{sz}\">\r\n    <button class='{_bgColor}'\r\n        use:pulse\r\n        use:bounceOnDrag\r\n    >\r\n        {p1}\r\n    </button>\r\n    \r\n    <button class='{_bgColor}'\r\n        use:pulse\r\n        use:bounceOnDrag\r\n    >\r\n        {p2}\r\n    </button>\r\n</div>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from \"../core/Pulse.svelte\";\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    import { on } from './Model.svelte'\r\n\r\n    import type {Game} from './Model.svelte'\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"15px\"\r\n\r\n    let _digit: string;\r\n    let _bgColor = getBgColor(ga);\r\n\r\n    function updateView(game: Game) {\r\n        _digit = game.showHint ?\r\n            game.sumDigit.toString() : \"?\";\r\n    }\r\n\r\n    on(\"--cmd-update-views\", updateView);\r\n\r\n</script>\r\n\r\n<div style=\"grid-area:{ga};font-size:{sz}\">\r\n    <button\r\n        class=\"{_bgColor}\"\r\n        use:pulse\r\n        use:bounceOnDrag\r\n    >\r\n        {_digit}\r\n    </button>\r\n</div>\r\n","<script lang=\"ts\">\r\n\r\n    import Grid from './../core/Grid.svelte'\r\n    import Clock from './../core/Clock.svelte'\r\n    import Congrats from '../core/Congrats.svelte';\r\n\r\n    import {PlusOver as self} from './PlusOver.svelte'\r\n    import {on, fire,} from './Model.svelte'\r\n    import Count from './Count.svelte'\r\n    import Num from './Num.svelte'\r\n    import Op from './Op.svelte'\r\n    import Ans from './Ans.svelte'\r\n    import Pair from './Pair.svelte'\r\n    import Digit from './Digit.svelte'\r\n\r\n    let congrats: Congrats;\r\n\r\n    function done() {\r\n        congrats.play();\r\n        self.done();\r\n    }\r\n\r\n    on(\"--cmd-new-round\", () => self.newRound());\r\n    on(\"--evt-answer\", args => self.gotAnswer(args));\r\n    on(\"--evt-click\", () => self.gotClicked());\r\n    on(\"--evt-done\", () => done());\r\n    on(\"--evt-yes\", () => self.yes());\r\n    on(\"--evt-no\", () => self.no());\r\n    on(\"--cmd-idle\", () => self.idle());\r\n    fire(\"--cmd-new-round\");\r\n\r\n    let layout = {\r\n        areas: `\r\n            \"cnt   p1   clk \"\r\n            \"cnt   p2   clk \"\r\n            \"lhs   op   rhs \"\r\n            \"a1    a2   a3  \"\r\n        `,\r\n        cols: `1fr 1fr 1fr`,\r\n        rows: `30px 30px 100px 100px`,\r\n        bgColors: {\r\n            cnt: \"bg-purple-300\",\r\n            p1:  \"bg-yellow-100\",\r\n            p2:  \"bg-pink-100\",\r\n            lhs: \"bg-green-100\",\r\n            op:  \"bg-yellow-200\",\r\n            rhs: \"bg-green-100\"\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<Grid {layout}\r\n    on:click={() => fire(\"--evt-click\")}\r\n>\r\n    <Count ga=\"cnt\" />\r\n    <Pair  ga=\"p1\" />\r\n    <Digit ga=\"p2\" />\r\n    <Clock ga=\"clk\" />\r\n    <Num   ga=\"lhs\" index={0} />\r\n    <Op    ga=\"op\" />\r\n    <Num   ga=\"rhs\" index={1} />\r\n    <Ans   ga=\"a1\"  index={0} />\r\n    <Ans   ga=\"a2\"  index={1} />\r\n    <Ans   ga=\"a3\"  index={2} />\r\n\r\n    <Congrats bind:this={congrats} />\r\n</Grid>\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import {onAny, fireAny} from \"./../core/IoBus.svelte\"\r\n    import {CTimedCmd} from \"./../core/TimedCmd.svelte\"\r\n    import type {ITimedCmd} from \"./../core/TimedCmd.svelte\"\r\n    \r\n    export interface Game {\r\n        roundsLeft: number,\r\n        nums: number[],\r\n        divisors: {\r\n            factor: number;\r\n            mxPow: number;\r\n            value?: number;\r\n            wrong?: boolean;\r\n        }[];\r\n    }\r\n\r\n    export interface Round {\r\n        nums: number[];\r\n        divisors: number[];\r\n        gcd: number[];\r\n        lcm: number[];\r\n    }\r\n\r\n    export interface Msgs {\r\n        \"--cmd-set-models\": Game,\r\n        \"--cmd-new-round\": {},\r\n        \"--cmd-update-views\": {},\r\n        \"--evt-acted\": {},\r\n        \"--evt-go\": {},\r\n        \"--evt-done\": {}\r\n        \"--cmd-idle\": {}\r\n    }\r\n\r\n    export function on<Name extends keyof(Msgs)>(name: Name, cb: (args: Msgs[Name]) => void): void {\r\n        onAny(name, cb);\r\n    }\r\n\r\n    export function fire<Name extends keyof(Msgs)>(name: Name, args?: Msgs[Name]): void {\r\n        fireAny(name, args);\r\n    }\r\n\r\n    export function NewTimedCmd(cmd: keyof Msgs, timeout: number, jitter?: number): ITimedCmd {\r\n        return new CTimedCmd(cmd, timeout, jitter ?? 0);\r\n    }\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\n\n    import { fire } from \"./Model.svelte\";\n    import type {Game} from \"./Model.svelte\"\n\n    interface IGcdLcm {\n        readonly game: Game;\n        newRound();\n        go();\n        done();\n        idle();\n    }\n\n    let _game: Game;\n\n    class CGcdLcm implements IGcdLcm {\n\n        get game() {\n            return _game;\n        }\n\n        newRound() {\n            _game = {\n                roundsLeft: 2,\n                nums: [4, 5],\n                divisors: [\n                    { factor: 2, mxPow: 3 },\n                    { factor: 3, mxPow: 3 },\n                    { factor: 5, mxPow: 2 },\n                    { factor: 7, mxPow: 1 },\n                ]\n            }\n\n            fire(\"--cmd-set-models\", _game);\n        }\n\n        go() {\n            \n        }\n\n        done() {}\n\n        idle() {}\n    }\n\n    export const GcdLcm: IGcdLcm = new CGcdLcm();\n\n</script>\n\n","<script lang=\"ts\">\r\n\r\n    import {randFrom} from '../core/Helpers'\r\n    import {pulse} from \"./../core/Pulse.svelte\"\r\n    import {Mp3} from '../core/Mp3.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n\r\n    import {fire} from \"./Model.svelte\"\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"30px\"\r\n\r\n    let _go: string = \"GO\";\r\n    let _bgColor = getBgColor(ga);\r\n\r\n    function onClick() {\r\n        fire(\"--evt-go\");\r\n        Mp3.play(randFrom([\"yes\", \"no\", \"idle\"]));\r\n    }\r\n\r\n</script>\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    on:click={onClick}\r\n    use:pulse\r\n>\r\n    {_go}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"30px\"\r\n\r\n    let _num: number = 2;\r\n    let _bgColor = getBgColor(ga);\r\n\r\n    export function setModel(num: number) {\r\n        _num = num;\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    use:pulse\r\n>\r\n    {_num}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n\r\n    import {fire, on} from './Model.svelte'\r\n    import type {GcdLcm} from './GcdLcm.svelte'\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"30px\";\r\n\r\n    type Model = typeof GcdLcm.game.divisors[0];\r\n\r\n    let _: Model = {\r\n        factor: 2,\r\n        mxPow: 3,\r\n        value: 1,\r\n        wrong: false\r\n    }\r\n\r\n    let value: number;\r\n    let wrong: boolean = false;\r\n    let pow: number = 0;\r\n\r\n    $: bgColor = wrong ? \"bg-red-100\" :\r\n        pow > 0 ? \"bg-green-100\" : \"bg-gray-100\";\r\n\r\n    function onClick() {\r\n        if (pow++ == _.mxPow) pow = 0;\r\n        _.value = _.factor ** pow;\r\n\r\n        fire(\"--evt-acted\");\r\n        update();\r\n    }\r\n\r\n    export function update() {\r\n        value = _.value;\r\n        wrong = _.wrong;\r\n    }\r\n\r\n    export function setModel(model: Model) {\r\n        _ = model;\r\n    }\r\n\r\n    on(\"--cmd-update-views\", () => update());\r\n\r\n</script>\r\n\r\n<button\r\n    class=\"{bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    on:click={onClick}\r\n    use:pulse\r\n>\r\n    {pow > 0 ? value : _.factor}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n\r\n    let _count: number = 1;\r\n\r\n    export let ga: string;\r\n    export let sz: string = \"20px\"\r\n\r\n    let _bgColor = getBgColor(ga);\r\n\r\n    export function setModel(count: number) {\r\n        _count = count;\r\n    }\r\n\r\n</script>\r\n\r\n<button \r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    use:pulse\r\n>\r\n    {_count}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import Grid from './../core/Grid.svelte'\r\n    import Clock from './../core/Clock.svelte'\r\n    import { rand, randFrom, range } from '../core/Helpers';\r\n\r\n    import {GcdLcm as self} from './GcdLcm.svelte'\r\n    import {on, fire} from './Model.svelte'\r\n    import Go from \"./Go.svelte\"\r\n    import Num from \"./Num.svelte\"\r\n    import Factor from \"./Factor.svelte\"\r\n\r\n    import Count from './Count.svelte'\r\n    import Congrats from '../core/Congrats.svelte';\r\n\r\n    let congrats: Congrats;\r\n\r\n    function done() {\r\n        congrats.play();\r\n        self.done();\r\n    }\r\n\r\n    on(\"--cmd-new-round\", () => self.newRound());\r\n    on(\"--evt-done\", () => done());\r\n    on(\"--cmd-idle\", () => self.idle());\r\n    fire(\"--cmd-new-round\");\r\n\r\n    let layout = {\r\n        areas: `\r\n            \"l1\"\r\n            \"l2\"\r\n            \"l3\"\r\n            \"l4\"\r\n            \"go\"\r\n        `,\r\n        cols: `1fr`,\r\n        rows: `60px 80px 150px 150px 80px`\r\n    };\r\n\r\n    let l1 = {\r\n        areas: `\r\n            \"cnt . clk\"\r\n        `,\r\n        cols: `2fr 1fr 2fr`,\r\n        rows: `1fr`\r\n    };\r\n\r\n    let l2 = {\r\n        areas: `\r\n            \". lhs rhs .\"\r\n        `,\r\n        cols: `1fr 1fr 1fr 1fr`,\r\n        rows: `1fr`\r\n    };\r\n\r\n    let l3 = {\r\n        areas: `\r\n            \"0 1 2 3\"\r\n            \"4 5 6 7\"\r\n        `,\r\n        cols: `1fr 1fr 1fr 1fr`,\r\n        rows: `1fr 1fr`\r\n    };\r\n\r\n    let l4 = {\r\n        areas: `\r\n            \"gcd lcm\"\r\n        `,\r\n        cols: `1fr 1fr`,\r\n        rows: `1fr`\r\n    };\r\n\r\n    let gcd = {\r\n        areas: `\r\n            \"d1 d2\"\r\n            \"d3 d4\"\r\n        `,\r\n        cols: `1fr 1fr`,\r\n        rows: `1fr 1fr`\r\n    };\r\n    \r\n    let lcm = {\r\n        areas: `\r\n            \"m1 m2\"\r\n            \"m3 m4\"\r\n        `,\r\n        cols: `1fr 1fr`,\r\n        rows: `1fr 1fr`\r\n    };\r\n    \r\n    let view = {\r\n        count: <Count> null,\r\n        nums: new Array<Num>(2),\r\n        factors: new Array<Factor>(8),\r\n        gcd: new Array<Num>(4),\r\n        lcm: new Array<Num>(4)\r\n    }\r\n\r\n    on(\"--evt-go\", () => {\r\n        randFrom(self.game.divisors).wrong = true;\r\n        fire(\"--cmd-update-views\");\r\n    });\r\n\r\n    on(\"--cmd-set-models\", game => {\r\n        view.count.setModel(game.roundsLeft);\r\n        view.nums[0].setModel(game.nums[0]);\r\n        view.nums[1].setModel(game.nums[1]);\r\n        game.divisors.forEach((m, i) => view.factors[i].setModel(m));\r\n    })\r\n\r\n</script>\r\n\r\n<Grid {layout}>\r\n    <Grid layout={l1} ga=\"l1\">\r\n        <Count ga=\"cnt\" bind:this={view.count} />\r\n        <Clock ga=\"clk\" />\r\n    </Grid>\r\n\r\n    <Grid layout={l2} ga=\"l2\">\r\n        <Num ga=lhs bind:this={view.nums[0]}/>\r\n        <Num ga=rhs bind:this={view.nums[1]}/>\r\n    </Grid>\r\n\r\n    <Grid layout={l3} ga=\"l3\">\r\n        {#each range(0, 8) as no}\r\n            <Factor ga={no}, bind:this={view.factors[no]} />\r\n        {/each}\r\n    </Grid>\r\n\r\n    <!--Grid layout={l4} ga=\"l4\">\r\n        <Grid layout={gcd} ga=\"gcd\">\r\n            {#each range(0, 4) as no}\r\n                <Num ga={no.toString()} />\r\n            {/each}\r\n        </Grid>\r\n\r\n        <Grid layout={lcm} ga=\"lcm\">\r\n            {#each range(0, 4) as no}\r\n                <Num ga={no.toString()} />\r\n            {/each}\r\n        </Grid>\r\n    </Grid-->\r\n\r\n    <Go ga=go on:click={() => console.log(\"GO - main\")}/>\r\n\r\n    <Congrats bind:this={congrats} />\r\n</Grid>\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import type { Decimal } from \"decimal.js\"\r\n\r\n    import {onAny, fireAny} from \"./../core/IoBus.svelte\"\r\n    import {CTimedCmd} from \"./../core/TimedCmd.svelte\"\r\n    import type {ITimedCmd} from \"./../core/TimedCmd.svelte\"\r\n\r\n    export interface Config {\r\n        rounds: number;\r\n        soundOn: boolean;\r\n    }\r\n    \r\n    export interface Round {\r\n        nums: Decimal[];\r\n        op: string;\r\n        answers: Decimal[];\r\n        asAsceeMath: boolean[];\r\n        rightAt: number;\r\n        clickedAt?: number;\r\n    }\r\n\r\n    export interface Msgs {\r\n        \"--cmd-next-round\": {},\r\n        \"--evt-click\": {},\r\n        \"--evt-yes\": {},\r\n        \"--evt-no\": {},\r\n        \"--evt-done\": {}\r\n        \"--cmd-idle\": {}\r\n    }\r\n\r\n    export function on<Name extends keyof(Msgs)>(name: Name, cb: (args: Msgs[Name]) => void): void {\r\n        onAny(name, cb);\r\n    }\r\n\r\n    export function fire<Name extends keyof(Msgs)>(name: Name, args?: Msgs[Name]): void {\r\n        fireAny(name, args);\r\n    }\r\n\r\n    export function newTimedCmd(cmd: keyof Msgs, timeout: number, jitter?: number): ITimedCmd {\r\n        return new CTimedCmd(cmd, timeout, jitter ?? 0);\r\n    }\r\n\r\n</script>","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    export let ga: string;\r\n    export let count: number;\r\n    export let sz: string = \"20px\"\r\n\r\n    let _bgColor = getBgColor(ga);\r\n\r\n</script>\r\n\r\n<button \r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    {count}\r\n</button>\r\n","import { Decimal } from \"decimal.js\"\r\nimport { safe } from \"./Helpers\";\r\n\r\ndeclare var MathJax;\r\n\r\nexport function applyAsciiMath(delay = -1) {\r\n    setTimeout(() => {\r\n        safe(() => MathJax.typeset());\r\n    }, delay === -1 ? 2000 : delay);\r\n}\r\n\r\nexport function toAscii(str: string): string {\r\n    return str.includes(\"`\") ? \r\n        str : `\\`${str}\\``;\r\n}\r\n\r\nfunction n2d(num: number) {\r\n    return new Decimal(num);\r\n}\r\n\r\nexport function fractionToMath(num: Decimal): [boolean, string, number] {\r\n    let sign = num.isNeg() ? '-' : '';\r\n    let w = num.trunc();\r\n    let n = num.minus(w).abs();\r\n\r\n    if (n.eq(0)) {\r\n        let str = num.toNumber().toLocaleString('en');\r\n        return [false, str, str.length];\r\n    }\r\n\r\n    let d = n2d(1);\r\n    let len = 1;\r\n\r\n    while (!n.toFraction()[1].eq(1)) {\r\n        n = n.mul(10);\r\n        d = d.mul(10);\r\n        len++;\r\n    }\r\n\r\n    let math = w.eq(0) ?\r\n        `${sign}${n}/${d}` :\r\n        `${w} ${n}/${d}`;\r\n        \r\n    // console.log(`${num}: '${math}'`);\r\n\r\n    return [true, math, math.length]\r\n}\r\n\r\nexport function unitTests() {\r\n    function itWorks() {\r\n        fractionToMath(n2d(3));\r\n        fractionToMath(n2d(-4));\r\n        fractionToMath(n2d(0.1));\r\n        fractionToMath(n2d(0.02));\r\n        fractionToMath(n2d(-0.007));\r\n        fractionToMath(n2d(2.07));\r\n        fractionToMath(n2d(-2.173));\r\n    }\r\n\r\n    itWorks();\r\n}\r\n\r\n// unitTests();\r\n","<script lang=\"ts\">\r\n\r\n    import type { Decimal } from \"decimal.js\"\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { toAscii, fractionToMath } from \"../core/AsciiMathUtils\";\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    export let ga: string;\r\n    export let num: Decimal;\r\n    export let asAsciiMath: boolean;\r\n\r\n    export let sz: number = 30;\r\n\r\n    function n2a(n: Decimal): [string, number] {\r\n        let str = n.toNumber().toLocaleString('en');\r\n        let [isFraction, math, len] = fractionToMath(n);\r\n\r\n        if (!isFraction || !asAsciiMath)\r\n            return [str, str.length];\r\n\r\n        if (isFraction)\r\n            len += 2;\r\n\r\n        return [toAscii(math), len];\r\n    }\r\n\r\n    $: [_text, _len] = n2a(num);\r\n    $: _sz = sz - 1.2 * _len;\r\n\r\n    let _bgColor = getBgColor(ga);\r\n\r\n</script>\r\n\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    {_text}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import type { Decimal } from \"decimal.js\"\r\n\r\n    import { toAscii, fractionToMath } from \"../core/AsciiMathUtils\";\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    export let ga: string;\r\n    export let num: Decimal;\r\n    export let asAsciiMath: boolean;\r\n\r\n    export let sz: number = 30\r\n\r\n    function n2a(n: Decimal): [string, number] {\r\n        let str = n.toNumber().toLocaleString('en');\r\n        let [isFraction, math, len] = fractionToMath(n);\r\n\r\n        if (!isFraction || !asAsciiMath)\r\n            return [str, str.length];\r\n\r\n        return [toAscii(math), len];\r\n    }\r\n\r\n    $: [_text, _len] = n2a(num);\r\n    $: _scale = _len < 5 ? 1.2 : 1.5;\r\n    $: _sz = sz - _scale * _text.length;\r\n\r\n    let _bgColor = \"bg-gray-100\";\r\n\r\n    export function setBgColor(value: string) {\r\n        _bgColor = value;\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    on:click\r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    {_text}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import {pulse} from \"./../core/Pulse.svelte\"\r\n    import {Mp3} from '../core/Mp3.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    export let ga: string;\r\n    export let op: string;\r\n    export let sz: string = \"30px\"\r\n\r\n    let _bgColor = getBgColor(ga);\r\n\r\n</script>\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{sz}\" \r\n    on:click={() => Mp3.playRandom()}\r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    {op}\r\n</button>\r\n","<script lang=\"ts\">\r\n    import { tick } from \"svelte\";\r\n    import { Decimal } from \"decimal.js\"\r\n\r\n    import { refreshMath } from \"../core/MathJax.svelte\";\r\n    import { rand, shuffle, pm, trueFalse, randFrom, n2d, d2n } from \"../core/Helpers\";\r\n    import { Anki } from \"../core/Anki\"\r\n    import { Mp3 } from \"../core/Mp3.svelte\";\r\n    import Grid from './../core/Grid.svelte'\r\n    import Clock from './../core/Clock.svelte'\r\n    import Congrats from '../core/Congrats.svelte';\r\n\r\n    import { on, fire } from \"./Model.svelte\"\r\n    import { newTimedCmd } from \"./Model.svelte\";\r\n    import Count from \"./Count.svelte\"\r\n    import Num from \"./Num.svelte\"\r\n    import Ans from \"./Ans.svelte\"\r\n    import Op from \"./Op.svelte\"\r\n\r\n    import type { Config, Round } from \"./Model.svelte\"\r\n\r\n    let congrats: Congrats;\r\n\r\n    let _game: Round;\r\n\r\n    let _current = 0;\r\n    let _rounds: Round[] = [];\r\n\r\n    $: _roundsLeft = _rounds.length - _current;\r\n\r\n    let _withFractions: boolean = false;\r\n    let _config = Anki.getConfig<Config>();\r\n\r\n    let _tcNewRound = newTimedCmd(\"--cmd-next-round\", 1000);\r\n    let _tcIdle = newTimedCmd(\"--cmd-idle\", 7000, 3000);\r\n\r\n    let _a: number[] = [1, 9];\r\n    let _b: number[] = [2, 9];\r\n    let _aA: number[] = [];\r\n    let _bA: number[] = [];\r\n    let _lastDigit: string = null;\r\n\r\n    let answers: Ans[] = [null, null, null];\r\n    let recreate = answers.map(_ => new Object());\r\n\r\n    interface AbPair {\r\n        a: Decimal;\r\n        b: Decimal;\r\n        wrong: Decimal;\r\n        fa: Decimal;\r\n        fb: Decimal;\r\n    }\r\n\r\n    let D = (n: number) => new Decimal(n);\r\n\r\n    function getAb(): Decimal[] {\r\n        let a = D(_aA.length > 0 ?\r\n            randFrom(_aA) :\r\n            rand(_a[0], _a[1])\r\n        );\r\n\r\n        let b = D(_bA.length > 0 ?\r\n            randFrom(_bA) :\r\n            rand(_b[0], _b[1])\r\n        );\r\n\r\n        return [a, b];\r\n    }\r\n\r\n    function getAbPairWithDots(line: number[]): AbPair {\r\n\r\n        let [za, zb] = shuffle(line);\r\n\r\n        let fa = za < 0 ?\r\n            Decimal.pow(10, rand(za, -1)) :\r\n            Decimal.pow(10, rand(1, za));\r\n\r\n        let fb = zb < 0 ?\r\n            Decimal.pow(10, rand(zb, -1)) :\r\n            Decimal.pow(10, rand(1, zb));\r\n\r\n        let [a, b] = getAb();\r\n\r\n        let wrong = b.plus(pm(1));\r\n\r\n        a = a.mul(fa);\r\n        b = b.mul(fb);\r\n        wrong = wrong.mul(fb);\r\n\r\n        return {a, b, wrong, fa, fb};\r\n    }\r\n\r\n    function getAbPair(): AbPair {\r\n        let line = Anki.tokens().map(x => parseInt(x));\r\n\r\n        if (line[0] < 0 || line[1] < 0)\r\n            return getAbPairWithDots(line);\r\n\r\n        let [a, b] = getAb();\r\n\r\n        let wrong = b.plus(pm(1));\r\n        let fa = D(1);\r\n        let fb = D(1);\r\n\r\n        let noOfZeros = rand(line[0], line[1]);\r\n\r\n        for (let no = noOfZeros; no-- > 0; ) {\r\n            if (a.equals(1)) {                  // ensure first factor is not one\r\n                a = a.mul(10);\r\n                fa = fa.mul(10);\r\n                continue;\r\n            }\r\n\r\n            switch (trueFalse()) {\r\n                case true:\r\n                    a = a.mul(10);\r\n                    fa = fa.mul(10);\r\n                    break;\r\n                case false:\r\n                    b = b.mul(10);\r\n                    fb = fb.mul(10);\r\n                    wrong = wrong.mul(10);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return {a, b, wrong, fa, fb};\r\n    }\r\n\r\n    function addMulRound() {\r\n        let op = \"x\";\r\n\r\n        let {a, b, wrong} = getAbPair();\r\n\r\n        let lhs = a;\r\n        let rhs = b;\r\n\r\n        let a0 = lhs.mul(rhs);\r\n        let a1 = lhs.mul(wrong);\r\n\r\n        let a2: Decimal, a3: Decimal;\r\n\r\n        switch (trueFalse()) {\r\n            case true:\r\n                a2 = a0.mul(10);\r\n                a3 = a1.mul(10);\r\n                break;\r\n            case false:\r\n                a2 = a0.div(10);\r\n                a3 = a1.div(10);\r\n                break;\r\n        }\r\n\r\n        let nums = shuffle([lhs, rhs]);\r\n        let answers = shuffle([a0, a1, a2, a3]);\r\n        let asAsceeMath = answers.map(_ => trueFalse());\r\n\r\n        let rightAt = answers.findIndex(x => x == a0);\r\n\r\n        _rounds.push({\r\n            nums, op, answers, asAsceeMath, rightAt\r\n        });\r\n    }\r\n\r\n    function addDivRound() {\r\n        let op = \"/\";\r\n\r\n        let {a, b, wrong} = getAbPair();\r\n\r\n        let lhs = a.mul(b);\r\n        let rhs = a;\r\n\r\n        let a0 = b;\r\n        let a1 = wrong;\r\n\r\n        let a2: Decimal, a3: Decimal;\r\n\r\n        switch (trueFalse()) {\r\n            case true:\r\n                a2 = a0.mul(10);\r\n                a3 = a1.mul(10);\r\n                break;\r\n            case false:\r\n                a2 = a0.div(10);\r\n                a3 = a1.div(10);\r\n                break;\r\n        }\r\n\r\n        let nums = [lhs, rhs];\r\n        let answers = shuffle([a0, a1, a2, a3]);\r\n        let asAsceeMath = answers.map(_ => trueFalse());\r\n\r\n        let rightAt = answers.findIndex(x => x === a0);\r\n\r\n        _rounds.push({\r\n            nums, op, answers, asAsceeMath, rightAt\r\n        });\r\n    }\r\n\r\n    let downTo10 = (d: Decimal) => d.minus(d.mod(10));\r\n    let upTo10 = (d: Decimal) => d.plus(D(10).minus(d.mod(10)));\r\n\r\n    function addLastDigitMulRound() {\r\n        let op = \"x\";\r\n\r\n        let [a, b] = getAb();\r\n\r\n        while (a.mod(10).eq(0) || b.mod(10).eq(0))\r\n            [a, b] = getAb();\r\n\r\n        let a0 = a.mul(b);\r\n        let lastDigit = a0.mod(10);\r\n\r\n        let low = downTo10(a).mul(downTo10(b));\r\n        let high = upTo10(a).mul(upTo10(b));\r\n        let f = n2d(rand(1, 10)).mul(10)\r\n\r\n        let a1 = trueFalse() ?\r\n            low.minus(f).plus(lastDigit) :\r\n            high.plus(f).plus(lastDigit);\r\n\r\n        let d = pm(rand(1, 9));\r\n        let a2 = a0.plus(d);\r\n        let a3 = a1.plus(d).plus(pm(randFrom([10, 20, 30])));\r\n\r\n        let nums = [a, b];\r\n        let answers = shuffle([a0, a1, a2, a3]);\r\n        let rightAt = answers.findIndex(x => x === a0);\r\n\r\n        let asAsceeMath = answers.map(_ => false);\r\n\r\n        _rounds.push({\r\n            nums, op, answers, asAsceeMath, rightAt\r\n        });\r\n    }\r\n\r\n    function addLastDigitDivRound() {\r\n        let op = \":\";\r\n        let [a, b] = getAb();\r\n\r\n        while (a.mod(10).eq(0) || b.mod(10).eq(0))\r\n            [a, b] = getAb();\r\n\r\n        let r0 = a.mul(b);\r\n\r\n        let a0 = a;\r\n        let a1 = a0.plus(pm(10));\r\n\r\n        let a2 = a0.plus(pm(rand(1, 9)));\r\n\r\n        // ambiguaty of division; f.e. 1634 : 38 => 43, 38, 53, 48\r\n        while (a2.mul(b).mod(10).eq(r0.mod(10)))\r\n            a2 = a0.plus(pm(rand(1, 9)));\r\n\r\n        let a3 = a2.plus(pm(10));\r\n\r\n        let nums = [r0, b];\r\n        let answers = shuffle([a0, a1, a2, a3]);\r\n        let rightAt = answers.findIndex(x => x === a0);\r\n\r\n        let asAsceeMath = answers.map(_ => false);\r\n\r\n        _rounds.push({\r\n            nums, op, answers, asAsceeMath, rightAt\r\n        });\r\n    }\r\n\r\n    function addNextRounds() {\r\n        let mulChars = \"*x\";\r\n        let divChars = \"/\\\\:\";\r\n\r\n        if (_lastDigit)\r\n        {\r\n\r\n            if (_lastDigit.length > 1) {\r\n                switch (trueFalse()) {\r\n                    case true:\r\n                        addLastDigitMulRound();\r\n                        addLastDigitDivRound();\r\n                        break;\r\n                    case false:\r\n                        addLastDigitDivRound();\r\n                        addLastDigitMulRound();\r\n                        break;\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (mulChars.includes(_lastDigit)) {\r\n                addLastDigitMulRound();\r\n                addLastDigitMulRound();\r\n                return;\r\n            }\r\n\r\n            if (divChars.includes(_lastDigit)) {\r\n                addLastDigitDivRound();\r\n                addLastDigitDivRound();\r\n                return;\r\n            }\r\n        }\r\n\r\n        addMulRound();\r\n        addDivRound();\r\n    }\r\n\r\n    async function nextRound() {\r\n        _tcNewRound.cancel();\r\n        _tcIdle.reset();\r\n\r\n        if (++_current === _rounds.length)\r\n            addNextRounds();\r\n\r\n        _game = _rounds[_current];\r\n\r\n        answers.forEach(ans => ans.setBgColor(\"bg-gray-100\"));\r\n        recreate = answers.map(_ => new Object());\r\n\r\n        await tick();\r\n        refreshMath();\r\n    }\r\n\r\n    function init() {\r\n        _tcIdle.reset();\r\n\r\n        let cmds = Anki.commands();\r\n        for (let cmd of cmds) {\r\n            switch (cmd[0]) {\r\n                case \"dots\": break;\r\n                case \"with-fractions\": \r\n                    _withFractions = true;\r\n                    break;\r\n                case \"last-digit\": _lastDigit = cmd[1]; break;\r\n                case \"a\": _a = cmd.slice(1).map(x => parseInt(x)); break;\r\n                case \"b\": _b = cmd.slice(1).map(x => parseInt(x)); break;\r\n                case \"a[]\": _aA = cmd.slice(1).map(x => parseInt(x)); break;\r\n                case \"b[]\": _bA = cmd.slice(1).map(x => parseInt(x)); break;\r\n            }\r\n        }\r\n\r\n        let noOfRounds = _config.rounds ?? 4;\r\n\r\n        for (let cnt = noOfRounds; cnt-- > 0; )\r\n            addNextRounds();\r\n\r\n        _game = _rounds[_current];\r\n\r\n        refreshMath();\r\n    }\r\n\r\n    function select(no: number) {\r\n        _tcIdle.reset();\r\n\r\n        if (_game.clickedAt !== undefined) {\r\n            fire(\"--cmd-next-round\");\r\n            return;\r\n        }\r\n\r\n        _game.clickedAt = no;\r\n\r\n        if (no === _game.rightAt) {\r\n            if (_current == _rounds.length - 1) {\r\n                Mp3.play(\"done\");\r\n                congrats.play();\r\n            } else {\r\n                Mp3.play(\"yes\");\r\n            }\r\n            _tcNewRound.reset();\r\n        } else {\r\n            Mp3.play(\"no\");\r\n            answers[no].setBgColor(\"bg-red-200\");\r\n            addNextRounds();\r\n            _roundsLeft = _rounds.length - _current;\r\n        }\r\n\r\n        answers[_game.rightAt].setBgColor(\"bg-green-200\");\r\n    }\r\n\r\n    function onClick() {\r\n        if (_game.clickedAt !== undefined)\r\n            fire(\"--cmd-next-round\");\r\n    }\r\n\r\n    function idle() {\r\n        _tcIdle.reset();\r\n        Mp3.play(\"idle\");\r\n    }\r\n\r\n    on(\"--cmd-next-round\", () => nextRound());\r\n    on(\"--evt-click\", () => onClick());\r\n    on(\"--cmd-idle\", () => idle());\r\n    \r\n    init();\r\n\r\n    let layout = {\r\n        areas: `\r\n            \"cnt   .    clk \"\r\n            \"lhs   op   rhs \"\r\n            \"a0    .    a1  \"\r\n            \"a2    .    a3  \"\r\n        `,\r\n        cols: `2fr 1fr 2fr`,\r\n        rows: `60px 80px 80px 80px`,\r\n        bgColors: {\r\n            cnt: \"bg-purple-300\",\r\n            lhs: \"bg-green-100\",\r\n            op:  \"bg-yellow-200\",\r\n            rhs: \"bg-green-100\"\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<Grid {layout}\r\n    on:click={() => fire(\"--evt-click\")}\r\n>\r\n    <Count ga=\"cnt\" count={_roundsLeft}/>\r\n    <Clock ga=\"clk\" />\r\n\r\n    {#key recreate[0]}\r\n    <Num ga=\"lhs\" \r\n        num={_game.nums[0]} \r\n        asAsciiMath={_withFractions && trueFalse()}\r\n    /> {/key}\r\n\r\n    <Op  ga=\"op\"  op={_game.op} />\r\n\r\n    {#key recreate[0]}\r\n    <Num ga=\"rhs\" \r\n        num={_game.nums[1]} \r\n        asAsciiMath={_withFractions && trueFalse()}\r\n    /> {/key}\r\n\r\n    {#each _game.answers as ans, i (recreate[i]) }\r\n        <Ans \r\n            ga={`a${i}`} \r\n            num={ans}\r\n            asAsciiMath={_withFractions && _game.asAsceeMath[i]}\r\n            bind:this={answers[i]}\r\n            on:click={() => select(i)}\r\n        />\r\n    {/each}\r\n\r\n    <Congrats bind:this={congrats} />\r\n</Grid>\r\n","<script lang=\"ts\">\r\n\r\n    import { tick } from \"svelte\";\r\n\r\n    import { refreshMath } from \"./MathJax.svelte\";\r\n    import { delay } from \"./Helpers\";\r\n    import { pulse } from \"./Pulse.svelte\";\r\n    import { getBgColor } from './Grid.svelte';\r\n    import { bounceOnDrag } from \"./OnDrag.svelte\"\r\n\r\n    const defaultScale = 1.4;\r\n\r\n    export let ga: string;\r\n    export let exp: string;\r\n    export let scale: number = defaultScale;\r\n    export let bgColor: string = getBgColor(ga);\r\n    export let sz: number = 30;\r\n\r\n    $: _scale = scale ?? defaultScale;\r\n    $: _sz = sz - _scale * exp.length;\r\n    $: update(exp);\r\n\r\n    let _self: HTMLElement;\r\n\r\n    async function update(exp: string) {\r\n        await tick();\r\n        _self.innerText = '`' + exp + '`';\r\n        refreshMath();\r\n        await delay(1000);\r\n\r\n        _self.querySelectorAll<HTMLElement>(\"mjx-c\").forEach(el => {\r\n            pulse(el);\r\n            bounceOnDrag(el);\r\n        })\r\n    }\r\n\r\n</script>\r\n\r\n<p \r\n    class=\"{bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    bind:this={_self}\r\n    on:click\r\n    use:bounceOnDrag\r\n>\r\n    {exp}\r\n</p>","<script lang=\"ts\">\r\n\r\n    import { pulse } from './Pulse.svelte';\r\n    import { getBgColor } from './Grid.svelte';\r\n    import { bounceOnDrag } from \"./OnDrag.svelte\"\r\n\r\n    export let ga: string;\r\n    export let values: number[];\r\n\r\n    $: _value = values[0];\r\n    $: _max = values[1];\r\n    $: _left = _max - _value;\r\n    $: _bar = 100 * (_value / _max)\r\n\r\n    let _bgColor = getBgColor(ga);\r\n\r\n</script>\r\n\r\n<div \r\n    class=\"w-full bg-red-50 text-right\"\r\n    style=\"grid-area:{ga}\" \r\n    use:pulse\r\n    use:bounceOnDrag\r\n>\r\n    <div \r\n        class= \" \\\r\n            text-xs text-center text-black \\\r\n            {_bgColor} \\\r\n        \"\r\n        style=\"width:{_bar}%\"\r\n    >\r\n        <span use:pulse>\r\n            {_left}\r\n        </span>\r\n    </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n\r\n    import { onDestroy, onMount } from 'svelte';\r\n\r\n    import { getBgColor } from './Grid.svelte';\r\n\r\n    export let ga: string;\r\n    export let seconds: number;\r\n    export let onExpiration: () => void;\r\n    export let color: string = \"bg-red-500\";\r\n    export let bit: number = 30;\r\n\r\n    let _startedAt: number;\r\n    let _deadLine: number;\r\n    let _bar: number = 0;\r\n\r\n    let _bgColor = getBgColor(ga);\r\n    let _intervalId: any;\r\n\r\n    function stopCounting() {\r\n        clearInterval(_intervalId);\r\n    }\r\n\r\n    function startCounting() {\r\n        function tick() {\r\n            let now = Date.now();\r\n            _bar = 100 * ((now - _startedAt) / (1000*seconds));\r\n\r\n            if (now >= _deadLine) {\r\n                onExpiration();\r\n                stopCounting();\r\n            }\r\n        }\r\n\r\n        _startedAt = Date.now();\r\n        _deadLine = _startedAt + 1000 * seconds;\r\n\r\n        _intervalId = setInterval(() => tick(), bit);\r\n    }\r\n\r\n    onMount(() => startCounting());\r\n    onDestroy(() => stopCounting());\r\n\r\n    export function restart() {\r\n        startCounting();\r\n    }\r\n\r\n</script>\r\n\r\n<div \r\n    class=\"w-full h-full {_bgColor}\"\r\n    style=\"grid-area:{ga}\" \r\n>\r\n    <div \r\n        class= \"h-full w-full {color}\"\r\n        style=\"width:{_bar}%\"\r\n    >\r\n    </div>\r\n</div>\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import type Decimal from \"decimal.js\";\r\n\r\n    import { d2n, n2d, pm, rand, randFrom } from \"../core/Helpers\";\r\n\r\n    interface Self {\r\n        \r\n    }\r\n\r\n    export interface ISequence {\r\n        readonly abc: Decimal[];\r\n        readonly answers: Decimal[];\r\n        readonly equ?: string;\r\n    }\r\n\r\n    function variatePm(ans_: number | Decimal): Decimal[] {\r\n        let ans = n2d(ans_);\r\n        return [\r\n            ans, \r\n            ans.plus(pm(1)),\r\n            ans.plus(pm(2)),\r\n            ans.plus(pm(3))\r\n        ];\r\n    }\r\n\r\n    function applyDifs(a: number, difs: number[]): Decimal[] {\r\n        let a2 = a + difs[0];\r\n        let a3 = a2 + difs[1];\r\n        let a4 = a3 + difs[2];\r\n        let a5 = a4 + difs[3];\r\n        let a6 = a5 + difs[4];\r\n\r\n        return n2d([a, a2, a3, a4, a5, a6]);\r\n    }\r\n\r\n    export function newSequence(): ISequence {\r\n        let sequences: (() => ISequence)[] = [\r\n\r\n            // 0\r\n            function arithmeticProgression() {\r\n                let a = rand(1, 40);\r\n                let d = pm(rand(2, 7));\r\n\r\n                let difs = [d, d*2, d*3, d*4];\r\n\r\n                let abc = applyDifs(a, difs);\r\n                let ans = abc.pop();\r\n\r\n                let answers = variatePm(ans);\r\n\r\n                return {abc, answers}\r\n            },\r\n\r\n            // 1\r\n            function geometricProgression() {\r\n\r\n                let pows = [\r\n                    n2d(0.1),\r\n                    n2d(1).div(3),\r\n                    n2d(0.5),\r\n                    n2d(1),\r\n                    n2d(1.5),\r\n                    n2d(2),\r\n                    n2d(3)\r\n                ];\r\n\r\n                let a = n2d(rand(1, 13));\r\n                let p = randFrom(pows);\r\n                let a2 = a.mul(p);\r\n                let a3 = a2.mul(p);\r\n                let ans = a3.mul(p);\r\n\r\n                let abc = n2d([a, a2, a3]);\r\n\r\n                let answers = n2d([\r\n                    ans, \r\n                    ans.minus(p), \r\n                    ans.plus(p), \r\n                    ans.plus(2)\r\n                ]);\r\n\r\n                return {abc, answers}\r\n            },\r\n\r\n            // 2\r\n            function _9_8_5_4_2() {\r\n                let a = rand(1, 40);\r\n                let d1 = pm(1);\r\n                let d2a = pm(randFrom([2, 3, 4]));\r\n                let d2d = pm(1);\r\n\r\n                let difs = [d1, d2a, d1, d2a+d2d, d1];\r\n\r\n                let abc = applyDifs(a, difs);\r\n                let ans = abc.pop();\r\n\r\n                let answers = variatePm(ans);\r\n\r\n                return {abc, answers};\r\n            },\r\n\r\n            // 3\r\n            function _3_5_4_6_5() {\r\n                let a = rand(1, 40);\r\n                let d1 = pm(2);\r\n                let d2 = pm(1);\r\n\r\n                let difs = [d1, d2, d1, d2, d1];\r\n\r\n                let abc = applyDifs(a, difs);\r\n                let ans = abc.pop();\r\n\r\n                let answers = variatePm(ans);\r\n\r\n                return {abc, answers};\r\n            },\r\n\r\n            // 4\r\n            function _2_3_5_8_12() {\r\n                let a = rand(1, 40);\r\n                let da = pm(randFrom([1, 2]));\r\n                let dd = pm(randFrom([1, 2]));\r\n\r\n                let difs = [da, da+dd, da+2*dd, da+3*dd, da+4*dd];\r\n\r\n                let abc = applyDifs(a, difs);\r\n                let ans = abc.pop();\r\n\r\n                let answers = variatePm(ans);\r\n\r\n                return {abc, answers};\r\n            },\r\n\r\n            // 5\r\n            function _1_3_2_4_3() {\r\n                let a = rand(1, 40);\r\n\r\n                do {\r\n                    let d1 = pm(randFrom([1, 2, 3, 4]));\r\n                    let d2 = pm(randFrom([1, 2, 3, 4]));\r\n\r\n                    if (d1 === d2) continue;\r\n                    if (d1 === -d2) continue;\r\n\r\n                    let difs = [d1, d2, d1, d2, d1];\r\n\r\n                    let abc = applyDifs(a, difs);\r\n                    let ans = abc.pop();\r\n\r\n                    let answers = variatePm(ans);\r\n\r\n                    return {abc, answers};\r\n                } \r\n                while (false);\r\n\r\n            },\r\n\r\n            // 6\r\n            function _fibo() {\r\n                let abc = n2d([1, 2, 3, 5, 8, 13]);\r\n                let ans = 34;\r\n\r\n                let answers = variatePm(ans);\r\n\r\n                return {abc, answers};\r\n            },\r\n        ];\r\n\r\n        return sequences[6]();\r\n\r\n        return randFrom(sequences)();\r\n    }\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { Decimal } from \"decimal.js\"\r\n\r\n    import { pm, rand, randFrom, shuffle, randFromIf, d2t, allAreUnique, nd2f, f2d, d2f, trueFalse, n2d, d2n } from \"../core/Helpers\";\r\n\r\n    import type { Round, Config, GameType } from \"./Model.svelte\"\r\n    import { newSequence } from \"./Sequnces.svelte\";\r\n\r\n    export type Float = number | Decimal;\r\n\r\n\r\n    export function parseDecimal(str: string): Decimal {\r\n        let parts = str.split('/');\r\n\r\n        if (parts.length === 1)\r\n            return new Decimal(str);\r\n\r\n        let [n, d] = [\r\n            new Decimal(parts[0]), \r\n            new Decimal(parts[1])\r\n        ];\r\n\r\n        let fr = n.div(d);\r\n\r\n        return fr;\r\n    }\r\n\r\n    export function get(n: number[], nA: Decimal[]): Decimal {\r\n        return nA.length > 0 ?\r\n            randFrom(nA) :\r\n            n2d(rand(n[0], n[1]));\r\n    }\r\n\r\n    export function percentsSimple(gameType: string, equ: string) {\r\n        return gameType.includes(\"%\") &&\r\n            equ.includes(\"*\");\r\n    }\r\n\r\n    export function percentsPlus(gameType: string, equ: string) {\r\n        return gameType.includes(\"%\") &&\r\n            equ.includes(\"+\");\r\n    }\r\n\r\n    export function percentsMinus(gameType: string, equ: string) {\r\n        return gameType.includes(\"%\") &&\r\n            equ.includes(\"-\");\r\n    }\r\n\r\n    export function makeProduct(min: Float, max: Float, nums: Float[], first?: Float, unique?: boolean): [Decimal, Decimal[]] {\r\n        let nums2 = n2d([...nums]);\r\n        let dividers: Decimal[] = [];\r\n        let product: Decimal = n2d(first ?? 1);\r\n        unique ??= true;\r\n\r\n        let loopLimit = 20;\r\n\r\n        do {\r\n            let d = randFrom(nums2);\r\n\r\n            if (product.mul(d).gt(max) && loopLimit-- > 0)\r\n                continue;\r\n\r\n            product = product.mul(d);\r\n\r\n            dividers.push(d);\r\n\r\n            if (unique)\r\n                nums2.splice(nums2.indexOf(d), 1);\r\n\r\n            if (nums2.length === 0) break;\r\n\r\n        } while (product.lt(min) || dividers.length <= 1);\r\n\r\n        return [product, dividers];\r\n    }\r\n\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { Decimal } from \"decimal.js\"\r\n\r\n    import { Anki } from \"../core/Anki\"\r\n    import { pm, rand, randFrom, shuffle, randFromIf, d2t, allAreUnique, nd2f, f2d, d2f, trueFalse, n2d, d2n } from \"../core/Helpers\";\r\n\r\n    import type { Round, Config, GameType, Script } from \"./Model.svelte\"\r\n    import { newSequence } from \"./Sequnces.svelte\";\r\n    import { get, makeProduct, parseDecimal, percentsMinus, percentsPlus, percentsSimple } from \"./Utils.svelte\"\r\n\r\n    \r\n    interface IGame {\r\n        isLast(round: Round): boolean;\r\n        addRounds(count: number);\r\n        nextRound(): Round;\r\n    }\r\n\r\n    let _config = Anki.getConfig<Config>();\r\n    let _patterns: string[];\r\n    let _next: number;\r\n    let _totalRounds = _config.rounds;\r\n    let _gameType: GameType = \"equ+-\";\r\n    let _a: number[] = [10, 90];\r\n    let _b: number[] = [10, 90];\r\n    let _c: number[] = [10, 90];\r\n    let _d: number[] = [10, 90];\r\n    let _n: number[] = [1, 1];\r\n    let _aA: Decimal[] = [];\r\n    let _bA: Decimal[] = [];\r\n    let _cA: Decimal[] = [];\r\n    let _dA: Decimal[] = [];\r\n    let _nA: Decimal[] = [];\r\n    let _x: string[] = ['X'];\r\n    let _noOverflow: boolean = false;\r\n    let _properOnly: boolean = false;\r\n    let _seconds: number = 15 * _config.rounds;\r\n    let _mathScale: number;\r\n    let _noAbSwap: boolean = false;\r\n    let _sequence = newSequence();\r\n    let _ansDividers: Decimal[] = [];\r\n    let _dotsFactor: number = 1;\r\n\r\n    \r\n    function newAbc(pattern: string): Decimal[] {\r\n\r\n        let tzero = n => n - n % 10;\r\n\r\n        if (_gameType === \"+-dots\") {\r\n            let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n\r\n            let a0 = rand(1, 9);\r\n            let b0 = _noOverflow ? rand(0, 9 - a0) : rand(10 - a0, 9);\r\n            let aa = n2d(tzero(a) + a0).div(_dotsFactor);\r\n            let bb = n2d(tzero(b) + b0).div(_dotsFactor);\r\n\r\n            let f = n2d(rand(1, 10));\r\n            aa = aa.plus(f.div(_dotsFactor).div(10));\r\n\r\n            if (trueFalse()) \r\n                bb = bb.plus(n2d(10).minus(f).div(_dotsFactor).div(10));\r\n\r\n            let c  = aa.plus(bb);\r\n            return [\r\n                ...shuffle([aa, bb]), \r\n                c\r\n            ];\r\n        }\r\n\r\n        if (_gameType === \"equ+-\") {\r\n            let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n\r\n            let a0 = rand(1, 9);\r\n            let b0 = _noOverflow ? rand(0, 9 - a0) : rand(10 - a0, 9);\r\n            let aa = n2d(tzero(a) + a0);\r\n            let bb = n2d(tzero(b) + b0);\r\n            let c  = aa.plus(bb);\r\n\r\n            return [\r\n                ...shuffle([aa, bb]), \r\n                c\r\n            ];\r\n        }\r\n\r\n        if (_gameType === \"equ*/\") {\r\n            let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n\r\n            let c = a.mul(b);\r\n            let ab = _noAbSwap ? [a, b] : shuffle([a, b]);\r\n\r\n            return [\r\n                ...ab,\r\n                c\r\n            ];\r\n        }\r\n\r\n        if (_gameType === \"ab+c=d\") {\r\n            let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n            let d = get(_d, _dA);\r\n\r\n            let c = d.minus(a.mul(b));\r\n\r\n            return [\r\n                ...shuffle([a, b]), \r\n                c, d\r\n            ];\r\n        }\r\n\r\n        if (_gameType === \"a*/(b+c)=d\") {\r\n            for (let loopLimit = 100; true; ) {\r\n                let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n                let c = get(_c, _cA);\r\n                let d: Decimal;\r\n\r\n                if (pattern.includes('+')) {\r\n                    d = a.mul(b).plus(a.mul(c));\r\n                } else {\r\n                    if (b.lt(c))\r\n                        [b, c] = [c, b];\r\n                    d = a.mul(b).minus(a.mul(c));\r\n                }\r\n\r\n                if (pattern.includes('/') && d.eq(0) && loopLimit-- > 0)\r\n                    continue;\r\n\r\n                if (pattern.includes('/'))\r\n                    [a, d] = [d, a];\r\n\r\n                return [a, b, c, d];\r\n            }\r\n        }\r\n\r\n        if (_gameType === \"a/b=c/d\") {\r\n            for (let loopLimit = 100; true; ) {\r\n                let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n\r\n                let c = get(_c, _cA);\r\n                let n1 = get(_n, _nA);\r\n                let n2 = get(_n, _nA);\r\n\r\n                if (a.gt(b) && _properOnly)\r\n                    [a, b] = [b, a];\r\n\r\n                if (a.eq(b) && loopLimit-- > 0)\r\n                    continue;\r\n\r\n                return [\r\n                    a.mul(n1), \r\n                    b.mul(n1),\r\n                    a.mul(c).mul(n2), \r\n                    b.mul(c).mul(n2)\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (percentsSimple(_gameType, pattern)) {\r\n            let b = get(_b, _bA);\r\n            let c: Decimal;\r\n            let a: Decimal;\r\n            let loopLimit = 100;\r\n            do {\r\n                c = get(_c, _cA);\r\n                a = c.mul(100).div(b);\r\n                if (--loopLimit === 0) break;\r\n            } while (!a.trunc().eq(a));\r\n\r\n            if (loopLimit === 0)\r\n                console.log(d2n([a, b, c]));\r\n\r\n            return [a, b, c];\r\n        }\r\n        else\r\n        if (percentsPlus(_gameType, pattern)) {\r\n            // assert _bA is here\r\n            let b = randFromIf(_bA, x => x.gte(100));\r\n            let c: Decimal;\r\n            let a: Decimal;\r\n\r\n            let loopLimit = 100;\r\n            do {\r\n                c = get(_c, _cA);\r\n                a = c.mul(100).div(b);\r\n                if (--loopLimit === 0) break;\r\n            } while (!a.trunc().eq(a));\r\n\r\n            b = b.minus(100);\r\n\r\n            if (loopLimit === 0)\r\n                console.log(d2n([a, b, c]));\r\n\r\n            return [a, b, c];\r\n        }\r\n        else\r\n        if (percentsMinus(_gameType, pattern)) {\r\n            // assert _bA is here\r\n            let b = randFromIf(_bA, x => x.lt(100));\r\n            let c: Decimal;\r\n            let a: Decimal;\r\n\r\n            let loopLimit = 100;\r\n            do {\r\n                c = get(_c, _cA);\r\n                a = c.mul(100).div(b);\r\n                if (--loopLimit === 0) break;\r\n            } while (!a.trunc().eq(a));\r\n\r\n            if (loopLimit === 0)\r\n                console.log(d2n([a, b, c]));\r\n\r\n            b = n2d(100).minus(b);\r\n\r\n            return [a, b, c];\r\n        }\r\n\r\n        if (_gameType === \"%-a-of-c\") {\r\n            let b = get(_b, _bA);\r\n            let c: Decimal;\r\n            let a: Decimal;\r\n            let loopLimit = 100;\r\n            do {\r\n                c = get(_c, _cA);\r\n                a = b.mul(c).div(100);\r\n                if (--loopLimit === 0) break;\r\n            } while (!a.trunc().eq(a));\r\n\r\n            if (loopLimit === 0)\r\n                console.log(d2n([a, b, c]));\r\n\r\n            return [a, b, c];\r\n        }\r\n\r\n        if (_gameType === \"%-b-is-c\") {\r\n            let b = get(_b, _bA);\r\n            let c: Decimal;\r\n            let a: Decimal;\r\n            let loopLimit = 100;\r\n            do {\r\n                a = get(_a, _aA);\r\n                c = a.mul(b).div(100);\r\n                if (--loopLimit === 0) break;\r\n            } while (!c.trunc().eq(c));\r\n\r\n            if (loopLimit === 0)\r\n                console.log(d2n([a, b, c]));\r\n\r\n            return [a, b, c];\r\n        }\r\n\r\n        if (_gameType === \"fr+-\") {\r\n            let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n            let c = a.plus(b);\r\n\r\n            return [\r\n                ...shuffle([a, b]), \r\n                c\r\n            ];\r\n        }\r\n\r\n        if (_gameType === \"fr*/\") {\r\n            let [a, b] = shuffle([get(_a, _aA), get(_b, _bA)]);\r\n\r\n            let c = pattern.includes('*') ?\r\n                a.mul(b) : a.div(b);\r\n\r\n            return [a, b, c];\r\n        }\r\n\r\n        if (_gameType === \"fr+-ab\") {\r\n            let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n\r\n            if (a.eq(b)) {\r\n                return pattern.includes('+') ?\r\n                    [a, b, a.plus(b)] :\r\n                    [a.plus(b), ...shuffle([b, a])];\r\n            }\r\n\r\n            if (pattern.includes('+')) {\r\n                return [...shuffle([a, b]), a.plus(b)];\r\n            } else {\r\n                let lhs = Decimal.max(a, b);\r\n                let rhs = Decimal.min(a, b);\r\n                let c = lhs.minus(rhs);\r\n                return [lhs, rhs, c];\r\n            }\r\n        }\r\n\r\n        if (_gameType === \"fr-reduction\") {\r\n            for (let loopLimit = 20; true; ) {\r\n                let [a, b] = [get(_a, _aA), get(_b, _bA)];\r\n                let d = get(_d, _dA);\r\n                a = a.mul(d);\r\n                b = b.mul(d);\r\n                let fr = nd2f(a, b);\r\n                let c = f2d(fr);\r\n\r\n                if (a.gte(b) && _properOnly && loopLimit-- > 0)\r\n                    continue;\r\n\r\n                return [a, b, c];\r\n            }\r\n        }\r\n\r\n        if (_gameType === \"dividers\") {\r\n            do {\r\n                let [a, aDividers] = makeProduct(_a[0], _a[1], _nA);\r\n                let [b, bDividers] = makeProduct(_b[0], _b[1], _nA);\r\n\r\n                if (a.eq(b)) continue;\r\n\r\n                _ansDividers = [...aDividers, ...bDividers];\r\n\r\n                let [c] = makeProduct(_c[0], _c[1], _ansDividers);\r\n\r\n                if (c.eq(a) || c.eq(b)) continue;\r\n\r\n                return [a, b, c];\r\n            } \r\n            while (true);\r\n        }\r\n\r\n        if (_gameType === \"dividers-2\") {\r\n            let abc: Decimal[];\r\n            for (let loopLimit = 50; loopLimit-- > 0; ) {\r\n                let [a, aDividers] = makeProduct(_a[0], _a[1], _nA);\r\n                let [b, bDividers] = makeProduct(_b[0], _b[1], _nA);\r\n\r\n                if (a.eq(b)) continue;\r\n\r\n                let all = shuffle([...aDividers, ...bDividers]);\r\n                _ansDividers = all;\r\n\r\n                let [ans, c, d, e, f]: Decimal[] = [];\r\n\r\n                switch (all.length) {\r\n                    default:\r\n                        continue;\r\n                    case 3:\r\n                        [ans, c, d] = all;\r\n                        abc = [a, b, c, d, ans];\r\n                        break;\r\n                    case 4:\r\n                        [ans, c, d, e] = all;\r\n                        [c, d] = c.lt(d) ? \r\n                            [c.mul(e), d] : \r\n                            [c, d.mul(e)];\r\n                        abc = [a, b, c, d, ans];\r\n                        break;\r\n                    case 5:\r\n                        [ans, c, d, e, f] = all;\r\n                        [c, d] = c.lt(d) ? [c, d] : [d, c];\r\n                        [e, f] = e.lt(f) ? [e, f] : [f, e];\r\n                        c = c.mul(f);       // min(c, d) * max(e, f)\r\n                        d = d.mul(e);       // max(c, d) * min(e, f)\r\n                        abc = [a, b, c, d, ans];\r\n                        break;\r\n                }\r\n\r\n                if (allAreUnique(abc)) break;\r\n            } \r\n            return abc;\r\n        }\r\n\r\n        if (_gameType == \"dividers+-\") {\r\n            let r = _a;\r\n            let factors: Map<number, number[]> = new Map([\r\n                [2, [2, 7]],\r\n                [3, [3, 7]],\r\n                [5, [5, 7]],\r\n                [6, [2, 3]],\r\n                [7, [7, 11]],\r\n                [9, [7, 8]],\r\n                [10, [2, 5]],\r\n            ]);\r\n            let ans = randFrom([...factors.keys()]);\r\n            let others = factors.get(ans);\r\n            let s = makeProduct(r[0], r[1], others, ans, false)[0];\r\n            let a = rand(r[0], d2n(s.minus(r[0])));\r\n            let b = s.minus(a);\r\n            return n2d([a, b, ans]);\r\n        }\r\n\r\n/*        if (_gameType == \"sequence\") {\r\n            _sequence = newSequence();\r\n            return _sequence;\r\n        }\r\n*/\r\n        throw(`Unknown game type '${_gameType}'`);\r\n    }\r\n\r\n    function makeAnswers(abc: Decimal[], rightAns: Decimal): Decimal[] {\r\n        if (_gameType === \"+-dots\") {\r\n            let f1 = pm(n2d(10)).div(_dotsFactor);\r\n            let f2 = pm(n2d(rand(1, 1))).div(_dotsFactor);\r\n            let f3 = pm(n2d(rand(2, 2))).div(_dotsFactor);\r\n            return shuffle([\r\n                rightAns,\r\n                rightAns.plus(f1),\r\n                rightAns.plus(f2),\r\n                rightAns.plus(f3)\r\n            ]);\r\n        }\r\n\r\n        if (_gameType === \"equ+-\") {\r\n            return shuffle([\r\n                rightAns,\r\n                rightAns.plus(pm(10)),\r\n                rightAns.plus(pm(rand(1, 1))),\r\n                rightAns.plus(pm(rand(2, 2)))\r\n            ]);\r\n        }\r\n\r\n        if (_gameType === \"equ*/\") {\r\n            return shuffle([\r\n                rightAns,\r\n                rightAns.plus(pm(rand(1, 1))),\r\n                rightAns.plus(pm(rand(2, 2))),\r\n                rightAns.plus(pm(rand(3, 3)))\r\n            ]);\r\n        }\r\n\r\n        if (_gameType === \"ab+c=d\" || \r\n            _gameType === \"a*/(b+c)=d\" ||\r\n            _gameType === \"a/b=c/d\") {\r\n            return shuffle([\r\n                rightAns,\r\n                rightAns.plus(pm(rand(1, 1))),\r\n                rightAns.plus(pm(rand(2, 2))),\r\n                rightAns.plus(pm(rand(3, 3)))\r\n            ]);\r\n        }\r\n\r\n        if (_gameType.includes(\"%\")) {\r\n            return shuffle([\r\n                rightAns,\r\n                rightAns.plus(pm(5)),\r\n                rightAns.plus(pm(10)),\r\n                rightAns.plus(pm(15))\r\n            ]);\r\n        }\r\n\r\n        if (_gameType.includes('fr+-') || _gameType === \"fr*/\") {\r\n            let variate = (x: Decimal, v: Decimal) => \r\n                x.gt(v) ? x.plus(v.mul(pm(1))) : x.plus(v);\r\n\r\n            for (let loopLimit = 100; true; )\r\n            {\r\n                let answers = [\r\n                    rightAns,\r\n                    variate(rightAns, abc[0]),\r\n                    variate(rightAns, abc[1]),\r\n                    variate(rightAns, abc[2])\r\n                ];\r\n\r\n                if (!allAreUnique(answers) && loopLimit-- > 0)\r\n                    continue;\r\n\r\n                return shuffle(answers);\r\n            }\r\n        }\r\n\r\n        if (_gameType === \"fr-reduction\") {\r\n            let va = (x: number, v: number) => \r\n                x > v ? x + pm(v) : x + v;\r\n\r\n            let fr = d2f(rightAns);\r\n\r\n            for (let loopLimit = 100; true; )\r\n            {\r\n                let n1 = fr.n;\r\n                let n2 = va(fr.n, 1);\r\n                let d1 = fr.d;\r\n                let d2 = va(fr.d, 1);\r\n\r\n                let answers = [\r\n                    rightAns,\r\n                    n2d(n2).div(d1),\r\n                    n2d(n1).div(d2),\r\n                    n2d(n2).div(d2)\r\n                ];\r\n\r\n                if (!allAreUnique(answers) && loopLimit-- > 0)\r\n                    continue;\r\n\r\n                return shuffle(answers);\r\n            }\r\n        }\r\n\r\n        if (_gameType === \"dividers\") {\r\n\r\n            let nDividers = _nA.filter(x => !_ansDividers.some(y => x.eq(y)));\r\n            let pAll = _ansDividers.reduce((x, y) => x.mul(y));\r\n\r\n            [2, 3].forEach(x => {\r\n                let p = n2d(x);\r\n                while (pAll.mod(p).eq(0)) p = p.mul(x);\r\n                nDividers.push(p);\r\n            });\r\n\r\n            // console.log(`choose dividers (${pAll}): `, d2n(_ansDividers), d2n(nDividers));\r\n\r\n            let variate = () => {\r\n                for (let loopLimit = 30; true; )\r\n                {\r\n                    let p = randFrom(_ansDividers);\r\n\r\n                    if (_ansDividers.length > 2 && trueFalse())\r\n                        p = p.mul(randFrom(_ansDividers));\r\n\r\n                    p = p.mul(randFrom(nDividers));\r\n\r\n                    if (p.gt(_c[1]) && loopLimit-- > 0)\r\n                        continue;\r\n\r\n                    return p;\r\n                }\r\n            }\r\n\r\n            for (let loopLimit = 100; true; )\r\n            {\r\n                let answers = [\r\n                    rightAns,\r\n                    variate(),\r\n                    variate(),\r\n                    variate()\r\n                ];\r\n\r\n                if (!allAreUnique(answers) && loopLimit-- > 0)\r\n                    continue;\r\n\r\n                return shuffle(answers);\r\n            }\r\n        }\r\n\r\n        if (_gameType === \"dividers-2\") {\r\n            let dividers = _ansDividers.filter(x => !x.eq(rightAns));\r\n            dividers = [...dividers, ...n2d([23, 29])];\r\n            let answers: Decimal[];\r\n            for (let loopLimit = 30; loopLimit-- > 0; ) {\r\n                let [a1, a2, a3] = shuffle(dividers);\r\n                answers = [rightAns, a1, a2, a3];\r\n\r\n                if (allAreUnique(answers)) break;\r\n            }\r\n\r\n            return shuffle(answers);\r\n        }\r\n\r\n        if (_gameType === \"dividers+-\") {\r\n            let answers = [rightAns];\r\n            let s = abc[0].plus(abc[1]);\r\n            for (let f = 2; f < d2n(s); f++) {\r\n                if (rightAns.eq(f)) continue;\r\n                if (s.mod(f).eq(0)) continue;\r\n                if (f === 4) continue;\r\n\r\n                answers.push(n2d(f));\r\n                if (answers.length >= 4) break;\r\n            }\r\n            answers = [...answers, ...n2d([11, 13, 17])].slice(0, 4);\r\n            return shuffle(answers);\r\n        }\r\n\r\n        if (_gameType == \"sequence\") {\r\n            let answers = _sequence.answers;\r\n            return answers;\r\n        }\r\n\r\n        throw(`Unknown game type '${_gameType}'`);\r\n    }\r\n\r\n    function makeEqu(pattern: string, abc: Decimal[]): [string, Decimal] {\r\n\r\n        let vars = pattern.match(/\\b[A-Z]\\b/g);     // single upcase letters\r\n        let v = randFrom(vars);\r\n\r\n        let equ = pattern;\r\n\r\n        [\r\n            [/_r/g, \"color(red)\"],\r\n            [/_g/g, \"color(green)\"],\r\n            [/_b/g, \"color(blue)\"]\r\n        ].forEach(g => equ = equ.replace(g[0], <string> g[1]))\r\n\r\n        equ = equ\r\n            .replace(v, '$')\r\n            .replace(\"xx\", '@')\r\n\r\n        let ans = abc[v.charCodeAt(0) - 'A'.charCodeAt(0)];\r\n\r\n        if (_gameType == \"ab+c=d\") {\r\n            let c = abc[2];\r\n            if (c.lt(0)) {\r\n                abc[2] = c.neg();\r\n                equ = equ.replace('+', \"-\");\r\n            }\r\n            if (ans.lt(0)) \r\n                ans = ans.neg();\r\n        }\r\n\r\n        if (_gameType === \"dividers+-\" && trueFalse()) {\r\n            let s = abc[0].plus(abc[1].mul(2));\r\n            abc = [s, abc[1], abc[2], abc[3]];\r\n            equ = equ.replace('+', '-');\r\n        }\r\n\r\n        let dotsOnly = _gameType === \"+-dots\";\r\n\r\n        function at(i: number): string {\r\n            if (i >= abc.length) return \"\";\r\n            if (!abc[i]) return \"\";\r\n            return dotsOnly ?\r\n                abc[i].toString() :\r\n                d2t(abc[i]);\r\n        }\r\n\r\n        equ = equ\r\n            .toLocaleLowerCase()\r\n            .replace(/\\ba\\b/, at(0))\r\n            .replace(/\\bb\\b/, at(1))\r\n            .replace(/\\bc\\b/, at(2))\r\n            .replace(/\\bd\\b/, at(3))\r\n            .replace(/\\be\\b/, at(4))\r\n            .replace(/\\bf\\b/, at(5))\r\n            .replace(/\\bg\\b/, at(6))\r\n            .replace(/\\bh\\b/, at(7));\r\n\r\n        equ = equ\r\n            .replace('@', \"xx\")\r\n            .replace('$', randFrom(_x));\r\n\r\n        return [equ, ans];\r\n    }\r\n\r\n    class CGame implements IGame {\r\n        constructor() {\r\n            for (let cmd of Anki.commands()) {\r\n                switch (cmd[0].toLocaleLowerCase()) {\r\n                    case \"equ+-\":       _gameType = \"equ+-\";     break;\r\n                    case \"equ*/\":       _gameType = \"equ*/\";     break;\r\n                    case \"ab+c=d\":      _gameType = \"ab+c=d\";    break;\r\n                    case \"%-simple\":    _gameType = \"%-simple\";  break;\r\n                    case \"%-plus\":      _gameType = \"%-plus\";    break;\r\n                    case \"%-minus\":     _gameType = \"%-minus\";   break;\r\n                    case \"%-all\":       _gameType = \"%-all\";     break;\r\n                    case \"game\":        _gameType = <GameType> cmd[1];\r\n                    case \"no-overflow\": _noOverflow = false;     break;\r\n                    case \"proper-only\": _properOnly = true;      break;\r\n                    case \"timer\":       _seconds = parseInt(cmd[1]);      break;\r\n                    case \"m-scale\":     _mathScale = parseFloat(cmd[1]); break;\r\n                    case \"no-ab-swap\":  _noAbSwap = true;        break;\r\n                    case \"dots-factor\": _dotsFactor = parseInt(cmd[1]); break;\r\n                    case \"x\":           _x = cmd.slice(1);       break;\r\n                    case \"a\": _a = cmd.slice(1).map(x => parseInt(x)); break;\r\n                    case \"b\": _b = cmd.slice(1).map(x => parseInt(x)); break;\r\n                    case \"c\": _c = cmd.slice(1).map(x => parseInt(x)); break;\r\n                    case \"d\": _d = cmd.slice(1).map(x => parseInt(x)); break;\r\n                    case \"n\": _n = cmd.slice(1).map(x => parseInt(x)); break;\r\n                    case \"a[]\": _aA = cmd.slice(1).map(x => parseDecimal(x)); break;\r\n                    case \"b[]\": _bA = cmd.slice(1).map(x => parseDecimal(x)); break;\r\n                    case \"c[]\": _cA = cmd.slice(1).map(x => parseDecimal(x)); break;\r\n                    case \"d[]\": _dA = cmd.slice(1).map(x => parseDecimal(x)); break;\r\n                    case \"n[]\": _nA = cmd.slice(1).map(x => parseDecimal(x)); break;\r\n                }\r\n            }\r\n            _patterns = Anki.tokens();\r\n            _next = -1;\r\n        }\r\n\r\n        isLast() {\r\n            return _next + 1 >= _totalRounds;\r\n        }\r\n\r\n        addRounds(count: number) {\r\n            _totalRounds += count;\r\n        }\r\n\r\n        nextRound(): Round {\r\n            _next++;\r\n\r\n            let gameType = _gameType;\r\n\r\n            let pattern = _patterns[_next % _patterns.length];\r\n            let abc = newAbc(pattern);\r\n\r\n            let [equ, rightAns] = makeEqu(pattern, abc);\r\n\r\n            let answers = makeAnswers(abc, rightAns);\r\n\r\n            let progress = [\r\n                _next < _totalRounds ? _next : _totalRounds,\r\n                _totalRounds\r\n            ];\r\n\r\n            return {\r\n                seconds: _seconds,\r\n                gameType,\r\n                progress,\r\n                equ,\r\n                mathScale: _mathScale,\r\n                rightAns,\r\n                answers\r\n            };\r\n        }\r\n    }\r\n\r\n    export function newEquation(): IGame {\r\n        return new CGame();\r\n    }\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import type { Decimal } from \"decimal.js\"\r\n\r\n    import { onAny, fireAny } from \"./../core/IoBus.svelte\"\r\n    import { CTimedCmd } from \"./../core/TimedCmd.svelte\"\r\n    import type { ITimedCmd } from \"./../core/TimedCmd.svelte\"\r\n\r\n    export type GameType = \r\n        \"equ+-\" | \"equ*/\" | \"ab+c=d\" | \"a*/(b+c)=d\" | \"a/b=c/d\" |\r\n        \"%-simple\" | \"%-plus\" | \"%-minus\" | \"%-all\" | \"%-a-of-c\" | \"%-b-is-c\" |\r\n        \"fr+-\" | \"fr+-ab\" | \"fr-reduction\" | \"fr*/\" |\r\n        \"dividers\" | \"dividers-2\" | \"dividers+-\" | \"sequence\" |\r\n        \"+-dots\";\r\n\r\n    export interface Round {\r\n        seconds: number;\r\n        gameType: GameType;\r\n        progress: number[];\r\n        equ: string;\r\n        mathScale: number;\r\n        rightAns: Decimal;\r\n        answers: Decimal[];\r\n    }\r\n\r\n    export interface GameState {\r\n        \"start\": {};\r\n        \"clicked\": {};\r\n        \"answered\": {};\r\n        \"right\": {};\r\n        \"wrong\": {};\r\n    }\r\n\r\n    export interface GameEvent {\r\n        \"ans-click\": number;\r\n        \"equ-click\": string;\r\n        \"clock-click\": boolean;\r\n        \"progress-click\": number;\r\n        \"grid-click\": {};\r\n    }\r\n\r\n    export interface Config {\r\n        rounds: number;\r\n    }\r\n\r\n    export interface Msgs {\r\n        \"--cmd-new-round\": {}\r\n        \"--evt-click\" : {}\r\n        \"--evt-yes\": {},\r\n        \"--evt-no\": {},\r\n        \"--evt-done\": {}\r\n        \"--cmd-idle\": {}\r\n        \"--evt-time-is-up\": {}\r\n    }\r\n\r\n    export interface Script {\r\n        readonly abc: Decimal[];\r\n        readonly answers: Decimal[];\r\n        readonly equ: string;\r\n    }\r\n\r\n    export function on<Name extends keyof(Msgs)>(name: Name, cb: (args: Msgs[Name]) => void): void {\r\n        onAny(name, cb);\r\n    }\r\n\r\n    export function fire<Name extends keyof(Msgs)>(name: Name, args?: Msgs[Name]): void {\r\n        fireAny(name, args);\r\n    }\r\n\r\n    export function newTimedCmd(cmd: keyof Msgs, timeout: number, jitter?: number): ITimedCmd {\r\n        return new CTimedCmd(cmd, timeout, jitter ?? 0);\r\n    }\r\n\r\n    export function parseCard(cmds: Iterable<string[]>) {\r\n\r\n    }\r\n\r\n</script>","<script lang=\"ts\">\r\n    import type { Decimal } from \"decimal.js\"\r\n\r\n    import { toAscii } from \"../core/AsciiMathUtils\";\r\n    import { isFraction, trueFalse } from \"../core/Helpers\";\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n    import { d2t } from \"../core/Helpers\"\r\n    import type { GameType } from \"./Model.svelte\";\r\n\r\n    type State = \"start\" | \"clicked\" | \"right\" | \"wrong\";\r\n\r\n    export let gameType: GameType;\r\n    export let ga: string;\r\n    export let value: Decimal;\r\n    export let units: string = \"\";\r\n    export let bgColor = getBgColor(ga, \"bg-gray-100\");\r\n    export let sz: number = 30;\r\n\r\n    let _text: string;\r\n    let _sz: number;\r\n    let _bgColor: string;\r\n\r\n    function toText(v: Decimal) {\r\n        if (!isFraction(v) && !units)\r\n            return v.toNumber().toLocaleString('en');\r\n\r\n        let dotsOnly = gameType === \"+-dots\";\r\n\r\n        let text = dotsOnly ?\r\n            v.toString() :\r\n            d2t(v, trueFalse());\r\n\r\n        if (units)\r\n            text += units;\r\n\r\n        return toAscii(text);\r\n    }\r\n\r\n    export function setState(state: State) {\r\n        switch (state) {\r\n\r\n            case \"start\":\r\n                _text = \"??\";\r\n                _bgColor = bgColor;\r\n                break;\r\n\r\n            case \"clicked\":\r\n                _text = toText(value);\r\n                _bgColor = bgColor;\r\n                break;\r\n\r\n            case \"right\":\r\n                _text = toText(value);\r\n                _bgColor = \"bg-green-200\";\r\n                break;\r\n\r\n            case \"wrong\":\r\n                _text = toText(value);\r\n                _bgColor = \"bg-red-200\";\r\n                break;\r\n        }\r\n\r\n        _sz = sz - 1.2 * _text.length;\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<button\r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    use:pulse\r\n    use:bounceOnDrag\r\n    on:click\r\n>\r\n    {_text}\r\n</button>\r\n","<script lang=\"ts\">\r\n\r\n    import { tick } from \"svelte\";\r\n    import { onMount } from \"svelte\";\r\n\r\n    import type { Decimal } from \"decimal.js\"\r\n\r\n    import { refreshMath } from \"../core/MathJax.svelte\";\r\n    import { Mp3 } from \"../core/Mp3.svelte\";\r\n    import AsciiMath from \"../core/AsciiMath.svelte\"\r\n    import Clock from './../core/Clock.svelte'\r\n    import Grid from \"../core/Grid.svelte\"\r\n    import Progress from \"../core/Progress.svelte\"\r\n    import Timer from \"../core/Timer.svelte\"\r\n    import Congrats from '../core/Congrats.svelte';\r\n    import { run } from \"../core/Helpers\";\r\n\r\n    import { newEquation } from \"./Game.svelte\"\r\n    import { on, fire, newTimedCmd } from \"./Model.svelte\";\r\n    import type { Round } from \"./Model.svelte\"\r\n    import Ans from \"./Ans.svelte\"\r\n\r\n    let timer: Timer;\r\n    let congrats: Congrats;\r\n\r\n    let _game = newEquation();\r\n    let _round = _game.nextRound();\r\n    let _answers: Ans[] = [null, null, null, null];\r\n    let _state: \"start\" | \"clicked\" | \"answered\";\r\n    let _progress: number[] = [1, 10];\r\n    let _tcNewRound = newTimedCmd(\"--cmd-new-round\", 1000);\r\n    let _tcIdle = newTimedCmd(\"--cmd-idle\", 10000, 3000);\r\n\r\n    let _recreate = _answers.map(_ => new Object());\r\n\r\n    function equClick() {\r\n        Mp3.playRandom();\r\n        switch (_round.gameType) {\r\n            case \"sequence\":\r\n            case \"dividers-2\":\r\n                newRound();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function anyClick(): boolean {\r\n        _tcIdle.reset();\r\n\r\n        if (_state == \"start\") {\r\n            _state = \"clicked\";\r\n            _answers.forEach(ans => ans.setState(\"clicked\"));\r\n\r\n            run(() => refreshMath());\r\n\r\n            return true;\r\n        }\r\n\r\n        if (_state === \"clicked\")\r\n            return false;\r\n\r\n        if (_state == \"answered\") {\r\n            newRound();\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function gotAnswer(value: Decimal) {\r\n        _tcIdle.reset();\r\n\r\n        if (anyClick())\r\n            return;\r\n\r\n        if (_state === \"clicked\") {\r\n            _state = \"answered\";\r\n\r\n            let answerAt = _round.answers.findIndex(x => x.eq(value));\r\n            let rightAt = _round.answers.findIndex(x => x.eq(_round.rightAns));\r\n\r\n            if (answerAt === rightAt) {\r\n                _progress[0] += 1;\r\n                let isLast = _game.isLast(_round);\r\n                Mp3.play(isLast ? \"done\" : \"yes\");\r\n                _tcNewRound.reset();\r\n                if (isLast)\r\n                    congrats.play();\r\n            } \r\n            else {\r\n                _answers[answerAt].setState(\"wrong\");\r\n                Mp3.play(\"no\");\r\n                _game.addRounds(2);\r\n                _progress[0] += 1;\r\n                _progress[1] += 2;\r\n            }\r\n\r\n            _answers[rightAt].setState(\"right\");\r\n        }\r\n    }\r\n\r\n    async function newRound() {\r\n        _recreate = _answers.map(_ => new Object());\r\n        _round = _game.nextRound();\r\n        await tick()\r\n        startRound();\r\n    }\r\n\r\n    function idle() {\r\n        Mp3.play(\"idle\");\r\n        _tcIdle.reset();\r\n    }\r\n\r\n    function startRound() {\r\n        _state = \"start\";\r\n\r\n        _tcIdle.reset();\r\n        _tcNewRound.cancel();\r\n\r\n        _answers.forEach(ans => {\r\n            ans.setState(\"start\");\r\n        });\r\n\r\n        _progress = _round.progress;\r\n\r\n        switch (_round.gameType) {\r\n            case \"dividers\":\r\n            case \"dividers-2\":\r\n            case \"dividers+-\":\r\n            case \"sequence\":\r\n                anyClick();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function getScale(round: Round): number {\r\n        if (round.mathScale)\r\n            return round.mathScale;\r\n\r\n        switch (round.gameType) {\r\n            case \"%-simple\": \r\n            case \"%-plus\": \r\n            case \"%-minus\": \r\n            case \"%-all\":\r\n                return 1.2;\r\n            case \"dividers\":\r\n                return 0.3;\r\n            case \"dividers-2\":\r\n                return 0.4;\r\n            case \"dividers+-\":\r\n                return 0.35;\r\n            case \"sequence\":\r\n                return 0.35;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    function getAnsUnits(round: Round): string {\r\n        switch (round.gameType) {\r\n            case \"%-a-of-c\": return \"%\";\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    function timeIsUp() {\r\n        _game.addRounds(1);\r\n        _progress[1] += 1;\r\n        timer.restart();\r\n        Mp3.play(\"time-is-up\");\r\n    }\r\n\r\n    onMount(() => startRound());\r\n\r\n    on(\"--cmd-new-round\", () => newRound());\r\n    on(\"--cmd-idle\", () => idle());\r\n    on(\"--evt-time-is-up\", () => timeIsUp());\r\n\r\n    let layout = {\r\n        areas: `\r\n            \"prg   .    clk \"\r\n            \"equ   equ  equ \"\r\n            \"a0    .    a1  \"\r\n            \"a2    .    a3  \"\r\n            \"tm    tm   tm  \"\r\n        `,\r\n        cols: `2fr 1fr 2fr`,\r\n        rows: `50px 80px 80px 80px 5px`,\r\n        bgColors: {\r\n            prg: \"bg-green-300\",\r\n            equ: \"bg-yellow-50\",\r\n            tm: \"bg-blue-100\"\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<Grid {layout}\r\n    on:click={() => anyClick()}\r\n>\r\n    <Progress ga=\"prg\" values={_progress} />\r\n\r\n    <Clock ga=\"clk\" />\r\n\r\n    <AsciiMath \r\n        ga=\"equ\"\r\n        sz={40}\r\n        exp={_round.equ}\r\n        scale={getScale(_round)}\r\n        on:click={() => equClick()}\r\n    />\r\n\r\n    {#each _round.answers as ans, no (_recreate[no])}\r\n        <Ans\r\n            gameType={_round.gameType}\r\n            ga={`a${no}`} \r\n            value={ans}\r\n            units={getAnsUnits(_round)}\r\n            bind:this={_answers[no]} \r\n            on:click={() => gotAnswer(ans)}\r\n        />\r\n    {/each}\r\n\r\n    <Timer ga=\"tm\" seconds={_round.seconds}\r\n        bind:this={timer}\r\n        onExpiration={() => fire(\"--evt-time-is-up\")}\r\n    />\r\n    \r\n    <Congrats bind:this={congrats} />\r\n</Grid>\r\n","<script context=\"module\" lang=\"ts\">\r\n\r\n    import type { Decimal } from \"decimal.js\"\r\n\r\n    import { onAny, fireAny } from \"./../core/IoBus.svelte\"\r\n    import { CTimedCmd } from \"./../core/TimedCmd.svelte\"\r\n    import type { ITimedCmd } from \"./../core/TimedCmd.svelte\"\r\n\r\n    export interface Round {\r\n        fr: string;\r\n        answers: string[];\r\n        rightAt: number;\r\n        progress: number[];\r\n    }\r\n\r\n    export interface Config {\r\n        rounds: number;\r\n    }\r\n\r\n    export interface Msgs {\r\n        \"--cmd-new-round\": {}\r\n        \"--evt-click\" : {}\r\n        \"--evt-yes\": {},\r\n        \"--evt-no\": {},\r\n        \"--evt-done\": {}\r\n        \"--cmd-idle\": {}\r\n        \"--evt-time-is-up\": {}\r\n    }\r\n\r\n    export function on<Name extends keyof(Msgs)>(name: Name, cb: (args: Msgs[Name]) => void): void {\r\n        onAny(name, cb);\r\n    }\r\n\r\n    export function fire<Name extends keyof(Msgs)>(name: Name, args?: Msgs[Name]): void {\r\n        fireAny(name, args);\r\n    }\r\n\r\n    export function newTimedCmd(cmd: keyof Msgs, timeout: number, jitter?: number): ITimedCmd {\r\n        return new CTimedCmd(cmd, timeout, jitter ?? 0);\r\n    }\r\n\r\n</script>","<script context=\"module\" lang=\"ts\">\r\n\r\n    import { Decimal } from \"decimal.js\"\r\n    import Fraction from \"fraction.js\";\r\n\r\n    import { Anki } from \"../core/Anki\";\r\n    import { rand, run, shuffle } from \"../core/Helpers\";\r\n\r\n    import type { Config, Round } from \"./Model.svelte\"\r\n\r\n    interface IGame {\r\n        isLast(): boolean;\r\n        addRounds(count: number);\r\n        nextRound(): Round;\r\n    }\r\n\r\n    let _config = Anki.getConfig<Config>();\r\n    let _fractions: Fraction[];\r\n    let _next: number;\r\n    let _totalRounds = _config.rounds;\r\n\r\n    let n2d = (n: number) => new Decimal(n);\r\n    let s2f = (str: string) => new Fraction(str);\r\n\r\n    function fxd(n: number, digits: number) {\r\n        let p = n2d(10).pow(digits);\r\n        return n2d(n).mul(p).trunc().div(p);\r\n    }\r\n\r\n    function aTriple(fr: Fraction, abc: number[]): string[] {\r\n        let n = fr.valueOf();\r\n        let dots = n.toFixed(5).length < n.toString().length;\r\n\r\n        let triple = [\r\n            fr.toFraction(false),\r\n            fxd(n, 4).toString() + (dots ? \"...\" : \"\"),\r\n            fr.mul(100).toString(2) + '%'\r\n        ];\r\n\r\n        return [                // suffle triple in a same order for all triples in a round\r\n            triple[abc[0]],\r\n            triple[abc[1]],\r\n            triple[abc[2]]\r\n        ];\r\n    }\r\n\r\n\r\n    class CGame implements IGame {\r\n        constructor() {\r\n            function asFractions(lhs: Fraction, rhs: Fraction): number {\r\n                return lhs.compare(rhs);\r\n            }\r\n\r\n            for (let cmd of Anki.commands()) {\r\n                switch (cmd[0].toLocaleLowerCase()) {\r\n                }\r\n            }\r\n\r\n            _fractions = Anki\r\n                .tokens()\r\n                .map(t => s2f(t))\r\n                .sort(asFractions);\r\n\r\n            _next = -1;\r\n        }\r\n\r\n        isLast(): boolean {\r\n            return _next + 1 >= _totalRounds;\r\n        }\r\n\r\n        addRounds(count: number) {\r\n            _totalRounds += count;\r\n        }\r\n\r\n        nextRound(): Round {\r\n            _next++;\r\n\r\n            // assert _fractions.length >= 4\r\n            let firstAt = rand(0, _fractions.length - 4);\r\n\r\n            let abc = shuffle([0, 1, 2]);\r\n\r\n            let triples = shuffle([0, 1, 2, 3].map(i => \r\n                aTriple(_fractions[firstAt + i], abc)));\r\n\r\n            let fr = triples[0][0];\r\n\r\n            let answers = shuffle([\r\n                triples[0][1],\r\n                triples[1][1],\r\n                triples[2][2],\r\n                triples[3][2],\r\n            ]);\r\n\r\n            let rightAt = answers.findIndex(\r\n                ans => ans === triples[0][1]);\r\n\r\n            let progress = [\r\n                _next < _totalRounds ? _next : _totalRounds,\r\n                _totalRounds\r\n            ];\r\n\r\n            return {\r\n                fr, rightAt, answers,\r\n                progress\r\n            }\r\n        }\r\n    }\r\n\r\n    export function newFrPairs(): IGame {\r\n        return new CGame();\r\n    }\r\n\r\n</script>","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    type State = \"start\" | \"right\" | \"wrong\";\r\n\r\n    export let ga: string;\r\n    export let value: string;\r\n    export let bgColor = getBgColor(ga, \"bg-gray-100\");\r\n    export let sz: number = 24;\r\n\r\n    let _bgColor: string = bgColor;\r\n    $: _sz = sz - 1.1 * value.length;\r\n\r\n    export function setState(state: State) {\r\n        switch (state) {\r\n\r\n            case \"start\":\r\n                _bgColor = bgColor;\r\n                break;\r\n\r\n            case \"right\":\r\n                _bgColor = \"bg-green-200\";\r\n                break;\r\n\r\n            case \"wrong\":\r\n                _bgColor = \"bg-red-200\";\r\n                break;\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<button\r\n    class=\"{_bgColor} py-0.5 my-1\"\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    use:pulse\r\n    use:bounceOnDrag\r\n    on:click\r\n>\r\n    `{value}`\r\n</button>","<script lang=\"ts\">\r\n\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { getBgColor } from '../core/Grid.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    export let ga: string;\r\n    export let math: string;\r\n    export let bgColor = getBgColor(ga, \"bg-gray-100\");\r\n    export let sz: number = 30;\r\n\r\n    let _bgColor: string = bgColor;\r\n    let _sz: number = sz;\r\n\r\n</script>\r\n\r\n<p \r\n    class=\"{_bgColor}\"\r\n    style=\"grid-area:{ga};font-size:{_sz}px\" \r\n    use:pulse\r\n    use:bounceOnDrag\r\n    on:click\r\n>\r\n    `{math}`\r\n</p>\r\n","<script lang=\"ts\">\r\n    import { onMount } from \"svelte\";\r\n\r\n    import { Anki } from \"../core/Anki\";\r\n    import { refreshMath } from \"../core/MathJax.svelte\";\r\n    import { Mp3 } from \"../core/Mp3.svelte\";\r\n    import Clock from './../core/Clock.svelte'\r\n    import Grid from \"../core/Grid.svelte\"\r\n    import Progress from \"../core/Progress.svelte\"\r\n    import Timer from \"../core/Timer.svelte\"\r\n    import Congrats from '../core/Congrats.svelte';\r\n    import { run } from \"../core/Helpers\";\r\n\r\n    import type { Config, Round } from \"./Model.svelte\";\r\n    import { on, fire, newTimedCmd } from \"./Model.svelte\"\r\n    import { newFrPairs } from \"./Game.svelte\";\r\n    import Ans from \"./Ans.svelte\"\r\n    import Question from \"./Question.svelte\";\r\n\r\n    let timer: Timer;\r\n    let answers: Ans[] = [null, null, null, null];\r\n    let congrats: Congrats;\r\n\r\n    let _recreate = [{}, {}, {}, {}];\r\n\r\n    let _config = Anki.getConfig<Config>();\r\n    let _secondsPerRound= 12;\r\n    let _game = newFrPairs();\r\n    let _round = _game.nextRound();\r\n    let _state: \"start\" | \"answered\";\r\n    let _progress: number[] = [1, 10];\r\n    let _tcNewRound = newTimedCmd(\"--cmd-new-round\", 1000);\r\n    let _tcIdle = newTimedCmd(\"--cmd-idle\", 10000, 3000);\r\n\r\n\r\n    function init() {\r\n        for (let cmd of Anki.commands()) {\r\n            switch (cmd[0].toLocaleLowerCase()) {\r\n                case \"secondsPerRound\": _secondsPerRound = parseInt(cmd[1]); break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function newRound() {\r\n        _recreate = _recreate.map(_ => new Object());\r\n        _round = _game.nextRound();\r\n\r\n        run(() => startRound());\r\n    }\r\n\r\n    function startRound() {\r\n        _state = \"start\";\r\n\r\n        _tcNewRound.cancel();\r\n        _tcIdle.reset();\r\n\r\n        answers.forEach(ans => {\r\n            ans.setState(\"start\");\r\n        });\r\n\r\n        _progress = _round.progress;\r\n\r\n        run(() => refreshMath());\r\n    }\r\n\r\n    function queClick() {\r\n        Mp3.playRandom();\r\n    }\r\n\r\n    function anyClick(): boolean {\r\n        _tcIdle.reset();\r\n\r\n        if (_state == \"start\")\r\n            return false;\r\n\r\n        if (_state == \"answered\") {\r\n            newRound();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function gotAnswer(ans: string) {\r\n        _tcIdle.reset();\r\n\r\n        if (anyClick())\r\n            return;\r\n\r\n        _state = \"answered\";\r\n\r\n        let answerAt = _round.answers.findIndex(x => x === ans);\r\n        let rightAt = _round.rightAt;\r\n\r\n        if (answerAt === rightAt) {\r\n            _progress[0] += 1;\r\n            let isLast = _game.isLast();\r\n            Mp3.play(isLast ? \"done\" : \"yes\");\r\n            _tcNewRound.reset();\r\n            if (isLast)\r\n                congrats.play();\r\n        }\r\n        else {\r\n            answers[answerAt].setState(\"wrong\");\r\n            Mp3.play(\"no\");\r\n            _game.addRounds(2);\r\n            _progress[0] += 1;\r\n            _progress[1] += 2;\r\n        }\r\n\r\n        answers[rightAt].setState(\"right\");\r\n    }\r\n\r\n    function idle() {\r\n        Mp3.play(\"idle\");\r\n        _tcIdle.reset();\r\n    }\r\n\r\n    function timeIsUp() {\r\n        _game.addRounds(1);\r\n        _progress[1] += 1;\r\n        timer.restart();\r\n        Mp3.play(\"time-is-up\");\r\n    }\r\n\r\n    init();\r\n\r\n    on(\"--cmd-new-round\", () => newRound());\r\n    on(\"--cmd-idle\", () => idle());\r\n    on(\"--evt-time-is-up\", () => timeIsUp());\r\n\r\n    onMount(() => startRound());\r\n\r\n    let layout = {\r\n        areas: `\r\n            \"prg   .    clk \"\r\n            \"que   que  que \"\r\n            \"a0    .    a1  \"\r\n            \".     .    .   \"\r\n            \"a2    .    a3  \"\r\n            \".     .    .   \"\r\n            \"tm    tm   tm  \"\r\n        `,\r\n        cols: `2fr 1fr 2fr`,\r\n        rows: `50px 80px 70px 10px 70px 15px 5px`,\r\n        bgColors: {\r\n            prg: \"bg-green-300\",\r\n            que: \"bg-yellow-50 py-1\",\r\n            tm: \"bg-blue-100\"\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n\r\n<Grid {layout}\r\n    on:click={() => anyClick()}\r\n>\r\n    <Progress ga=\"prg\" values={_progress} />\r\n\r\n    <Clock ga=\"clk\" />\r\n\r\n    {#key _recreate[0]}\r\n    <Question ga=\"que\"\r\n        math={_round.fr}\r\n        sz={36}\r\n        on:click={() => queClick()}\r\n    /> {/key}\r\n\r\n    {#each _round.answers as ans, no (_recreate[no])}\r\n        <Ans \r\n            ga={`a${no}`} \r\n            value={ans}\r\n            bind:this={answers[no]} \r\n            on:click={() => gotAnswer(ans)}\r\n        />\r\n    {/each}\r\n\r\n    <Timer ga=\"tm\" seconds={_secondsPerRound * _config.rounds}\r\n        bind:this={timer}\r\n        onExpiration={() => fire(\"--evt-time-is-up\")}\r\n    />\r\n\r\n    <Congrats bind:this={congrats} />\r\n</Grid>","<script lang=\"ts\">\r\n    import { pulse } from '../core/Pulse.svelte';\r\n    import { bounceOnDrag } from \"../core/OnDrag.svelte\"\r\n\r\n    import type { WProblemStore } from './WProblem.Store'\r\n    import { isNumeric } from '../core/Helpers';\r\n\r\n    export let ga: string;\r\n    export let store: WProblemStore[\"answers\"][0];\r\n\r\n    let {value, isClicked, isRight} = store;\r\n    let bgColor: string;\r\n    let isNumber: boolean;\r\n\r\n    $: isNumber = isNumeric($value);\r\n\r\n    $: bgColor = !$isClicked ? \"bg-gray-100\" :\r\n        $isRight ? \"bg-green-200\" : \"bg-red-200\";\r\n</script>\r\n\r\n\r\n<button\r\n    class=\"{bgColor}\"\r\n    style=\"grid-area:{ga};\"\r\n    use:pulse\r\n    use:bounceOnDrag\r\n    on:click\r\n>\r\n    {#if isNumber}\r\n        {$value}\r\n    {:else}\r\n        <bdi dir=\"rtl\"\r\n            style=\"font-size:15px;\" \r\n        >\r\n            {$value}\r\n        </bdi>\r\n    {/if}\r\n</button>\r\n","<script lang=\"ts\">\r\n    import type { WProblemStore } from './WProblem.Store'\r\n\r\n    export let ga: string;\r\n    export let text: WProblemStore[\"text\"];\r\n</script>\r\n\r\n\r\n<!-- svelte-ignore a11y-click-events-have-key-events -->\r\n<div on:click\r\n    style=\"grid-area:{ga};\"\r\n>\r\n    {#each $text as para}\r\n        <p class='{para.css}'>\r\n            <bdi dir=\"rtl\">\r\n                {para.line}\r\n            </bdi>\r\n        </p>\r\n    {/each}\r\n</div>\r\n","import { readable, writable } from \"svelte/store\";\r\n\r\nimport { Anki } from \"../core/Anki\"\r\nimport type { WProblemModel } from \"./WProblem.Model\";\r\n\r\nlet anki = Anki.getCard();\r\n\r\nlet newWProblemStore = (model: WProblemModel) => ({\r\n    text: writable(model.text),\r\n    problemId: readable(model.problemId),\r\n    sets: readable(anki.sets),\r\n    answers: model.answers.map(ans => ({\r\n        value: writable(ans.value),\r\n        isRight: writable(ans.isRight),\r\n        isClicked: writable(false)\r\n    }))\r\n});\r\n\r\nexport default newWProblemStore;\r\nexport type WProblemStore = ReturnType<typeof newWProblemStore>;\r\n\r\n","import { text } from \"svelte/internal\";\r\nimport { Anki } from \"../core/Anki\"\r\nimport type { WProblemModel } from \"./WProblem.Model\";\r\n\r\n\r\ntype Text = WProblemModel[\"text\"];\r\ntype Options = WProblemModel[\"options\"];\r\n\r\nfunction parseText(str: string): Text {\r\n    str = str.replaceAll(\"\\r\", \"\\n\");\r\n\r\n    var lines = str\r\n        .trim()\r\n        .replace(\"U+\", \"&#x\")\r\n        .replaceAll(\"\\r\", \"\\n\")\r\n        .split(\"\\n\")\r\n        .map(x => x.trim())\r\n        .filter(x => x !== \"\");\r\n\r\n    let text: Text = [];\r\n    let css = \"\";\r\n\r\n    for (var line of lines) {\r\n        if (line.startsWith(\"{\")) {\r\n            if (!line.endsWith(\"}\")) continue;\r\n            css = line.slice(1, -1);\r\n            continue;\r\n        }\r\n        text.push({line, css});\r\n        css = \"\";\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nfunction parseValues(str: string): string[] {\r\n    let tokens =\r\n        str.includes('\\t') ? str.split('\\t') :\r\n        str.includes('\\n') ? str.split('\\n') :\r\n        str.includes(';') ? str.split(';') :\r\n        str.includes(',') ? str.split(',') :\r\n        str.split(' ');\r\n\r\n    return tokens.map(s => s.trim());\r\n}\r\n\r\nfunction parseAnswers(str: string) {\r\n    var answers = parseValues(str);\r\n    return answers;\r\n}\r\n\r\nfunction parseVariables(str: string) {\r\n    var values = parseValues(str);\r\n\r\n    var vars = values.map(value => {\r\n        var [name, fmt] = value.split(':');\r\n        return {name, fmt: fmt ?? \"\"};\r\n    });\r\n\r\n    return vars;\r\n}\r\n\r\nfunction parseSets(str: string): string[][] {\r\n    let lines =\r\n        str.includes(\"<br>\") ? str.split(\"<br>\") :\r\n        str.includes('\\n') ? str.split('\\n') :\r\n        str.includes('\\r') ? str.split('\\r') :\r\n        str.includes(';') ? str.split(';') :\r\n        [str];\r\n\r\n    lines = lines\r\n        .map(ln => ln.trim())\r\n        .filter(ln => ln != \"\");\r\n\r\n    let sets = lines\r\n        .map(ln => parseValues(ln));\r\n\r\n    return sets;\r\n}\r\n\r\nfunction parseOptions(str: string): Options {\r\n    var options = parseValues(str)\r\n        .map(o => o.includes('=') ? o.split(\"=\") : [o, \"\"]);\r\n\r\n    let hebTest = false;\r\n\r\n    options.forEach(o => {\r\n        switch (o[0]) {\r\n            case \"heb-test\": hebTest = true; break;\r\n            default: console.log(`Unknown option '${o}'`); break;\r\n        }\r\n    });\r\n\r\n    return {\r\n        hebTest\r\n    };\r\n}\r\n\r\nlet valueOf = (str: string) => str.trim();\r\n\r\nlet anki = Anki.getCard();\r\n\r\nlet newWProblemTemplate = () => ({\r\n    problemId: valueOf(anki.problemId),\r\n    text: parseText(valueOf(anki.content)),\r\n    answers: parseAnswers(valueOf(anki.answers)),\r\n    variables: parseVariables(valueOf(anki.variables)),\r\n    sets: parseSets(valueOf(anki.sets)),\r\n    options: parseOptions(valueOf(anki.options))\r\n});\r\n\r\nexport default newWProblemTemplate;\r\nexport type WProblemTemplate = ReturnType<typeof newWProblemTemplate>;","import type Decimal from \"decimal.js\";\r\nimport { toAscii } from \"../core/AsciiMathUtils\";\r\nimport { d2f, d2t, n2d, randFrom, t2d } from \"../core/Helpers\";\r\n\r\nfunction newFormatters() {\r\n    function toMath(value: string) {\r\n        return value.includes(\"/\") ? toAscii(value) : value;\r\n    }\r\n\r\n    function percents(value: string) {\r\n        if (value.includes(\"/\"))\r\n            return toAscii(value);\r\n            \r\n        let d = n2d(parseFloat(value));\r\n\r\n        if (d.isNaN())\r\n            return value;\r\n\r\n        switch (randFrom([\"percents\", \"fraction\", \"dots\"])) {\r\n            case \"percents\": return `${d.mul(100)}%`;\r\n            case \"fraction\": return toAscii(d2t(d));\r\n            case \"dots\": return value;\r\n        }\r\n    }\r\n\r\n    function kilo(value: string, fmt: string) {\r\n        if (value.includes(\"/\"))\r\n            return toAscii(value);\r\n\r\n        let d = n2d(parseFloat(value));\r\n\r\n        if (d.isNaN())\r\n            return value;\r\n\r\n        let units = fmt.split(\",\");\r\n\r\n        if (units.length != 3)\r\n            return value;\r\n\r\n        switch (randFrom([\"norm\", \"kilo\"])) {\r\n            case \"norm\": return `${value} ${units[1]}`;\r\n            case \"kilo\": return `${d.div(1000)} ${units[2]}`;\r\n        }\r\n    }\r\n\r\n    let simpleFractions = [\r\n        \"1/2\", \r\n        \"1/3\", \"2/3\",\r\n        \"1/4\", \"3/4\",\r\n        \"1/5\", \"2/5\", \"3/5\", \"4/5\",\r\n        \"1/6\", \"5/6\",\r\n        \"1/10\", \"3/10\", \"7/10\", \"9/10\",\r\n        \"1/12\", \"5/12\", \"7/12\", \"11/12\"\r\n    ];\r\n\r\n    function isSimpleFraction(mins: Decimal) {\r\n        let fr = d2t(mins.div(60));\r\n        return simpleFractions.includes(fr);\r\n    }\r\n\r\n    let tmHebrew = {\r\n        revaShaa: \"רבע שעה\",\r\n        heziShaa: \"חצי שעה\",\r\n        fractionOfShaa: \"`N/D` שעה\",\r\n        dakotOnly: \"MM דקות\",\r\n\r\n        shaa: \"שעה\",\r\n        shaaVeReva: \"שעה ורבע\",\r\n        shaaVaHezi: \"שעה וחצי\",\r\n        shaaVeFraction: \"שעה ו-`N/D`\",\r\n        shaaVeDakot: \"שעה ו-MM דקות\",\r\n\r\n        shaataim: \"שעתיים\",\r\n        shaataimVeReva: \"שעתיים ורבע\",\r\n        shaataimVaHezi: \"שעתיים וחצי\",\r\n        shaataimVeFraction: \"שעתיים ו- `N/D`\",\r\n        shaataimVeDakot: \"שעתיים ו-MM דקות\",\r\n\r\n        shaotOnly: \"HH שעות\",\r\n        shaotVeReva: \"HH שעות ורבע\",\r\n        shaotVaHezi: \"HH שעות וחצי\",\r\n        shaotVeFraction: \"HH שעות ו- `N/D`\",\r\n        shaotVeDakot: \"HH שעות ו-MM דקות\",\r\n    };\r\n\r\n    let tmTest = [\r\n        15,\r\n        30,\r\n        10, 20, 40, 50,\r\n        23,\r\n\r\n        60,\r\n        75,\r\n        90,\r\n        75, 85, 105,\r\n        83,\r\n\r\n        120,\r\n        135,\r\n        150,\r\n        135, 145, 165,\r\n        143,\r\n\r\n        180, 240,\r\n        255,\r\n        270,\r\n        275, 285, 305,\r\n        263,\r\n    ].map(x => variateTime(d2t(n2d(x).div(60))))\r\n    .flat();\r\n\r\n    function variateTime(value: string) {\r\n        let times: string[] = [];\r\n\r\n        let tm = t2d(value);\r\n        let minsTotal = tm.mul(60);\r\n        let hours = tm.trunc();\r\n        let mins = tm.minus(hours).mul(60);\r\n        let mm = d2t(mins);\r\n        let hh = d2t(hours);\r\n\r\n        (function dakotOnly() {\r\n            if (minsTotal.gte(60)) return;\r\n\r\n            if (mins.eq(15)) {\r\n                times.push(tmHebrew.revaShaa);\r\n                times.push(tmHebrew.dakotOnly.replace(\"MM\", \"15\"));\r\n                times.push(tmHebrew.fractionOfShaa.replace(\"N/D\", \"1/4\"));\r\n                return;\r\n            }\r\n\r\n            if (mins.eq(30)) {\r\n                times.push(tmHebrew.heziShaa);\r\n                times.push(tmHebrew.dakotOnly.replace(\"MM\", \"30\"));\r\n                times.push(tmHebrew.fractionOfShaa.replace(\"N/D\", \"1/2\"));\r\n                return;\r\n            }\r\n\r\n            if (isSimpleFraction(mins)) {\r\n                let fr = d2t(mins.div(60));\r\n                times.push(tmHebrew.fractionOfShaa.replace(\"N/D\", fr));\r\n            }\r\n\r\n            times.push(tmHebrew.dakotOnly.replace(\"MM\", mm));\r\n        })();\r\n\r\n        (function shaaAhatVe() {\r\n            if (minsTotal.lt(60)) return;\r\n            if (minsTotal.gte(120)) return;\r\n\r\n            if (mins.eq(0)) {\r\n                times.push(tmHebrew.shaa);\r\n                times.push(tmHebrew.dakotOnly.replace(\"MM\", \"60\"));\r\n                return;\r\n            }\r\n\r\n            if (mins.eq(15)) {\r\n                times.push(tmHebrew.shaaVeReva);\r\n                times.push(tmHebrew.shaaVeDakot.replace(\"MM\", \"15\"));\r\n                times.push(tmHebrew.shaaVeFraction.replace(\"N/D\", \"1/4\"));\r\n                return;\r\n            }\r\n\r\n            if (mins.eq(30)) {\r\n                times.push(tmHebrew.shaaVaHezi);\r\n                times.push(tmHebrew.shaaVeDakot.replace(\"MM\", \"30\"));\r\n                times.push(tmHebrew.shaaVeFraction.replace(\"N/D\", \"1/2\"));\r\n                return;\r\n            }\r\n\r\n            if (isSimpleFraction(mins)) {\r\n                let fr = d2t(mins.div(60));\r\n                times.push(tmHebrew.shaaVeFraction.replace(\"N/D\", fr));\r\n            }\r\n\r\n            times.push(tmHebrew.shaaVeDakot.replace(\"MM\", mm));\r\n        })();\r\n\r\n        (function shaataimVe() {\r\n            if (minsTotal.lt(120)) return;\r\n            if (minsTotal.gte(180)) return;\r\n\r\n            if (mins.eq(0)) {\r\n                times.push(tmHebrew.shaataim);\r\n                times.push(tmHebrew.dakotOnly.replace(\"MM\", \"120\"));\r\n                return;\r\n            }\r\n\r\n            if (mins.eq(15)) {\r\n                times.push(tmHebrew.shaataimVeReva);\r\n                times.push(tmHebrew.shaataimVeDakot.replace(\"MM\", \"15\"));\r\n                times.push(tmHebrew.shaataimVeFraction.replace(\"N/D\", \"1/4\"));\r\n                return;\r\n            }\r\n\r\n            if (mins.eq(30)) {\r\n                times.push(tmHebrew.shaataimVaHezi);\r\n                times.push(tmHebrew.shaataimVeDakot.replace(\"MM\", \"30\"));\r\n                times.push(tmHebrew.shaataimVeFraction.replace(\"N/D\", \"1/2\"));\r\n                return;\r\n            }\r\n\r\n            if (isSimpleFraction(mins)) {\r\n                let fr = d2t(mins.div(60));\r\n                times.push(tmHebrew.shaataimVeFraction.replace(\"N/D\", fr));\r\n            }\r\n\r\n            times.push(tmHebrew.shaataimVeDakot.replace(\"MM\", mm));\r\n        })();\r\n\r\n        (function shaotVe() {\r\n            if (minsTotal.lt(180)) return;\r\n\r\n            if (mins.eq(0)) {\r\n                times.push(tmHebrew.shaotOnly.replace(\"HH\", hh));\r\n                times.push(tmHebrew.dakotOnly.replace(\"MM\", d2t(hours.mul(60))));\r\n                return;\r\n            }\r\n\r\n            if (mins.eq(15)) {\r\n                times.push(tmHebrew.shaotVeReva.replace(\"HH\", hh));\r\n                times.push(tmHebrew.shaotVeDakot.replace(\"HH\", hh).replace(\"MM\", \"15\"));\r\n                times.push(tmHebrew.shaotVeFraction.replace(\"HH\", hh).replace(\"N/D\", \"1/4\"));\r\n                return;\r\n            }\r\n\r\n            if (mins.eq(30)) {\r\n                times.push(tmHebrew.shaotVaHezi.replace(\"HH\", hh));\r\n                times.push(tmHebrew.shaotVeDakot.replace(\"HH\", hh).replace(\"MM\", \"30\"));\r\n                times.push(tmHebrew.shaotVeFraction.replace(\"HH\", hh).replace(\"N/D\", \"1/2\"));\r\n                return;\r\n            }\r\n\r\n            if (isSimpleFraction(mins)) {\r\n                let fr = d2t(mins.div(60));\r\n                times.push(tmHebrew.shaotVeFraction.replace(\"HH\", hh).replace(\"N/D\", fr));\r\n            }\r\n\r\n            times.push(tmHebrew.shaotVeDakot.replace(\"HH\", hh).replace(\"MM\", mm));\r\n        })();\r\n\r\n        return times;\r\n    }\r\n\r\n    function time(value: string) {\r\n        let times = variateTime(value);\r\n        return randFrom(times);\r\n    }\r\n\r\n    let formatters = new Map([\r\n        [\"p\", percents],\r\n        [\"k\", kilo],\r\n        [\"t\", time],\r\n    ]);\r\n\r\n    return {\r\n        apply: (value: string, fmt: string): string => {\r\n            if (value.includes(\"`\"))\r\n                return value;\r\n\r\n            if (!fmt || fmt === \"\")\r\n                return toMath(value);\r\n\r\n            if (!formatters.has(fmt[0]))\r\n                return toMath(value);\r\n\r\n            return formatters.get(fmt[0])(value, fmt);\r\n        },\r\n        tmHebrew: Object.keys(tmHebrew).map(key => tmHebrew[key]),\r\n        tmTest\r\n    }\r\n}\r\n\r\nexport const formatters = newFormatters();","import { toAscii } from \"../core/AsciiMathUtils\";\r\nimport { rand, shuffle } from \"../core/Helpers\";\r\nimport { formatters } from \"./WProblem.Formatters\";\r\nimport type { WProblemModel } from \"./WProblem.Model\";\r\nimport type { WProblemTemplate } from \"./WProblem.Template\";\r\n\r\ntype Text = WProblemModel[\"text\"];\r\ntype Answers = WProblemModel[\"answers\"];\r\ntype Variable = WProblemTemplate[\"variables\"][0];\r\n\r\n\r\nfunction applyFormat(value: string, fmt: string): string {\r\n    var toMath = v => v.includes(\"/\") ? toAscii(v) : v;\r\n\r\n    if (value.includes(\"`\"))\r\n        return value;\r\n\r\n    if (!fmt || fmt === \"\")\r\n        return toMath(value);\r\n\r\n    return formatters.apply(value, fmt);\r\n}\r\n\r\nfunction substitute(str: string, vars: Variable[], values: string[]) {\r\n    let nodes = vars.map(($var, i) => {\r\n        let value = applyFormat(values[i], $var.fmt);\r\n        return {\r\n            $var,\r\n            uniqueName: `__${i}__`,\r\n            value\r\n        };\r\n    });\r\n\r\n    nodes.sort(\r\n        (a, b) => b.$var.name.length - a.$var.name.length);\r\n\r\n    nodes.forEach(node =>\r\n        str = str.replaceAll(node.$var.name, node.uniqueName));\r\n\r\n    nodes.forEach(node =>\r\n        str = str.replaceAll(node.uniqueName, node.value));\r\n\r\n    // do it again as formatters could introduce more vars\r\n\r\n    nodes.forEach(node =>\r\n        str = str.replaceAll(node.$var.name, node.uniqueName));\r\n\r\n    nodes.forEach(node =>\r\n        str = str.replaceAll(node.uniqueName, node.value));\r\n    \r\n    return str;\r\n}\r\n\r\nfunction makeText(template: WProblemTemplate, set: string[]): Text {\r\n    return template.text.map(el => ({\r\n        line: substitute(el.line, template.variables, set),\r\n        css: el.css\r\n    }));\r\n}\r\n\r\nfunction makeAnswers(template: WProblemTemplate, set: string[]): Answers {\r\n    let answers: Answers = template.answers.map((ans, no) => ({\r\n        name: template.answers[no],\r\n        value: substitute(ans, template.variables, set),\r\n        isRight: no == 0                // by design the first is the right\r\n    }));\r\n\r\n    return shuffle(answers);\r\n}\r\n\r\nlet newWProblemLogic = (template: WProblemTemplate) => ({\r\n    makeModel: (lastSetId = -1): WProblemModel => {\r\n        let setId = rand(0, template.sets.length-1);\r\n\r\n        while (setId === lastSetId && template.sets.length > 1)\r\n            setId = rand(0, template.sets.length-1);\r\n\r\n        let set = template.sets[setId];\r\n\r\n        return {\r\n            problemId: template.problemId,\r\n            setId,\r\n            text: makeText(template, set),\r\n            answers: makeAnswers(template, set),\r\n            options: template.options\r\n        };\r\n    }\r\n});\r\n\r\nexport default newWProblemLogic;\r\nexport type WProblemLogic = ReturnType<typeof newWProblemLogic>;\r\n","import { assert } from \"./Asserts.svelte\";\r\nimport { info } from \"./Logger.svelte\";\r\n\r\ntype OneOrMany<T> = T | T[];\r\ntype AsyncOrNot<T> = T | Promise<T>;\r\n\r\ntype Nope = AsyncOrNot<void>;\r\ntype NameOrNope<Name> = AsyncOrNot<keyof(Name) | undefined | void>;\r\n\r\ntype Config<State, Event, UiEvent> = {\r\n    [StateName in keyof State]?: {\r\n        map?: {\r\n            [UiName in keyof UiEvent]?: keyof(Event) | \r\n                OneOrMany<(arg?: UiEvent[UiName]) => NameOrNope<Event>>\r\n        },\r\n        transitions?: {\r\n            [EventName in keyof Event]?: keyof(State) |\r\n                OneOrMany<(arg?: Event[EventName]) => NameOrNope<State>>\r\n        },\r\n        onEnter?: OneOrMany<(arg?: State[StateName]) => Nope>,\r\n        onLeave?: OneOrMany<() => Nope>\r\n    }\r\n}\r\n\r\ninterface IFsm<State, Event, UiEvent> {\r\n    enter<Name extends keyof(State)>(state: Name, arg?: State[Name]): Nope;\r\n    fire<Name extends keyof(Event)>(name: Name, arg?: Event[Name]): Nope;\r\n    fire<Name extends keyof(UiEvent)>(name: Name, arg?: UiEvent[Name]): Nope;\r\n}\r\n\r\nexport function newFsm<State, Event, UiEvent>(config: Config<State, Event, UiEvent>)\r\n    : IFsm<State, Event, UiEvent> {\r\n\r\n    return <any> new Fsm(<any> config);\r\n}\r\n\r\n\r\ntype Str = string | undefined | void;\r\ntype StrOrNope = AsyncOrNot<Str>;\r\ntype MappedHandler = (arg: any) => StrOrNope;\r\ntype TransitionHandler = (arg: any) => StrOrNope;\r\ntype EnterHandler = (arg: any) => Nope;\r\ntype LeaveHandler = () => Nope;\r\n\r\ntype AConfig = {\r\n    [state: string]: {\r\n        map?: {\r\n            [name: string]: string | OneOrMany<MappedHandler>;\r\n        },\r\n        transitions?: {\r\n            [name: string]: string | OneOrMany<TransitionHandler>;\r\n        },\r\n        onEnter?: OneOrMany<EnterHandler>,\r\n        onLeave?: OneOrMany<LeaveHandler>\r\n    }\r\n}\r\n\r\ninterface AFsm {\r\n    enter(state: string, arg?: any): Nope;\r\n    fire(name: string, arg?: any): Nope;\r\n}\r\n\r\ninterface Self {\r\n    config: AConfig;\r\n    state: string;\r\n}\r\n\r\nclass Fsm implements AFsm {\r\n\r\n    private readonly _my: Self;\r\n\r\n    constructor(config: AConfig) {\r\n        this._my = {\r\n            config,\r\n            state: undefined\r\n        }\r\n    }\r\n\r\n    async enter(state: string, arg?: any) {\r\n        let {_my} = this;\r\n\r\n        if (_my.state === state) return;\r\n\r\n        if (_my.state)\r\n            await _impl.callLeaveHandlers(_my, _my.state);\r\n\r\n        _my.state = state;\r\n        console.log(`current state is '${state}'`)\r\n\r\n        await _impl.callEnterHandlers(_my, state, arg);\r\n    }\r\n\r\n    async fire(name: string, arg?: any) {\r\n        let {_my} = this;\r\n\r\n        let { \r\n            map = [], \r\n            transitions = [] \r\n        } = _my.config[_my.state];\r\n\r\n        let mapped = map[name];\r\n\r\n        if (mapped && typeof mapped !== 'string') {\r\n            mapped = await _impl.callMappedHandlers(_my.state, mapped, arg);\r\n\r\n            if (!mapped) return;\r\n        }\r\n\r\n        let transition = transitions[mapped ?? name];\r\n\r\n        if (!transition) {\r\n            info(`Don't know how to fire '${name}' in '${_my.state}'`);\r\n            return;\r\n        }\r\n\r\n        if (typeof transition === 'string') {\r\n            await this.enter(transition, arg);\r\n            return;\r\n        }\r\n\r\n        let toState = await _impl.callTransitionHandlers(_my.state, name, transition, arg);\r\n\r\n        if (toState) {\r\n            await this.enter(toState, arg);\r\n        }\r\n    }\r\n}\r\n\r\nnamespace _impl {\r\n    function one2many<T>(x: T | T[] | undefined): T[] {\r\n        return x === undefined ? [] :\r\n            Array.isArray(x) ? x : [x];\r\n    }\r\n\r\n    function isPromise(p: any): p is Promise<any> {\r\n        return Boolean(p && typeof p.then === 'function');\r\n    }\r\n\r\n    function invoke(func: () => any) {\r\n        let result = func();\r\n\r\n        return isPromise(result) ?\r\n            result : Promise.resolve(result);\r\n    }\r\n\r\n    export async function callMappedHandlers( state: string, \r\n                                        handlers: OneOrMany<MappedHandler>,\r\n                                        arg: any): Promise<Str> {\r\n        let mapped: string;\r\n\r\n        handlers = one2many(handlers);\r\n\r\n        for (let handler of handlers) {\r\n            let ret = await invoke(() => handler(arg));\r\n            if (typeof ret === 'string')\r\n                mapped = ret;\r\n        }\r\n\r\n        return mapped;\r\n    }\r\n\r\n    export async function callTransitionHandlers( state: string, \r\n                                            name: string,\r\n                                            handlers: OneOrMany<TransitionHandler>,\r\n                                            arg: any): Promise<Str> {\r\n        let toState: string;\r\n\r\n        handlers = one2many(handlers);\r\n\r\n        for (let handler of handlers) {\r\n            let ret = await invoke(() => handler(arg));\r\n            if (typeof ret === 'string')\r\n                toState = ret;\r\n        }\r\n\r\n        return toState;\r\n    }\r\n\r\n    export async function callEnterHandlers(_my: Self, state: string, arg: any) {\r\n        let handlers = one2many(_my.config[state].onEnter);\r\n\r\n        for (let handler of handlers) {\r\n            await invoke(() => handler(arg));\r\n        }\r\n    }\r\n\r\n    export async function callLeaveHandlers(_my: Self, state: string) {\r\n        let handlers = one2many(_my.config[state].onLeave);\r\n\r\n        for (let handler of handlers) {\r\n            await invoke(() => handler());\r\n        }\r\n    }\r\n}\r\n","<script lang=\"ts\">\r\n    import { Confetti } from \"svelte-confetti\"\r\n\r\n    import Ans from \"./WProblem.Ans.svelte\"\r\n    import Grid from \"../core/Grid.svelte\";\r\n    import Text from \"./WProblem.Text.svelte\"\r\n\r\n    import newWProblemStore from \"./WProblem.Store\";\r\n    import newWProblemTemplate from \"./WProblem.Template\";\r\n    import newWProblemLogic from \"./WProblem.Logic\";\r\n    import fsm from \"./WProblem.Fsm\"\r\n    import { onMount } from \"svelte\";\r\n    import { applyAsciiMath } from \"../core/AsciiMathUtils\";\r\n    import { versions } from \"../core/Version.Store\";\r\n    import Congrats from \"../core/Congrats.svelte\";\r\n    import { formatters } from \"./WProblem.Formatters\";\r\n\r\n    let template = newWProblemTemplate();\r\n    console.log(\"template\", template);\r\n\r\n    let logic = newWProblemLogic(template);\r\n    let model = logic.makeModel();\r\n    console.log(\"model\", model);\r\n\r\n    let store = newWProblemStore(model);\r\n//    console.log(\"store\", store);\r\n\r\n    let solved = false;\r\n    let solvedRight = false;\r\n    let congrats: Congrats;\r\n\r\n    versions.add(template.problemId);\r\n\r\n    onMount(() => {\r\n        applyAsciiMath(1000);\r\n    });\r\n\r\n    function answerIsClicked(no: number) {\r\n        if (solved) {\r\n            makeNewProblem();\r\n            return;\r\n        }\r\n\r\n        store.answers.forEach((ans, i) => \r\n            ans.isClicked.set(model.answers[i].isRight));\r\n\r\n        store.answers[no].isClicked.set(true);\r\n\r\n        solved = true;\r\n        solvedRight = model.answers[no].isRight;\r\n\r\n        if (solvedRight) congrats.play();\r\n    }\r\n\r\n    function makeNewProblem() {\r\n        model = logic.makeModel(model.setId);\r\n\r\n        store.text.set(model.text);\r\n        store.answers.forEach((ans, i) => {\r\n            ans.value.set(model.answers[i].value);\r\n            ans.isRight.set(model.answers[i].isRight);\r\n            ans.isClicked.set(false);\r\n        });\r\n\r\n        solved = false;\r\n        solvedRight = false;\r\n\r\n        applyAsciiMath(500);\r\n    }\r\n\r\n    function textIsClicked() {\r\n        if (solved) {\r\n            makeNewProblem();\r\n        }\r\n    }\r\n\r\n    let layout = {\r\n        areas: `\r\n            \"txt  txt  txt \"\r\n            \"txt  txt  txt \"\r\n            \"txt  txt  txt \"\r\n            \"txt  txt  txt \"\r\n            \"a0    .    a1 \"\r\n            \"a2    .    a3 \"\r\n            \".     .    .  \"\r\n        `,\r\n        cols: `2fr 1fr 2fr`,\r\n        rows: `2fr 2fr 2fr 2fr 2fr 2fr 10px`\r\n    };\r\n\r\n</script>\r\n\r\n<Grid on:click={() => textIsClicked()}\r\n    {layout}\r\n>\r\n    <Congrats bind:this={congrats} />\r\n\r\n    {#key model}\r\n        <Text on:click={() => textIsClicked()}\r\n            ga=\"txt\" text={store.text} \r\n        />\r\n    {/key}\r\n\r\n    {#each store.answers as ans, no ({model}) }\r\n        <Ans store = {ans}\r\n            ga={`a${no}`} \r\n            on:click={() => answerIsClicked(no)}\r\n        />\r\n    {/each}\r\n</Grid>\r\n\r\n{#if model.options.hebTest }\r\n    {#each formatters.tmHebrew as heb }\r\n        <p class=\"text-xs\">\r\n            <bdi dir=\"rtl\">\r\n                {heb}\r\n            </bdi>\r\n        </p>\r\n    {/each}\r\n    -----------------------\r\n    {#each formatters.tmTest as tst }\r\n        <p class=\"text-xs\">\r\n            <bdi dir=\"rtl\">\r\n                {tst}\r\n            </bdi>\r\n        </p>\r\n    {/each}\r\n{/if}\r\n\r\n\r\n","<script lang=\"ts\">\n\n    import {onMount} from 'svelte';\n\n    import Oops from \"./core/Oops.svelte\"\n    import Logger from \"./core/Logger.svelte\"\n    import Grid from \"./core/Grid.svelte\"\n    import Version from \"./core/Version.svelte\"\n    import Powered from './core/Powered.svelte';\n    import {error} from \"./core/Logger.svelte\"\n    import {Anki} from './core/Anki'\n    import {initMath} from \"./core/MathJax.svelte\";\n    import {Mp3} from './core/Mp3.svelte';\n\n    import PlusOver from \"./plus-over/Main.svelte\"\n    import GcdLcm from \"./gcd-lcm/Main.svelte\"\n    import Zero from \"./zero/Main.svelte\"\n    import Equ from \"./equation/Main.svelte\"\n    import FrPair from \"./fr-pairs/Main.svelte\"\n    import WProblem from \"./w-problem/WProblem.View.svelte\"\n\n    onMount(() => {\n        Anki.hideLoader();\n        initMath();\n    })\n\n    interface Config {\n        game: string,\n        rounds: number,\n        showHint: boolean,\n        soundOn: boolean\n    }\n\n    function loadGame() {\n        try\n        {\n            let config = Anki.getConfig<Config>();\n            Mp3.buildMp3Library(\"assets\", config.soundOn);\n\n            switch (config.game) {\n                case \"plus-over\":\n                case \"mul-div\":\n                    return PlusOver;\n                case \"gcd-lcm\":\n                    return GcdLcm;\n                case \"zero\":\n                    return Zero;\n                case \"equ-abc\":\n                    return Equ;\n                case \"fr-pairs\":\n                    return FrPair;\n                case \"w-problem\":\n                    return WProblem;\n                default:\n                    error(`Unknown game type: '${config.game}'`);\n                    return Oops;\n            }\n        }\n        catch (err)\n        {\n            error(\"Failed to loadGame\", err);\n        }\n    }\n\n    let layout = {\n        areas: `\n            \"game  game  game  game\"\n            \"pwrd  pwrd  .     ver\"\n        `,\n        cols: `1fr 1fr 1ft 1fr`,\n        rows: `98fr 2fr`\n    };\n\n\n</script>\n\n<Grid {layout}>\n    <div \n        class=\"w-full h-full\"\n        style=\"grid-area:game\"\n    >\n        <svelte:component this={loadGame()}/>\n    </div>\n    <Powered ga=\"pwrd\" text=\"Powered by gebemot.online\"/>\n    <Version ga=\"ver\" v=\"0.25.50\"/>\n</Grid>\n\n<Logger/>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["run","self","log","this","parseDecimal","n2d","JSON5","on","fire","newTimedCmd","_game","_config","_next","_totalRounds","makeAnswers","CGame","create_if_block","anki","PlusOver","GcdLcm","Zero","Equ","FrPair","WProblem"],"mappings":";;;;;IAAA,SAAS,IAAI,GAAG,GAAG;IAEnB,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;IAC1B;IACA,IAAI,KAAK,MAAM,CAAC,IAAI,GAAG;IACvB,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,OAAO,GAAG,CAAC;IACf,CAAC;IAID,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzD,IAAI,OAAO,CAAC,aAAa,GAAG;IAC5B,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,KAAK,CAAC;IACN,CAAC;IACD,SAASA,KAAG,CAAC,EAAE,EAAE;IACjB,IAAI,OAAO,EAAE,EAAE,CAAC;IAChB,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,SAAS,OAAO,CAAC,GAAG,EAAE;IACtB,IAAI,GAAG,CAAC,OAAO,CAACA,KAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;IACvC,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,KAAK,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC;IAClG,CAAC;IAYD,SAAS,QAAQ,CAAC,GAAG,EAAE;IACvB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,EAAE;IAChE,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,0CAA0C,CAAC,CAAC,CAAC;IAC9E,KAAK;IACL,CAAC;IACD,SAAS,SAAS,CAAC,KAAK,EAAE,GAAG,SAAS,EAAE;IACxC,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;IACvB,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC;IAChD,IAAI,OAAO,KAAK,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;IACjE,CAAC;IAMD,SAAS,mBAAmB,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE;IACzD,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD,SAAS,WAAW,CAAC,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;IACnD,IAAI,IAAI,UAAU,EAAE;IACpB,QAAQ,MAAM,QAAQ,GAAG,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACxE,QAAQ,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;IACD,SAAS,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE;IACxD,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE;IAC9B,UAAU,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7D,UAAU,OAAO,CAAC,GAAG,CAAC;IACtB,CAAC;IACD,SAAS,gBAAgB,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE;IAC1D,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;IAC7B,QAAQ,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9C,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;IACzC,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IACtC,YAAY,MAAM,MAAM,GAAG,EAAE,CAAC;IAC9B,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACpE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7C,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,OAAO,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;IACpC,KAAK;IACL,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC;IACzB,CAAC;IACD,SAAS,gBAAgB,CAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,mBAAmB,EAAE;IAClG,IAAI,IAAI,YAAY,EAAE;IACtB,QAAQ,MAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,EAAE,GAAG,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;IAClG,QAAQ,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IAC3C,KAAK;IACL,CAAC;IAKD,SAAS,wBAAwB,CAAC,OAAO,EAAE;IAC3C,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE;IACjC,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;IACzB,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;IAC/C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACzC,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;IACL,IAAI,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IAgCD,SAAS,aAAa,CAAC,KAAK,EAAE;IAC9B,IAAI,OAAO,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;IACtC,CAAC;IAMD,SAAS,gBAAgB,CAAC,aAAa,EAAE;IACzC,IAAI,OAAO,aAAa,IAAI,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;IAC9F,CAAC;IAuJD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;IAC9B,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAoDD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACtC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;IAC9C,CAAC;IASD,SAAS,MAAM,CAAC,IAAI,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IACD,SAAS,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACnD,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC;IACzB,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;IACD,SAAS,OAAO,CAAC,IAAI,EAAE;IACvB,IAAI,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAgBD,SAAS,WAAW,CAAC,IAAI,EAAE;IAC3B,IAAI,OAAO,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IACD,SAAS,IAAI,CAAC,IAAI,EAAE;IACpB,IAAI,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnD,IAAI,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IAeD,SAASC,MAAI,CAAC,EAAE,EAAE;IAClB,IAAI,OAAO,UAAU,KAAK,EAAE;IAC5B;IACA,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI;IACjC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACjC,KAAK,CAAC;IACN,CAAC;IAQD,SAAS,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IACtC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACxC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,KAAK;IACnD,QAAQ,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;IAgED,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC3B,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAuID,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;IAChD,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;IACxB,QAAQ,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACvC,KAAK;IACL,SAAS;IACT,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IACzE,KAAK;IACL,CAAC;IA6ED,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE;IAC7C,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IACD,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE,UAAU,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;IAClF,IAAI,MAAM,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAClD,IAAI,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;IACzD,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AA0OD;IACA,IAAI,iBAAiB,CAAC;IACtB,SAAS,qBAAqB,CAAC,SAAS,EAAE;IAC1C,IAAI,iBAAiB,GAAG,SAAS,CAAC;IAClC,CAAC;IACD,SAAS,qBAAqB,GAAG;IACjC,IAAI,IAAI,CAAC,iBAAiB;IAC1B,QAAQ,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;IAC5E,IAAI,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAWD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,OAAO,CAAC,EAAE,EAAE;IACrB,IAAI,qBAAqB,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IASD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,SAAS,CAAC,EAAE,EAAE;IACvB,IAAI,qBAAqB,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IA6BD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE;IAClC,IAAI,qBAAqB,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACzD,IAAI,OAAO,OAAO,CAAC;IACnB,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,UAAU,CAAC,GAAG,EAAE;IACzB,IAAI,OAAO,qBAAqB,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvD,CAAC;IAoBD;IACA;IACA;IACA,SAAS,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE;IAClC,IAAI,MAAM,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzD,IAAI,IAAI,SAAS,EAAE;IACnB;IACA,QAAQ,SAAS,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9D,KAAK;IACL,CAAC;AACD;IACA,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAE5B,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,gBAAgB,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3C,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,SAAS,eAAe,GAAG;IAC3B,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC3B,QAAQ,gBAAgB,GAAG,IAAI,CAAC;IAChC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;IACD,SAAS,IAAI,GAAG;IAChB,IAAI,eAAe,EAAE,CAAC;IACtB,IAAI,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IACD,SAAS,mBAAmB,CAAC,EAAE,EAAE;IACjC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAID;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,SAAS,KAAK,GAAG;IACjB,IAAI,MAAM,eAAe,GAAG,iBAAiB,CAAC;IAC9C,IAAI,GAAG;IACP;IACA;IACA,QAAQ,OAAO,QAAQ,GAAG,gBAAgB,CAAC,MAAM,EAAE;IACnD,YAAY,MAAM,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACzD,YAAY,QAAQ,EAAE,CAAC;IACvB,YAAY,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC7C,YAAY,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,QAAQ,QAAQ,GAAG,CAAC,CAAC;IACrB,QAAQ,OAAO,iBAAiB,CAAC,MAAM;IACvC,YAAY,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC;IACtC;IACA;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC/C;IACA,gBAAgB,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS;IACT,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,KAAK,QAAQ,gBAAgB,CAAC,MAAM,EAAE;IACtC,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;IACnC,QAAQ,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI,cAAc,CAAC,KAAK,EAAE,CAAC;IAC3B,IAAI,qBAAqB,CAAC,eAAe,CAAC,CAAC;IAC3C,CAAC;IACD,SAAS,MAAM,CAAC,EAAE,EAAE;IACpB,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;IACpB,QAAQ,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAClC,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IAC/B,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpD,QAAQ,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACrD,KAAK;IACL,CAAC;IAeD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,IAAI,MAAM,CAAC;IACX,SAAS,YAAY,GAAG;IACxB,IAAI,MAAM,GAAG;IACb,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,CAAC,EAAE,EAAE;IACb,QAAQ,CAAC,EAAE,MAAM;IACjB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;IACnB,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,KAAK;IACL,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC;IACD,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxD,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;IAC/B,YAAY,OAAO;IACnB,QAAQ,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5B,QAAQ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;IAC5B,YAAY,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,SAAS,IAAI,QAAQ,EAAE;IACvB,QAAQ,QAAQ,EAAE,CAAC;IACnB,KAAK;IACL,CAAC;AAoTD;IACA,MAAM,OAAO,IAAI,OAAO,MAAM,KAAK,WAAW;IAC9C,MAAM,MAAM;IACZ,MAAM,OAAO,UAAU,KAAK,WAAW;IACvC,UAAU,UAAU;IACpB,UAAU,MAAM,CAAC,CAAC;IAMlB,SAAS,uBAAuB,CAAC,KAAK,EAAE,MAAM,EAAE;IAChD,IAAI,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM;IACtC,QAAQ,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,KAAK,CAAC,CAAC;IACP,CAAC;IASD,SAAS,iBAAiB,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE;IACxI,IAAI,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;IAC9B,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IACxB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,MAAM,WAAW,GAAG,EAAE,CAAC;IAC3B,IAAI,OAAO,CAAC,EAAE;IACd,QAAQ,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3C,IAAI,MAAM,UAAU,GAAG,EAAE,CAAC;IAC1B,IAAI,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,IAAI,MAAM,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7B,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,OAAO,CAAC,EAAE,EAAE;IAChB,QAAQ,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACpD,QAAQ,MAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACvC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,QAAQ,IAAI,CAAC,KAAK,EAAE;IACpB,YAAY,KAAK,GAAG,iBAAiB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IACtD,YAAY,KAAK,CAAC,CAAC,EAAE,CAAC;IACtB,SAAS;IACT,aAAa,IAAI,OAAO,EAAE;IAC1B,YAAY,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IACtC,SAAS;IACT,QAAQ,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IACnD,QAAQ,IAAI,GAAG,IAAI,WAAW;IAC9B,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,KAAK;IACL,IAAI,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;IAChC,IAAI,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/B,IAAI,SAAS,MAAM,CAAC,KAAK,EAAE;IAC3B,QAAQ,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChC,QAAQ,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5B,QAAQ,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACrC,QAAQ,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;IAC3B,QAAQ,CAAC,EAAE,CAAC;IACZ,KAAK;IACL,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;IACnB,QAAQ,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,QAAQ,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,QAAQ,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC;IACtC,QAAQ,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC;IACtC,QAAQ,IAAI,SAAS,KAAK,SAAS,EAAE;IACrC;IACA,YAAY,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;IACnC,YAAY,CAAC,EAAE,CAAC;IAChB,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT,aAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;IAC3C;IACA,YAAY,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACvC,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT,aAAa,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;IACjE,YAAY,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9B,SAAS;IACT,aAAa,IAAI,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;IACxC,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT,aAAa,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;IAC5D,YAAY,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAClC,YAAY,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9B,SAAS;IACT,aAAa;IACb,YAAY,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT,KAAK;IACL,IAAI,OAAO,CAAC,EAAE,EAAE;IAChB,QAAQ,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACxC,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC;IAC1C,YAAY,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACvC,KAAK;IACL,IAAI,OAAO,CAAC;IACZ,QAAQ,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClC,IAAI,OAAO,UAAU,CAAC;IACtB,CAAC;IACD,SAAS,kBAAkB,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE;IAC7D,IAAI,MAAM,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1C,QAAQ,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IAC3B,YAAY,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAC1E,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtB,KAAK;IACL,CAAC;IAgQD,SAAS,gBAAgB,CAAC,KAAK,EAAE;IACjC,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC;IACvB,CAAC;IAID,SAAS,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE;IACnE,IAAI,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IACpD,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,CAAC,aAAa,EAAE;IACxB;IACA,QAAQ,mBAAmB,CAAC,MAAM;IAClC,YAAY,MAAM,cAAc,GAAG,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAACD,KAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtF;IACA;IACA;IACA,YAAY,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,EAAE;IACzC,gBAAgB,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;IAChE,aAAa;IACb,iBAAiB;IACjB;IACA;IACA,gBAAgB,OAAO,CAAC,cAAc,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvC,SAAS,CAAC,CAAC;IACX,KAAK;IACL,IAAI,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE;IACjD,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC5B,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IAC/B,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAChD;IACA;IACA,QAAQ,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;IACpB,KAAK;IACL,CAAC;IACD,SAAS,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE;IAClC,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IACtC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,QAAQ,eAAe,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;IACL,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,SAAS,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5G,IAAI,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAC/C,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACrC,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG;IAC9B,QAAQ,QAAQ,EAAE,IAAI;IACtB,QAAQ,GAAG,EAAE,EAAE;IACf;IACA,QAAQ,KAAK;IACb,QAAQ,MAAM,EAAE,IAAI;IACpB,QAAQ,SAAS;IACjB,QAAQ,KAAK,EAAE,YAAY,EAAE;IAC7B;IACA,QAAQ,QAAQ,EAAE,EAAE;IACpB,QAAQ,UAAU,EAAE,EAAE;IACtB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,YAAY,EAAE,EAAE;IACxB,QAAQ,OAAO,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,KAAK,gBAAgB,GAAG,gBAAgB,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;IAClG;IACA,QAAQ,SAAS,EAAE,YAAY,EAAE;IACjC,QAAQ,KAAK;IACb,QAAQ,UAAU,EAAE,KAAK;IACzB,QAAQ,IAAI,EAAE,OAAO,CAAC,MAAM,IAAI,gBAAgB,CAAC,EAAE,CAAC,IAAI;IACxD,KAAK,CAAC;IACN,IAAI,aAAa,IAAI,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;IACtB,IAAI,EAAE,CAAC,GAAG,GAAG,QAAQ;IACrB,UAAU,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,KAAK;IACxE,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACtD,YAAY,IAAI,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;IACnE,gBAAgB,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS,CAAC;IACV,UAAU,EAAE,CAAC;IACb,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IAChB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAC9B;IACA,IAAI,EAAE,CAAC,QAAQ,GAAG,eAAe,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACpE,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;IACxB,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE;IAE7B,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnD;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAChD,YAAY,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAClC,SAAS;IACT,aAAa;IACb;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC3C,SAAS;IACT,QAAQ,IAAI,OAAO,CAAC,KAAK;IACzB,YAAY,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAQ,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;IAE1F,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;IAiDD;IACA;IACA;IACA,MAAM,eAAe,CAAC;IACtB,IAAI,QAAQ,GAAG;IACf,QAAQ,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL,IAAI,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE;IACxB,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;IACpC,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,MAAM,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACtF,QAAQ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,QAAQ,OAAO,MAAM;IACrB,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC;IAC5B,gBAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,IAAI,CAAC,OAAO,EAAE;IAClB,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC9C,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;IACvC,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;IACpC,IAAI,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChH,CAAC;IACD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE;IAClC,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzB,CAAC;IAKD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IAC1C,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACjC,CAAC;IAKD,SAAS,UAAU,CAAC,IAAI,EAAE;IAC1B,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9C,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAgBD,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE;IAC9F,IAAI,MAAM,SAAS,GAAG,OAAO,KAAK,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IACvG,IAAI,IAAI,mBAAmB;IAC3B,QAAQ,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACzC,IAAI,IAAI,oBAAoB;IAC5B,QAAQ,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC1C,IAAI,YAAY,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IACnF,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAI,OAAO,MAAM;IACjB,QAAQ,YAAY,CAAC,8BAA8B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAC1F,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACjC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,YAAY,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IACtE;IACA,QAAQ,YAAY,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;IASD,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE;IAClC,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;IAC/B,QAAQ,OAAO;IACf,IAAI,YAAY,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3D,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,SAAS,sBAAsB,CAAC,GAAG,EAAE;IACrC,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,EAAE,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,IAAI,GAAG,CAAC,EAAE;IACzF,QAAQ,IAAI,GAAG,GAAG,gDAAgD,CAAC;IACnE,QAAQ,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,EAAE;IAC3E,YAAY,GAAG,IAAI,+DAA+D,CAAC;IACnF,SAAS;IACT,QAAQ,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1C,IAAI,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAC9C,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IACtC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,+BAA+B,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,KAAK;IACL,CAAC;IAYD,SAAS,8BAA8B,CAAC,SAAS,EAAE,KAAK,EAAE;IAC1D,IAAI,MAAM,aAAa,GAAG,qEAAqE,CAAC;IAChG,IAAI,IAAI;IACR,QAAQ,MAAM,QAAQ,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;IAC9C,QAAQ,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;IACnF,YAAY,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;IAC3C,SAAS;IACT,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK;IACL,IAAI,OAAO,GAAG,EAAE;IAChB,QAAQ,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;IAChC,QAAQ,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAE;IAC3F,YAAY,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;IAC3C,SAAS;IACT,aAAa;IACb,YAAY,MAAM,GAAG,CAAC;IACtB,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA,MAAM,kBAAkB,SAAS,eAAe,CAAC;IACjD,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChE,YAAY,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAC7D,SAAS;IACT,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;IAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAC5D,SAAS,CAAC;IACV,KAAK;IACL,IAAI,cAAc,GAAG,GAAG;IACxB,IAAI,aAAa,GAAG,GAAG;IACvB;;;;;;;;;;;;;;;;;;;OCpsEA,UAAa,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BC4CL,GAAI,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;OAAR,UAAa,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;kEAAT,GAAI,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;gCADL,GAAK,CAAA,CAAA,CAAA,CAAA;;;;oCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;+BAAC,GAAK,CAAA,CAAA,CAAA,CAAA;;;;mCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;QApCE,MAAM,GAAA,EAAA,CAAA;;QACN,QAAQ,GAAA,MAAA;;;;IAEH,SAAAE,KAAG,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW,EAAA;SAC5C,IAAI,GAAA,CAAA,EAAM,KAAK,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,CAAA;SACtB,GAAG,EAAE,IAAI,IAAA,CAAA,EAAA,EAAS,GAAG,CAAA,CAAA,CAAA,CAAA;KAEzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;KAEhB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;KAChB,QAAQ,EAAA,CAAA;;;aAII,IAAI,CAAC,GAAW,EAAE,GAAW,EAAA;IACzC,CAAAA,KAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAA,CAAA;;;aAGd,KAAK,CAAC,GAAW,EAAE,GAAW,EAAA;IAC1C,CAAAA,KAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAA,CAAA;;;;;;IAS1B,CAAA,IAAA,KAAK,GAAa,MAAM,CAAA;;KAE5B,QAAQ,GAAA,MAAA;IACJ,EAAA,YAAA,CAAA,CAAA,EAAA,KAAK,GAAG,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yECHF,GAAO,CAAA,CAAA,CAAA,GAAA,iBAAA,CAAA,CAAA;0CAGR,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;IACH,GAAA,SAAA,CAAA,GAAA,EAAA,SAAA,aAAA,GAAM,IAAC,KAAK,CAAA,CAAA;IACb,GAAA,SAAA,CAAA,GAAA,EAAA,QAAA,aAAA,GAAM,IAAC,IAAI,CAAA,CAAA;IACX,GAAA,SAAA,CAAA,GAAA,EAAA,QAAA,aAAA,GAAM,IAAC,IAAI,CAAA,CAAA;;;;;;;OAP5B,UAUM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gHATc,GAAO,CAAA,CAAA,CAAA,GAAA,iBAAA,CAAA,EAAA;;;;;2CAGR,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;IACH,IAAA,SAAA,CAAA,GAAA,EAAA,SAAA,aAAA,GAAM,IAAC,KAAK,CAAA,CAAA;;;;IACb,IAAA,SAAA,CAAA,GAAA,EAAA,QAAA,aAAA,GAAM,IAAC,IAAI,CAAA,CAAA;;;;IACX,IAAA,SAAA,CAAA,GAAA,EAAA,QAAA,aAAA,GAAM,IAAC,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aArCR,UAAU,CAAC,EAAU,EAAE,QAAiB,EAAA;SAChD,EAAE,GAAQ,UAAU,CAAC,cAAc,CAAA,CAAA;UAClC,EAAE,EAAA,OAAS,QAAQ,IAAI,gBAAgB,CAAA;IACxC,CAAA,IAAA,OAAO,GAAG,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAA,CAAA;;;YAEtB,OAAO,CAAA;;;;;;WAcP,MAAc,EAAA,GAAA,OAAA,CAAA;IACd,CAAA,IAAA,EAAA,EAAE,GAAW,OAAO,EAAA,GAAA,OAAA,CAAA;WACpB,OAAO,GAAW,UAAU,CAAC,EAAE,CAAA,EAAA,GAAA,OAAA,CAAA;;IAE1C,CAAA,UAAU,CAAC,cAAc,EAAW,UAAA,EAAU,EAAE,QAAiB,EAAA;IACxD,EAAA,IAAA,CAAA,MAAM,CAAC,QAAQ,EAAU,OAAA,QAAQ,IAAI,gBAAgB,CAAA;IACnD,EAAA,OAAA,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAK,IAAA,QAAQ,IAAI,gBAAgB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC1BlE,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B;IACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;IAChC,IAAI,OAAO;IACX,QAAQ,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,SAAS;IACnD,KAAK,CAAC;IACN,CAAC;IACD;IACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE;IACvC,IAAI,IAAI,IAAI,CAAC;IACb,IAAI,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;IAClC,IAAI,SAAS,GAAG,CAAC,SAAS,EAAE;IAC5B,QAAQ,IAAI,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;IAC9C,YAAY,KAAK,GAAG,SAAS,CAAC;IAC9B,YAAY,IAAI,IAAI,EAAE;IACtB,gBAAgB,MAAM,SAAS,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC;IAC3D,gBAAgB,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;IACtD,oBAAoB,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;IACpC,oBAAoB,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC7D,iBAAiB;IACjB,gBAAgB,IAAI,SAAS,EAAE;IAC/B,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACzE,wBAAwB,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxE,qBAAqB;IACrB,oBAAoB,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IAChD,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,SAAS,MAAM,CAAC,EAAE,EAAE;IACxB,QAAQ,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,KAAK;IACL,IAAI,SAAS,SAAS,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,EAAE;IAC/C,QAAQ,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAC7C,QAAQ,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACpC,QAAQ,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,EAAE;IACpC,YAAY,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;IACtC,SAAS;IACT,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;IACnB,QAAQ,OAAO,MAAM;IACrB,YAAY,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3C,YAAY,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,EAAE;IACxC,gBAAgB,IAAI,EAAE,CAAC;IACvB,gBAAgB,IAAI,GAAG,IAAI,CAAC;IAC5B,aAAa;IACb,SAAS,CAAC;IACV,KAAK;IACL,IAAI,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;IACtC;;ICxDA,SAAS,cAAc,GAAA;QACnB,IAAI,GAAG,GAAa,EAAE,CAAC;QACvB,IAAI,MAAM,GAAW,CAAC,CAAC;IACvB,IAAA,IAAI,IAAyB,CAAC;QAE9B,IAAI,QAAQ,GAAG,QAAQ,CAAS,EAAE,EAAE,CAAC,GAAG,KAAI;YACxC,IAAI,GAAG,GAAG,CAAC;IACf,KAAC,CAAC,CAAC;IAEH,IAAA,SAAS,MAAM,GAAA;YACX,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;SACxD;QAEJ,OAAO;IACA,QAAA,OAAO,EAAE,QAAQ;YACvB,GAAG,EAAE,CAAC,CAAS,EAAE,QAAQ,GAAG,KAAK,KAAI;gBAC3B,OAAO,CAAC,MAAK;IACT,gBAAA,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEZ,gBAAA,IAAI,QAAQ;IACR,oBAAA,MAAM,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;IAE5B,gBAAA,MAAM,EAAE,CAAC;IAET,gBAAA,OAAO,MAAK;IACR,oBAAA,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,oBAAA,MAAM,EAAE,CAAC;IACb,iBAAC,CAAA;IACL,aAAC,CAAC,CAAC;aACN;YACD,IAAI,EAAE,MAAK;IACP,YAAA,MAAM,EAAE,CAAC;IACT,YAAA,MAAM,EAAE,CAAC;aACZ;SACP,CAAC;IACH,CAAC;IAEM,MAAM,QAAQ,GAAG,cAAc,EAAE;;;;;;;;;;;;;;6BCvBpC,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;2CAFU,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAHxB,UAMM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;gEADF,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;4CAFU,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;WAZT,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,CAAS,EAAA,GAAA,OAAA,CAAA;IAEpB,CAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAA,CAAA;IAEf,CAAA,IAAA,EAAA,OAAO,KAAI,QAAQ,CAAA;;;;;;;;;;;;;;;;;;;;IAKR,CAAA,MAAA,aAAA,GAAA,MAAA,QAAQ,CAAC,IAAI,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBCJ7B,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;2CAFc,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFxB,UAKM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;wDADF,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;4CAFc,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;WANT,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,IAAY,EAAA,GAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICF3B,CAAC,UAAU,MAAM,EAAE,OAAO,EAAE;IAC5B,CAAgE,MAAiB,CAAA,OAAA,GAAA,OAAO,EAAE,CAE/D,CAAC;IAC5B,CAAC,CAACC,cAAI,GAAG,YAAY,CACrB;IACA,CAAC,SAAS,oBAAoB,CAAC,EAAE,EAAE,MAAM,EAAE;IAC3C,EAAE,OAAO,MAAM,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC;IAC9E,EAAE;AACF;IACA,CAAC,IAAI,OAAO,GAAG,oBAAoB,CAAC,UAAU,MAAM,EAAE;IACtD;IACA,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,MAAM,IAAI,WAAW,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI;IAClF,KAAK,MAAM,GAAG,OAAO,IAAI,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI;IACpE;IACA,KAAK,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;IAC/B,CAAC,IAAI,OAAO,GAAG,IAAI,QAAQ,EAAE,EAAE,GAAG,GAAG,MAAM,CAAC,EAAE;IAC9C,EAAE,CAAC,CAAC;AACJ;IACA,CAAC,IAAI,KAAK,GAAG,oBAAoB,CAAC,UAAU,MAAM,EAAE;IACpD,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;IAClD,CAAC,IAAI,OAAO,GAAG,IAAI,QAAQ,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IAC5C,EAAE,CAAC,CAAC;IACJ,CAAe,KAAK,CAAC,QAAQ;AAC7B;IACA,CAAC,IAAI,SAAS,GAAG,UAAU,EAAE,EAAE;IAC/B,GAAG,OAAO,OAAO,EAAE,KAAK,QAAQ,GAAG,EAAE,KAAK,IAAI,GAAG,OAAO,EAAE,KAAK,UAAU,CAAC;IAC1E,EAAE,CAAC;AACH;IACA,CAAC,IAAI,SAAS,GAAG,UAAU,EAAE,EAAE;IAC/B,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE,GAAG,oBAAoB,CAAC,CAAC,EAAE;IACtE,GAAG,OAAO,EAAE,CAAC;IACb,EAAE,CAAC;AACH;IACA,CAAC,IAAI,MAAM,GAAG,UAAU,IAAI,EAAE;IAC9B,GAAG,IAAI;IACP,KAAK,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IACrB,IAAI,CAAC,OAAO,CAAC,EAAE;IACf,KAAK,OAAO,IAAI,CAAC;IACjB,IAAI;IACJ,EAAE,CAAC;AACH;IACA;IACA,CAAC,IAAI,YAAY,GAAG,CAAC,MAAM,CAAC,YAAY;IACxC,GAAG,OAAO,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACpF,EAAE,CAAC,CAAC;AACJ;IACA,CAAC,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACjC;IACA,CAAC,IAAI,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACnE,CAAC,IAAI,UAAU,GAAG,UAAU,EAAE,EAAE;IAChC,GAAG,OAAO,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAC/C,EAAE,CAAC;AACH;IACA,CAAC,IAAI,aAAa,GAAG,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY;IAC1D,GAAG,OAAO,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACnG,EAAE,CAAC,CAAC;AACJ;IACA;AACA;IACA;IACA;IACA,CAAC,IAAI,YAAY,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;IACrC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;IACrC,GAAG,IAAI,EAAE,EAAE,GAAG,CAAC;IACf,GAAG,IAAI,CAAC,IAAI,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,UAAU,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;IACrG,GAAG,IAAI,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,UAAU,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;IAC/F,GAAG,IAAI,CAAC,CAAC,IAAI,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,UAAU,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;IACtG,GAAG,MAAM,SAAS,CAAC,yCAAyC,CAAC,CAAC;IAC9D,EAAE,CAAC;AACH;IACA,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,cAAc,CAAC;AAChC;IACA,CAAC,IAAI,CAAC,GAAG,YAAY,GAAG,MAAM,CAAC,cAAc,GAAG,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE;IAC1F,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAChB,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7B,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;IACzB,GAAG,IAAI,aAAa,EAAE,EAAE,IAAI;IAC5B,KAAK,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACjC,IAAI,CAAC,OAAO,CAAC,EAAE,eAAe,EAAE;IAChC,GAAG,IAAI,KAAK,IAAI,UAAU,IAAI,KAAK,IAAI,UAAU,EAAE,EAAE,MAAM,SAAS,CAAC,0BAA0B,CAAC,CAAC,EAAE;IACnG,GAAG,IAAI,OAAO,IAAI,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;IAC1D,GAAG,OAAO,CAAC,CAAC;IACZ,EAAE,CAAC;AACH;IACA,CAAC,IAAI,SAAS,GAAG;IACjB,EAAE,CAAC,EAAE,CAAC;IACN,EAAE,CAAC;AACH;IACA,CAAC,IAAI,aAAa,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;IAC9C,GAAG,OAAO;IACV,KAAK,UAAU,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;IAC9B,KAAK,YAAY,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;IAChC,KAAK,QAAQ,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;IAC5B,KAAK,KAAK,EAAE,KAAK;IACjB,IAAI,CAAC;IACL,EAAE,CAAC;AACH;IACA,CAAC,IAAI,KAAK,GAAG,YAAY,GAAG,UAAU,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;IAC1D,GAAG,OAAO,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5D,EAAE,GAAG,UAAU,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;IACnC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACvB,GAAG,OAAO,MAAM,CAAC;IACjB,EAAE,CAAC;AACH;IACA,CAAC,IAAI,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC;IACxC,CAAC,IAAI,IAAI,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE;IAC/B,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IACvC,EAAE,CAAC;AACH;IACA,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC,IAAI,IAAI,GAAG,UAAU,GAAG,EAAE;IAC3B,GAAG,OAAO,SAAS,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACzF,EAAE,CAAC;AAGH;IACA,CAAC,IAAI,OAAO,GAAG,oBAAoB,CAAC,UAAU,MAAM,EAAE;IACtD,CAAC,IAAI,MAAM,GAAG,oBAAoB,CAAC;IACnC,CAAC,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;AACvD;IACA,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,KAAK,EAAE;IACzC,GAAG,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;IACxE,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;IACzB,GAAG,OAAO,EAAE,KAAK,CAAC,OAAO;IACzB,GAAG,IAAI,EAAsB,QAAQ;IACrC,GAAG,SAAS,EAAE,sCAAsC;IACpD,EAAE,CAAC,CAAC;IACJ,EAAE,CAAC,CAAC;AACJ;IACA,CAAC,IAAI,iBAAiB,GAAG,OAAO,CAAC,2BAA2B,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACjF;IACA,CAAC,IAAI,SAAS,GAAG,oBAAoB,CAAC,UAAU,MAAM,EAAE;IACxD,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AACvB;IACA,CAAC,IAAI,SAAS,GAAG,UAAU,CAAC;IAC5B,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,iBAAiB,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;AACrD;IACA,CAAC,KAAK,CAAC,aAAa,GAAG,UAAU,EAAE,EAAE;IACrC,GAAG,OAAO,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,EAAE,CAAC;AACH;IACA,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;IAChD,GAAG,IAAI,UAAU,GAAG,OAAO,GAAG,IAAI,UAAU,CAAC;IAC7C,GAAG,IAAI,UAAU,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE;IACpE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,EAAE,OAAO,EAAE;IAClC,GAAG,IAAI,UAAU,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACvG,GAAG,IAAI,CAAC,KAAK,OAAO,EAAE;IACtB,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAClB,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;IACrB,KAAK,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACxB,IAAI,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;IACtB,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAClB,IAAI,MAAM;IACV,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACxB,IAAI;IACJ;IACA,EAAE,EAAE,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,QAAQ,GAAG;IACvD,GAAG,OAAO,OAAO,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjF,EAAE,CAAC,CAAC;IACJ,EAAE,CAAC,CAAC;AACJ;IACA,CAAC,IAAI,UAAU,GAAG,UAAU,EAAE,EAAE;IAChC,GAAG,IAAI,OAAO,EAAE,IAAI,UAAU,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE,GAAG,qBAAqB,CAAC,CAAC,EAAE;IAChF,GAAG,OAAO,EAAE,CAAC;IACb,EAAE,CAAC;AACH;IACA;AACA;IACA,CAAC,IAAI,IAAI,GAAG,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACxC,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;IAClB,GAAG,IAAI,IAAI,KAAK,SAAS,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;IACzC,GAAG,QAAQ,MAAM;IACjB,KAAK,KAAK,CAAC,EAAE,OAAO,UAAU,CAAC,EAAE;IACjC,OAAO,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC/B,MAAM,CAAC;IACP,KAAK,KAAK,CAAC,EAAE,OAAO,UAAU,CAAC,EAAE,CAAC,EAAE;IACpC,OAAO,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,MAAM,CAAC;IACP,KAAK,KAAK,CAAC,EAAE,OAAO,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACvC,OAAO,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,MAAM,CAAC;IACP,IAAI;IACJ,GAAG,OAAO,yBAAyB;IACnC,KAAK,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACtC,IAAI,CAAC;IACL,EAAE,CAAC;AACH;IACA,CAAC,IAAI,SAAS,GAAG,WAAW,CAAC;AAC7B;IACA,CAAC,IAAI,OAAO,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;IAC7C,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;IACpC,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;IACpC,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;IACpC,GAAG,IAAI,QAAQ,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;IACnC,GAAG,IAAI,OAAO,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;IAClC,GAAG,IAAI,MAAM,GAAG,SAAS,GAAG,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;IAC3H,GAAG,IAAI,OAAO,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACvE,GAAG,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;IAClE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC1B,GAAG,IAAI,SAAS,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,EAAE;IACpC,GAAG,KAAK,GAAG,IAAI,MAAM,EAAE;IACvB;IACA,KAAK,GAAG,GAAG,CAAC,SAAS,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC;IAC7D;IACA,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,MAAM,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC;IACxC;IACA,KAAK,GAAG,GAAG,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,QAAQ,IAAI,OAAO,GAAG,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;IACvH;IACA,KAAK,IAAI,MAAM,EAAE,EAAE,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;IACnE;IACA,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;IAC3D,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE;IACnE,IAAI;IACJ,EAAE,CAAC;IACH,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB;IACA,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC;IACjB,CAAC,IAAI,OAAO,GAAG,OAAO,CAAC;AACvB;IACA;IACA,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACtB,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACxB,CAAC,IAAI,UAAU,GAAG,UAAU,EAAE,EAAE;IAChC,GAAG,OAAO,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;IAC5D,EAAE,CAAC;AACH;IACA;IACA,CAAC,IAAI,QAAQ,GAAG,UAAU,EAAE,EAAE;IAC9B,GAAG,IAAI,EAAE,IAAI,SAAS,EAAE,EAAE,MAAM,SAAS,CAAC,wBAAwB,GAAG,EAAE,CAAC,CAAC,EAAE;IAC3E,GAAG,OAAO,EAAE,CAAC;IACb,EAAE,CAAC;AACH;IACA;IACA;IACA,CAAC,IAAI,SAAS,GAAG,UAAU,SAAS,EAAE;IACtC,GAAG,OAAO,UAAU,IAAI,EAAE,GAAG,EAAE;IAC/B,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACtB,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC,EAAE;IAChE,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACzB,KAAK,OAAO,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG,MAAM;IACvG,SAAS,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IACpC,SAAS,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC,GAAG,OAAO,CAAC;IACrF,IAAI,CAAC;IACL,EAAE,CAAC;AACH;IACA,CAAC,IAAI,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE;IAC9B;IACA,GAAG,WAAW,EAAE,SAAS,WAAW,CAAC,GAAG,EAAE;IAC1C,KAAK,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC3B,IAAI;IACJ,EAAE,CAAC,CAAC;AACJ;IACA,CAAmB,KAAK,CAAC,MAAM,CAAC,YAAY;AAC5C;IACA,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC,IAAI,gBAAgB,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE;IACjD,GAAG,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7B,GAAG,OAAO,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAClE,EAAE,CAAC;AACH;IACA,CAAC,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IACxC,CAAC,IAAI,cAAc,GAAG,MAAM,CAAC,aAAa,CAAC;AAC3C;IACA;IACA,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE;IAC7F;IACA,GAAG,aAAa,EAAE,SAAS,aAAa,CAAC,CAAC,EAAE;IAC5C,KAAK,IAAI,WAAW,GAAG,SAAS,CAAC;IACjC;IACA,KAAK,IAAI,GAAG,GAAG,EAAE,CAAC;IAClB,KAAK,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;IACjC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,KAAK,IAAI,IAAI,CAAC;IACd,KAAK,OAAO,IAAI,GAAG,CAAC,EAAE;IACtB,OAAO,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;IAChC,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,MAAM,UAAU,CAAC,IAAI,GAAG,4BAA4B,CAAC,CAAC,EAAE;IAChH,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO;IAC9B,WAAW,YAAY,CAAC,IAAI,CAAC;IAC7B,WAAW,YAAY,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,KAAK,EAAE,IAAI,MAAM,EAAE,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;IAClF,QAAQ,CAAC;IACT,MAAM,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3B,IAAI;IACJ,EAAE,CAAC,CAAC;AACJ;IACA,CAAqB,KAAK,CAAC,MAAM,CAAC,cAAc;AAChD;IACA;IACA,CAAC,IAAI,eAAe,GAAG,yCAAyC,CAAC;IACjE,CAAC,IAAI,QAAQ,GAAG,q7NAAq7N,CAAC;IACt8N,CAAC,IAAI,WAAW,GAAG,o2QAAo2Q,CAAC;AACx3Q;IACA,CAAC,IAAI,OAAO,GAAG;IACf,EAAE,eAAe,EAAE,eAAe;IAClC,EAAE,QAAQ,EAAE,QAAQ;IACpB,EAAE,WAAW,EAAE,WAAW;IAC1B,EAAE,CAAC;AACH;IACA,CAAC,IAAI,IAAI,GAAG;IACZ,KAAK,gBAAgB,EAAE,SAAS,gBAAgB,EAAE,CAAC,EAAE;IACrD,SAAS,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACxE,MAAM;AACN;IACA,KAAK,aAAa,EAAE,SAAS,aAAa,EAAE,CAAC,EAAE;IAC/C,SAAS,OAAO,OAAO,CAAC,KAAK,QAAQ;IACrC,aAAa,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG;IAClC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;IAC/B,UAAU,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC;IACnC,SAAS,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACjC,UAAU;IACV,MAAM;AACN;IACA,KAAK,gBAAgB,EAAE,SAAS,gBAAgB,EAAE,CAAC,EAAE;IACrD,SAAS,OAAO,OAAO,CAAC,KAAK,QAAQ;IACrC,aAAa,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG;IAClC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;IAC/B,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;IAC/B,UAAU,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC;IACnC,UAAU,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC;IAC7C,SAAS,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC,UAAU;IACV,MAAM;AACN;IACA,KAAK,OAAO,EAAE,SAAS,OAAO,EAAE,CAAC,EAAE;IACnC,SAAS,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACxD,MAAM;AACN;IACA,KAAK,UAAU,EAAE,SAAS,UAAU,EAAE,CAAC,EAAE;IACzC,SAAS,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9D,MAAM;IACN,EAAE,CAAC;AACH;IACA,CAAC,IAAI,MAAM,CAAC;IACZ,CAAC,IAAI,UAAU,CAAC;IAChB,CAAC,IAAI,KAAK,CAAC;IACX,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,IAAI,CAAC;IACV,CAAC,IAAI,MAAM,CAAC;IACZ,CAAC,IAAI,KAAK,CAAC;IACX,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,IAAI,CAAC;AACV;IACA,CAAC,IAAI,KAAK,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;IAC5C,KAAK,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3B,KAAK,UAAU,GAAG,OAAO,CAAC;IAC1B,KAAK,KAAK,GAAG,EAAE,CAAC;IAChB,KAAK,GAAG,GAAG,CAAC,CAAC;IACb,KAAK,IAAI,GAAG,CAAC,CAAC;IACd,KAAK,MAAM,GAAG,CAAC,CAAC;IAChB,KAAK,KAAK,GAAG,SAAS,CAAC;IACvB,KAAK,GAAG,GAAG,SAAS,CAAC;IACrB,KAAK,IAAI,GAAG,SAAS,CAAC;AACtB;IACA,KAAK,GAAG;IACR,SAAS,KAAK,GAAG,GAAG,EAAE,CAAC;AACvB;IACA;IACA;IACA;IACA;AACA;IACA,SAAS,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;IACnC,MAAM,QAAQ,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC;AACnC;IACA,KAAK,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;IACxC,SAAS,OAAO,WAAW,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC;IACpD,MAAM;AACN;IACA,KAAK,OAAO,IAAI;IAChB,EAAE,CAAC;AACH;IACA,CAAC,SAAS,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;IAC9C,KAAK,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IACrD,SAAS,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE;IAChC,aAAa,IAAI,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;IAChE,aAAa,IAAI,WAAW,KAAK,SAAS,EAAE;IAC5C,iBAAiB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;IACnC,cAAc,MAAM;IACpB,iBAAiB,KAAK,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;IAC1C,cAAc;IACd,UAAU;IACV,MAAM;AACN;IACA,KAAK,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;IAC7C,EAAE;AACF;IACA,CAAC,IAAI,QAAQ,CAAC;IACd,CAAC,IAAI,MAAM,CAAC;IACZ,CAAC,IAAI,WAAW,CAAC;IACjB,CAAC,IAAI,IAAI,CAAC;IACV,CAAC,IAAI,CAAC,CAAC;AACP;IACA,CAAC,SAAS,GAAG,IAAI;IACjB,KAAK,QAAQ,GAAG,SAAS,CAAC;IAC1B,KAAK,MAAM,GAAG,EAAE,CAAC;IACjB,KAAK,WAAW,GAAG,KAAK,CAAC;IACzB,KAAK,IAAI,GAAG,CAAC,CAAC;AACd;IACA,KAAK,SAAS;IACd,SAAS,CAAC,GAAG,IAAI,EAAE,CAAC;AACpB;IACA;IACA;IACA;IACA;AACA;IACA,SAAS,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC3C,SAAS,IAAI,KAAK,EAAE;IACpB,aAAa,OAAO,KAAK;IACzB,UAAU;IACV,MAAM;IACN,EAAE;AACF;IACA,CAAC,SAAS,IAAI,IAAI;IAClB,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE;IACtB,SAAS,OAAO,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC7D,MAAM;IACN,EAAE;AACF;IACA,CAAC,SAAS,IAAI,IAAI;IAClB,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;AACpB;IACA,KAAK,IAAI,CAAC,KAAK,IAAI,EAAE;IACrB,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,MAAM,GAAG,CAAC,CAAC;IACpB,MAAM,MAAM,IAAI,CAAC,EAAE;IACnB,SAAS,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC;IAC5B,MAAM,MAAM;IACZ,SAAS,MAAM,EAAE,CAAC;IAClB,MAAM;AACN;IACA,KAAK,IAAI,CAAC,EAAE;IACZ,SAAS,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC;IACzB,MAAM;AACN;IACA,KAAK,OAAO,CAAC;IACb,EAAE;AACF;IACA,CAAC,IAAI,SAAS,GAAG;IACjB,KAAK,OAAO,EAAE,SAAS,SAAS,IAAI;IACpC,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,QAAQ,CAAC;IACvB,SAAS,KAAK,QAAQ,CAAC;IACvB,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,QAAQ,CAAC;IACvB,SAAS,KAAK,QAAQ;IACtB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,SAAS,CAAC;IAClC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,SAAS;IACvB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,QAAQ,CAAC,KAAK,CAAC;IACnC,UAAU;AACV;IACA,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;IACvC,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,MAAM;IACnB,UAAU;AACV;IACA;IACA;IACA;IACA;AACA;IACA,SAAS,OAAO,SAAS,CAAC,UAAU,CAAC,EAAE;IACvC,MAAM;AACN;IACA,KAAK,OAAO,EAAE,SAAS,OAAO,IAAI;IAClC,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,kBAAkB,CAAC;IAC3C,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,mBAAmB,CAAC;IAC5C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,gBAAgB,EAAE,SAAS,gBAAgB,IAAI;IACpD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,0BAA0B,CAAC;IACnD,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,SAAS;IACvB,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,MAAM;AACN;IACA,KAAK,wBAAwB,EAAE,SAAS,wBAAwB,IAAI;IACpE,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,SAAS,CAAC;IAClC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,SAAS;IACvB,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,QAAQ,GAAG,kBAAkB,CAAC;IACvC,MAAM;AACN;IACA,KAAK,iBAAiB,EAAE,SAAS,iBAAiB,IAAI;IACtD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,QAAQ,CAAC;IACvB,SAAS,KAAK,QAAQ;IACtB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,SAAS,CAAC;IAClC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,SAAS;IACvB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,QAAQ,CAAC,KAAK,CAAC;IACnC,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,MAAM;AACN;IACA,KAAK,KAAK,EAAE,SAAS,KAAK,IAAI;IAC9B,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;AAClD;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5B,aAAa,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;AAC1C;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5B,aAAa,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC;AAC7C;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7B,aAAa,OAAO,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;AAC9C;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE;IACjC,iBAAiB,IAAI,GAAG,CAAC,CAAC,CAAC;IAC3B,cAAc;AACd;IACA,aAAa,QAAQ,GAAG,MAAM,CAAC;IAC/B,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;IAC7B,aAAa,QAAQ,GAAG,qBAAqB,CAAC;IAC9C,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;IAC7B,aAAa,QAAQ,GAAG,MAAM,CAAC;IAC/B,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;IAC7B,aAAa,QAAQ,GAAG,gBAAgB,CAAC;IACzC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,CAAC,SAAS,CAAC,CAAC;IAChC,aAAa,OAAO,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC;AACjD;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,aAAa,OAAO,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC;AAC5C;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,WAAW,IAAI,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;IAC5C,aAAa,MAAM,GAAG,EAAE,CAAC;IACzB,aAAa,QAAQ,GAAG,QAAQ,CAAC;IACjC,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,yBAAyB,EAAE,SAAS,yBAAyB,IAAI;IACtE,SAAS,IAAI,CAAC,KAAK,GAAG,EAAE;IACxB,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC;IACjC,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,KAAK;AAClB;IACA,SAAS;IACT,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;IACzC,iBAAiB,MAAM,iBAAiB,EAAE;IAC1C,cAAc;AACd;IACA,aAAa,KAAK;IAClB,UAAU;AACV;IACA,SAAS,MAAM,IAAI,CAAC,CAAC;IACrB,SAAS,QAAQ,GAAG,gBAAgB,CAAC;IACrC,MAAM;AACN;IACA,KAAK,cAAc,EAAE,SAAS,cAAc,IAAI;IAChD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,QAAQ,CAAC;IACvB,SAAS,KAAK,QAAQ;IACtB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,IAAI;IAClB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,sBAAsB,CAAC;IAC/C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;IACvC,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,OAAO,QAAQ,CAAC,YAAY,EAAE,MAAM,CAAC;IAC9C,MAAM;AACN;IACA,KAAK,oBAAoB,EAAE,SAAS,oBAAoB,IAAI;IAC5D,SAAS,IAAI,CAAC,KAAK,GAAG,EAAE;IACxB,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC;IACjC,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,QAAQ,CAAC;IACvB,SAAS,KAAK,QAAQ;IACtB,aAAa,KAAK;AAClB;IACA,SAAS;IACT,aAAa,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;IAC5C,iBAAiB,MAAM,iBAAiB,EAAE;IAC1C,cAAc;AACd;IACA,aAAa,KAAK;IAClB,UAAU;AACV;IACA,SAAS,MAAM,IAAI,CAAC,CAAC;IACrB,SAAS,QAAQ,GAAG,gBAAgB,CAAC;IACrC,MAAM;AACN;IACA,KAAK,IAAI,EAAE,SAAS,MAAM,IAAI;IAC9B,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;IAC7B,aAAa,QAAQ,GAAG,qBAAqB,CAAC;IAC9C,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;IAC7B,aAAa,QAAQ,GAAG,MAAM,CAAC;IAC/B,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;IAC7B,aAAa,QAAQ,GAAG,gBAAgB,CAAC;IACzC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,CAAC,SAAS,CAAC,CAAC;IAChC,aAAa,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,QAAQ,CAAC;AACxD;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,aAAa,OAAO,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC;IAC5C,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,IAAI,EAAE,SAAS,IAAI,IAAI;IAC5B,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,cAAc,CAAC;IACvC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,iBAAiB,CAAC;IAC1C,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,aAAa,CAAC;IACtC,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,CAAC,CAAC;IAC7C,MAAM;AACN;IACA,KAAK,cAAc,EAAE,SAAS,cAAc,IAAI;IAChD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,cAAc,CAAC;IACvC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,iBAAiB,CAAC;IAC1C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9B,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAM;AACN;IACA,KAAK,mBAAmB,EAAE,SAAS,mBAAmB,IAAI;IAC1D,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9B,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,iBAAiB,CAAC;IAC1C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,YAAY,EAAE,SAAS,YAAY,IAAI;IAC5C,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,iBAAiB,CAAC;IAC1C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9B,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,iBAAiB,CAAC;IAC1C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAM;AACN;IACA,KAAK,eAAe,EAAE,SAAS,eAAe,IAAI;IAClD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,iBAAiB,CAAC;IAC1C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9B,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAM;AACN;IACA,KAAK,eAAe,EAAE,SAAS,eAAe,IAAI;IAClD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,qBAAqB,CAAC;IAC9C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9B,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,wBAAwB,CAAC;IACjD,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,mBAAmB,EAAE,SAAS,mBAAmB,IAAI;IAC1D,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9B,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,wBAAwB,CAAC;IACjD,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,sBAAsB,EAAE,SAAS,sBAAsB,IAAI;IAChE,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9B,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAM;AACN;IACA,KAAK,WAAW,EAAE,SAAS,WAAW,IAAI;IAC1C,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IACjC,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,oBAAoB,CAAC;IAC7C,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,kBAAkB,EAAE,SAAS,kBAAkB,IAAI;IACxD,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IACjC,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,OAAO,QAAQ,CAAC,SAAS,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAM;AACN;IACA,KAAK,MAAM,EAAE,SAAS,MAAM,IAAI;IAChC,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,IAAI;IAClB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,MAAM,IAAI,MAAM,EAAE,CAAC;IAChC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,WAAW,EAAE;IAC9B,iBAAiB,IAAI,EAAE,CAAC;IACxB,iBAAiB,OAAO,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;IAClD,cAAc;AACd;IACA,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,IAAI,CAAC,WAAW,EAAE;IAC/B,iBAAiB,IAAI,EAAE,CAAC;IACxB,iBAAiB,OAAO,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;IAClD,cAAc;AACd;IACA,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,IAAI,CAAC;IACnB,SAAS,KAAK,IAAI;IAClB,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;AACtC;IACA,SAAS,KAAK,QAAQ,CAAC;IACvB,SAAS,KAAK,QAAQ;IACtB,aAAa,aAAa,CAAC,CAAC,CAAC,CAAC;IAC9B,aAAa,KAAK;AAClB;IACA,SAAS,KAAK,SAAS;IACvB,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,MAAM,IAAI,IAAI,EAAE,CAAC;IAC1B,MAAM;AACN;IACA,KAAK,KAAK,EAAE,SAAS,KAAK,IAAI;IAC9B,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;AAClD;IACA;IACA;IACA;IACA,UAAU;AACV;IACA,SAAS,QAAQ,GAAG,OAAO,CAAC;IAC5B,MAAM;AACN;IACA,KAAK,kBAAkB,EAAE,SAAS,kBAAkB,IAAI;IACxD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;IAC7B,aAAa,QAAQ,GAAG,gBAAgB,CAAC;IACzC,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,IAAI;IAClB,aAAa,IAAI,EAAE,CAAC;IACpB,aAAa,QAAQ,GAAG,2BAA2B,CAAC;IACpD,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;AAClD;IACA,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,WAAW,IAAI,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;IAC5C,aAAa,QAAQ,GAAG,QAAQ,CAAC;IACjC,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;IACpC,aAAa,MAAM,IAAI,IAAI,EAAE,CAAC;IAC9B,aAAa,QAAQ,GAAG,gBAAgB,CAAC;IACzC,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,iBAAiB,EAAE,SAAS,iBAAiB,IAAI;IACtD,SAAS,IAAI,CAAC,KAAK,GAAG,EAAE;IACxB,aAAa,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;IAClD,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,mBAAmB,EAAE,SAAS,mBAAmB,IAAI;IAC1D,SAAS,QAAQ,GAAG,OAAO,CAAC;IAC5B,MAAM;AACN;IACA,KAAK,kBAAkB,EAAE,SAAS,kBAAkB,IAAI;IACxD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;IAClD,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,gBAAgB,EAAE,SAAS,gBAAgB,IAAI;IACpD,SAAS,IAAI,CAAC,KAAK,GAAG,EAAE;IACxB,aAAa,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;IAClD,UAAU;AACV;IACA,SAAS,QAAQ,GAAG,OAAO,CAAC;IAC5B,MAAM;AACN;IACA,KAAK,eAAe,EAAE,SAAS,eAAe,IAAI;IAClD,SAAS,QAAQ,CAAC;IAClB,SAAS,KAAK,GAAG,CAAC;IAClB,SAAS,KAAK,GAAG;IACjB,aAAa,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;IAClD,UAAU;AACV;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,GAAG,EAAE,SAAS,GAAG,IAAI;IAC1B;IACA;IACA;IACA;IACA;AACA;IACA,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;IACN,EAAE,CAAC;AACH;IACA,CAAC,SAAS,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE;IACjC,KAAK,OAAO;IACZ,SAAS,IAAI,EAAE,IAAI;IACnB,SAAS,KAAK,EAAE,KAAK;IACrB,SAAS,IAAI,EAAE,IAAI;IACnB,SAAS,MAAM,EAAE,MAAM;IACvB,MAAM;IACN,EAAE;AACF;IACA,CAAC,SAAS,OAAO,EAAE,CAAC,EAAE;IACtB,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACxD,SAAS,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB;IACA,SAAS,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;AACxB;IACA,SAAS,IAAI,CAAC,KAAK,CAAC,EAAE;IACtB,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,MAAM;IACN,EAAE;AACF;IACA,CAAC,SAAS,MAAM,IAAI;IACpB,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;IACpB,KAAK,QAAQ,CAAC;IACd,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,IAAI;AACpB;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,IAAI;AACpB;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,IAAI;AACpB;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,IAAI;AACpB;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,IAAI;AACpB;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,IAAI;AACpB;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE;IACnC,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,OAAO,IAAI;AACpB;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,SAAS,EAAE;AAC3B;IACA,KAAK,KAAK,GAAG;IACb,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,aAAa,EAAE;AAC/B;IACA,KAAK,KAAK,IAAI,CAAC;IACf,KAAK,KAAK,QAAQ,CAAC;IACnB,KAAK,KAAK,QAAQ;IAClB,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,OAAO,EAAE;AAClB;IACA,KAAK,KAAK,IAAI;IACd,SAAS,IAAI,EAAE,CAAC;IAChB,SAAS,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE;IAC9B,aAAa,IAAI,EAAE,CAAC;IACpB,UAAU;AACV;IACA,SAAS,OAAO,EAAE;AAClB;IACA,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG,CAAC;IACd,KAAK,KAAK,GAAG;IACb,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;AAClC;IACA,KAAK,KAAK,SAAS;IACnB,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,OAAO,IAAI,EAAE;IAClB,EAAE;AACF;IACA,CAAC,SAAS,SAAS,IAAI;IACvB,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC;IACrB,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;AACpB;IACA,KAAK,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IAC9B,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,MAAM,IAAI,IAAI,EAAE,CAAC;AACtB;IACA,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC;IAChB,KAAK,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IAC9B,SAAS,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM;AACN;IACA,KAAK,MAAM,IAAI,IAAI,EAAE,CAAC;AACtB;IACA,KAAK,OAAO,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACtD,EAAE;AACF;IACA,CAAC,SAAS,aAAa,IAAI;IAC3B,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC;IACrB,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC;AACnB;IACA,KAAK,OAAO,KAAK,EAAE,GAAG,CAAC,EAAE;IACzB,SAAS,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;IACxB,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IAClC,aAAa,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,UAAU;AACV;IACA,SAAS,MAAM,IAAI,IAAI,EAAE,CAAC;IAC1B,MAAM;AACN;IACA,KAAK,OAAO,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACtD,EAAE;AACF;IACA,CAAC,IAAI,WAAW,GAAG;IACnB,KAAK,KAAK,EAAE,SAAS,KAAK,IAAI;IAC9B,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;IACnC,aAAa,MAAM,UAAU,EAAE;IAC/B,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,MAAM;AACN;IACA,KAAK,kBAAkB,EAAE,SAAS,kBAAkB,IAAI;IACxD,SAAS,QAAQ,KAAK,CAAC,IAAI;IAC3B,SAAS,KAAK,YAAY,CAAC;IAC3B,SAAS,KAAK,QAAQ;IACtB,aAAa,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;IAC/B,aAAa,UAAU,GAAG,mBAAmB,CAAC;IAC9C,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,YAAY;IAC1B;IACA;IACA;IACA;AACA;IACA,aAAa,GAAG,EAAE,CAAC;IACnB,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,KAAK;IACnB,aAAa,MAAM,UAAU,EAAE;IAC/B,UAAU;AACV;IACA;IACA;IACA,MAAM;AACN;IACA,KAAK,iBAAiB,EAAE,SAAS,iBAAiB,IAAI;IACtD;IACA;IACA;IACA;AACA;IACA,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;IACnC,aAAa,MAAM,UAAU,EAAE;IAC/B,UAAU;AACV;IACA,SAAS,UAAU,GAAG,qBAAqB,CAAC;IAC5C,MAAM;AACN;IACA,KAAK,mBAAmB,EAAE,SAAS,mBAAmB,IAAI;IAC1D,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;IACnC,aAAa,MAAM,UAAU,EAAE;IAC/B,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,MAAM;AACN;IACA,KAAK,gBAAgB,EAAE,SAAS,gBAAgB,IAAI;IACpD,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;IACnC,aAAa,MAAM,UAAU,EAAE;IAC/B,UAAU;AACV;IACA,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI,KAAK,CAAC,KAAK,KAAK,GAAG,EAAE;IACjE,aAAa,GAAG,EAAE,CAAC;IACnB,aAAa,MAAM;IACnB,UAAU;AACV;IACA,SAAS,IAAI,EAAE,CAAC;IAChB,MAAM;AACN;IACA,KAAK,kBAAkB,EAAE,SAAS,kBAAkB,IAAI;IACxD;IACA;IACA;IACA;AACA;IACA,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;IACnC,aAAa,MAAM,UAAU,EAAE;IAC/B,UAAU;AACV;IACA,SAAS,QAAQ,KAAK,CAAC,KAAK;IAC5B,SAAS,KAAK,GAAG;IACjB,aAAa,UAAU,GAAG,oBAAoB,CAAC;IAC/C,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,GAAG,EAAE,CAAC;IACnB,UAAU;AACV;IACA;IACA;IACA,MAAM;AACN;IACA,KAAK,eAAe,EAAE,SAAS,eAAe,IAAI;IAClD;IACA;IACA;IACA;AACA;IACA,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;IACnC,aAAa,MAAM,UAAU,EAAE;IAC/B,UAAU;AACV;IACA,SAAS,QAAQ,KAAK,CAAC,KAAK;IAC5B,SAAS,KAAK,GAAG;IACjB,aAAa,UAAU,GAAG,kBAAkB,CAAC;IAC7C,aAAa,MAAM;AACnB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,GAAG,EAAE,CAAC;IACnB,UAAU;AACV;IACA;IACA;IACA,MAAM;AACN;IACA,KAAK,GAAG,EAAE,SAAS,GAAG,IAAI;IAC1B;IACA;IACA;IACA;IACA,MAAM;IACN,EAAE,CAAC;AACH;IACA,CAAC,SAAS,IAAI,IAAI;IAClB,KAAK,IAAI,KAAK,CAAC;AACf;IACA,KAAK,QAAQ,KAAK,CAAC,IAAI;IACvB,KAAK,KAAK,YAAY;IACtB,SAAS,QAAQ,KAAK,CAAC,KAAK;IAC5B,SAAS,KAAK,GAAG;IACjB,aAAa,KAAK,GAAG,EAAE,CAAC;IACxB,aAAa,KAAK;AAClB;IACA,SAAS,KAAK,GAAG;IACjB,aAAa,KAAK,GAAG,EAAE,CAAC;IACxB,aAAa,KAAK;IAClB,UAAU;AACV;IACA,SAAS,KAAK;AACd;IACA,KAAK,KAAK,MAAM,CAAC;IACjB,KAAK,KAAK,SAAS,CAAC;IACpB,KAAK,KAAK,SAAS,CAAC;IACpB,KAAK,KAAK,QAAQ;IAClB,SAAS,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7B,SAAS,KAAK;AACd;IACA;IACA;IACA;IACA,MAAM;AACN;IACA,KAAK,IAAI,IAAI,KAAK,SAAS,EAAE;IAC7B,SAAS,IAAI,GAAG,KAAK,CAAC;IACtB,MAAM,MAAM;IACZ,SAAS,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;IACpC,aAAa,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,UAAU,MAAM;IAChB,aAAa,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACjC,UAAU;IACV,MAAM;AACN;IACA,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IACtD,SAAS,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3B;IACA,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IACnC,aAAa,UAAU,GAAG,kBAAkB,CAAC;IAC7C,UAAU,MAAM;IAChB,aAAa,UAAU,GAAG,oBAAoB,CAAC;IAC/C,UAAU;IACV,MAAM,MAAM;IACZ,SAAS,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC/C,SAAS,IAAI,OAAO,IAAI,IAAI,EAAE;IAC9B,aAAa,UAAU,GAAG,KAAK,CAAC;IAChC,UAAU,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;IAC5C,aAAa,UAAU,GAAG,iBAAiB,CAAC;IAC5C,UAAU,MAAM;IAChB,aAAa,UAAU,GAAG,oBAAoB,CAAC;IAC/C,UAAU;IACV,MAAM;IACN,EAAE;AACF;IACA,CAAC,SAAS,GAAG,IAAI;IACjB,KAAK,KAAK,CAAC,GAAG,EAAE,CAAC;AACjB;IACA,KAAK,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3C,KAAK,IAAI,OAAO,IAAI,IAAI,EAAE;IAC1B,SAAS,UAAU,GAAG,KAAK,CAAC;IAC5B,MAAM,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;IACxC,SAAS,UAAU,GAAG,iBAAiB,CAAC;IACxC,MAAM,MAAM;IACZ,SAAS,UAAU,GAAG,oBAAoB,CAAC;IAC3C,MAAM;IACN,EAAE;AACF;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;IACA,CAAC,SAAS,WAAW,EAAE,CAAC,EAAE;IAC1B,KAAK,IAAI,CAAC,KAAK,SAAS,EAAE;IAC1B,SAAS,OAAO,WAAW,EAAE,iCAAiC,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,EAAE;IACtF,MAAM;AACN;IACA,KAAK,OAAO,WAAW,EAAE,4BAA4B,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,EAAE;IACzG,EAAE;AACF;IACA,CAAC,SAAS,UAAU,IAAI;IACxB,KAAK,OAAO,WAAW,EAAE,iCAAiC,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,EAAE;IAClF,EAAE;AACF;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;AACA;IACA,CAAC,SAAS,iBAAiB,IAAI;IAC/B,KAAK,MAAM,IAAI,CAAC,CAAC;IACjB,KAAK,OAAO,WAAW,EAAE,yCAAyC,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,EAAE;IAC1F,EAAE;AACF;IACA,CAAC,SAAS,aAAa,EAAE,CAAC,EAAE;IAC5B,KAAK,OAAO,CAAC,IAAI,EAAE,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,yDAAyD,EAAE,CAAC;IAC9G,EAAE;AACF;IACA,CAAC,SAAS,UAAU,EAAE,CAAC,EAAE;IACzB,KAAK,IAAI,YAAY,GAAG;IACxB,SAAS,GAAG,EAAE,KAAK;IACnB,SAAS,GAAG,EAAE,KAAK;IACnB,SAAS,IAAI,EAAE,MAAM;IACrB,SAAS,IAAI,EAAE,KAAK;IACpB,SAAS,IAAI,EAAE,KAAK;IACpB,SAAS,IAAI,EAAE,KAAK;IACpB,SAAS,IAAI,EAAE,KAAK;IACpB,SAAS,IAAI,EAAE,KAAK;IACpB,SAAS,IAAI,EAAE,KAAK;IACpB,SAAS,IAAI,EAAE,KAAK;IACpB,SAAS,QAAQ,EAAE,SAAS;IAC5B,SAAS,QAAQ,EAAE,SAAS;IAC5B,MAAM,CAAC;AACP;IACA,KAAK,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;IAC1B,SAAS,OAAO,YAAY,CAAC,CAAC,CAAC;IAC/B,MAAM;AACN;IACA,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE;IAClB,SAAS,IAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACtD,SAAS,OAAO,KAAK,GAAG,CAAC,IAAI,GAAG,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;IACtE,MAAM;AACN;IACA,KAAK,OAAO,CAAC;IACb,EAAE;AACF;IACA,CAAC,SAAS,WAAW,EAAE,OAAO,EAAE;IAChC,KAAK,IAAI,GAAG,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;IACxC,KAAK,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,KAAK,GAAG,CAAC,YAAY,GAAG,MAAM,CAAC;IAC/B,KAAK,OAAO,GAAG;IACf,EAAE;AACF;IACA,CAAC,IAAI,SAAS,GAAG,SAAS,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;IAC7D,KAAK,IAAI,KAAK,GAAG,EAAE,CAAC;IACpB,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC;IACrB,KAAK,IAAI,YAAY,CAAC;IACtB,KAAK,IAAI,YAAY,CAAC;IACtB,KAAK,IAAI,GAAG,GAAG,EAAE,CAAC;IAClB,KAAK,IAAI,KAAK,CAAC;AACf;IACA,KAAK;IACL,SAAS,QAAQ,IAAI,IAAI;IACzB,SAAS,OAAO,QAAQ,KAAK,QAAQ;IACrC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;IACjC,OAAO;IACP,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAChC,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAChC,SAAS,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACtC,MAAM;AACN;IACA,KAAK,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;IACzC,SAAS,YAAY,GAAG,QAAQ,CAAC;IACjC,MAAM,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IACzC,SAAS,YAAY,GAAG,EAAE,CAAC;IAC3B,SAAS,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACnE,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7B;IACA,aAAa,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;AACjC;IACA,aAAa,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;IACxC,iBAAiB,IAAI,GAAG,CAAC,CAAC;IAC1B,cAAc,MAAM;IACpB,iBAAiB,OAAO,CAAC,KAAK,QAAQ;IACtC,iBAAiB,CAAC,YAAY,MAAM;IACpC,iBAAiB,CAAC,YAAY,MAAM;IACpC,eAAe;IACf,iBAAiB,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,cAAc;AACd;IACA,aAAa,IAAI,IAAI,KAAK,SAAS,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACvE,iBAAiB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,cAAc;IACd,UAAU;IACV,MAAM;AACN;IACA,KAAK,IAAI,KAAK,YAAY,MAAM,EAAE;IAClC,SAAS,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,MAAM,IAAI,KAAK,YAAY,MAAM,EAAE;IACzC,SAAS,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM;AACN;IACA,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IACpC,SAAS,IAAI,KAAK,GAAG,CAAC,EAAE;IACxB,aAAa,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACrD,aAAa,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACjD,UAAU;IACV,MAAM,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC3C,SAAS,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACnC,MAAM;AACN;IACA,KAAK,OAAO,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC9C;IACA,KAAK,SAAS,iBAAiB,EAAE,GAAG,EAAE,MAAM,EAAE;IAC9C,SAAS,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,SAAS,IAAI,KAAK,IAAI,IAAI,EAAE;IAC5B,aAAa,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;IACtD,iBAAiB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5C,cAAc,MAAM,IAAI,OAAO,KAAK,CAAC,MAAM,KAAK,UAAU,EAAE;IAC5D,iBAAiB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC3C,cAAc;IACd,UAAU;AACV;IACA,SAAS,IAAI,YAAY,EAAE;IAC3B,aAAa,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IAC3D,UAAU;AACV;IACA,SAAS,IAAI,KAAK,YAAY,MAAM,EAAE;IACtC,aAAa,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,UAAU,MAAM,IAAI,KAAK,YAAY,MAAM,EAAE;IAC7C,aAAa,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,UAAU,MAAM,IAAI,KAAK,YAAY,OAAO,EAAE;IAC9C,aAAa,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;IACrC,UAAU;AACV;IACA,SAAS,QAAQ,KAAK;IACtB,SAAS,KAAK,IAAI,EAAE,OAAO,MAAM;IACjC,SAAS,KAAK,IAAI,EAAE,OAAO,MAAM;IACjC,SAAS,KAAK,KAAK,EAAE,OAAO,OAAO;IACnC,UAAU;AACV;IACA,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IACxC,aAAa,OAAO,WAAW,CAAC,KAAY,CAAC;IAC7C,UAAU;AACV;IACA,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IACxC,aAAa,OAAO,MAAM,CAAC,KAAK,CAAC;IACjC,UAAU;AACV;IACA,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IACxC,aAAa,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC;IACzF,UAAU;AACV;IACA,SAAS,OAAO,SAAS;IACzB,MAAM;AACN;IACA,KAAK,SAAS,WAAW,EAAE,KAAK,EAAE;IAClC,SAAS,IAAI,MAAM,GAAG;IACtB,aAAa,GAAG,EAAE,GAAG;IACrB,aAAa,GAAG,EAAE,GAAG;IACrB,UAAU,CAAC;AACX;IACA,SAAS,IAAI,YAAY,GAAG;IAC5B,aAAa,GAAG,EAAE,KAAK;IACvB,aAAa,GAAG,EAAE,KAAK;IACvB,aAAa,IAAI,EAAE,MAAM;IACzB,aAAa,IAAI,EAAE,KAAK;IACxB,aAAa,IAAI,EAAE,KAAK;IACxB,aAAa,IAAI,EAAE,KAAK;IACxB,aAAa,IAAI,EAAE,KAAK;IACxB,aAAa,IAAI,EAAE,KAAK;IACxB,aAAa,IAAI,EAAE,KAAK;IACxB,aAAa,IAAI,EAAE,KAAK;IACxB,aAAa,QAAQ,EAAE,SAAS;IAChC,aAAa,QAAQ,EAAE,SAAS;IAChC,UAAU,CAAC;AACX;IACA,SAAS,IAAI,OAAO,GAAG,EAAE,CAAC;AAC1B;IACA,SAAS,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChD,aAAa,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,aAAa,QAAQ,CAAC;IACtB,aAAa,KAAK,GAAG,CAAC;IACtB,aAAa,KAAK,GAAG;IACrB,iBAAiB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;IAC7B,iBAAiB,OAAO,IAAI,CAAC,CAAC;IAC9B,iBAAiB,QAAQ;AACzB;IACA,aAAa,KAAK,IAAI;IACtB,iBAAiB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;IACjD,qBAAqB,OAAO,IAAI,OAAO,CAAC;IACxC,qBAAqB,QAAQ;IAC7B,kBAAkB;IAClB,cAAc;AACd;IACA,aAAa,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;IAClC,iBAAiB,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5C,iBAAiB,QAAQ;IACzB,cAAc;AACd;IACA,aAAa,IAAI,CAAC,GAAG,GAAG,EAAE;IAC1B,iBAAiB,IAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC9D,iBAAiB,OAAO,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACnF,iBAAiB,QAAQ;IACzB,cAAc;AACd;IACA,aAAa,OAAO,IAAI,CAAC,CAAC;IAC1B,UAAU;AACV;IACA,SAAS,IAAI,SAAS,GAAG,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1H;IACA,SAAS,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;AACxF;IACA,SAAS,OAAO,SAAS,GAAG,OAAO,GAAG,SAAS;IAC/C,MAAM;AACN;IACA,KAAK,SAAS,eAAe,EAAE,KAAK,EAAE;IACtC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACxC,aAAa,MAAM,SAAS,CAAC,wCAAwC,CAAC;IACtE,UAAU;AACV;IACA,SAAS,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3B;IACA,SAAS,IAAI,QAAQ,GAAG,MAAM,CAAC;IAC/B,SAAS,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;AAC/B;IACA,SAAS,IAAI,IAAI,GAAG,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvD,SAAS,IAAI,OAAO,GAAG,EAAE,CAAC;IAC1B,SAAS,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC/D,aAAa,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B;IACA,aAAa,IAAI,cAAc,GAAG,iBAAiB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChE,aAAa,IAAI,cAAc,KAAK,SAAS,EAAE;IAC/C,iBAAiB,IAAI,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACtD,iBAAiB,IAAI,GAAG,KAAK,EAAE,EAAE;IACjC,qBAAqB,MAAM,IAAI,GAAG,CAAC;IACnC,kBAAkB;IAClB,iBAAiB,MAAM,IAAI,cAAc,CAAC;IAC1C,iBAAiB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,cAAc;IACd,UAAU;AACV;IACA,SAAS,IAAI,KAAK,CAAC;IACnB,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;IACnC,aAAa,KAAK,GAAG,IAAI,CAAC;IAC1B,UAAU,MAAM;IAChB,aAAa,IAAI,UAAU,CAAC;IAC5B,aAAa,IAAI,GAAG,KAAK,EAAE,EAAE;IAC7B,iBAAiB,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChD,iBAAiB,KAAK,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC;IAChD,cAAc,MAAM;IACpB,iBAAiB,IAAI,SAAS,GAAG,KAAK,GAAG,MAAM,CAAC;IAChD,iBAAiB,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD,iBAAiB,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,UAAU,GAAG,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC;IAC9E,cAAc;IACd,UAAU;AACV;IACA,SAAS,KAAK,CAAC,GAAG,EAAE,CAAC;IACrB,SAAS,MAAM,GAAG,QAAQ,CAAC;IAC3B,SAAS,OAAO,KAAK;IACrB,MAAM;AACN;IACA,KAAK,SAAS,YAAY,EAAE,GAAG,EAAE;IACjC,SAAS,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;IAC/B,aAAa,OAAO,WAAW,CAAC,GAAS,CAAC;IAC1C,UAAU;AACV;IACA,SAAS,IAAI,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,SAAS,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;IAC7C,aAAa,OAAO,WAAW,CAAC,GAAS,CAAC;IAC1C,UAAU;AACV;IACA,SAAS,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7D,aAAa,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACnF,iBAAiB,OAAO,WAAW,CAAC,GAAS,CAAC;IAC9C,cAAc;IACd,UAAU;AACV;IACA,SAAS,OAAO,GAAG;IACnB,MAAM;AACN;IACA,KAAK,SAAS,cAAc,EAAE,KAAK,EAAE;IACrC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACxC,aAAa,MAAM,SAAS,CAAC,wCAAwC,CAAC;IACtE,UAAU;AACV;IACA,SAAS,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3B;IACA,SAAS,IAAI,QAAQ,GAAG,MAAM,CAAC;IAC/B,SAAS,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;AAC/B;IACA,SAAS,IAAI,OAAO,GAAG,EAAE,CAAC;IAC1B,SAAS,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChD,aAAa,IAAI,cAAc,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACtE,aAAa,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,KAAK,SAAS,IAAI,cAAc,GAAG,MAAM,CAAC,CAAC;IACpF,UAAU;AACV;IACA,SAAS,IAAI,KAAK,CAAC;IACnB,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;IACnC,aAAa,KAAK,GAAG,IAAI,CAAC;IAC1B,UAAU,MAAM;IAChB,aAAa,IAAI,GAAG,KAAK,EAAE,EAAE;IAC7B,iBAAiB,IAAI,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpD,iBAAiB,KAAK,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC;IAChD,cAAc,MAAM;IACpB,iBAAiB,IAAI,SAAS,GAAG,KAAK,GAAG,MAAM,CAAC;IAChD,iBAAiB,IAAI,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5D,iBAAiB,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,YAAY,GAAG,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC;IAChF,cAAc;IACd,UAAU;AACV;IACA,SAAS,KAAK,CAAC,GAAG,EAAE,CAAC;IACrB,SAAS,MAAM,GAAG,QAAQ,CAAC;IAC3B,SAAS,OAAO,KAAK;IACrB,MAAM;IACN,EAAE,CAAC;AACH;IACA,CAAC,IAAI,KAAK,GAAG;IACb,KAAK,KAAK,EAAE,KAAK;IACjB,KAAK,SAAS,EAAE,SAAS;IACzB,EAAE,CAAC;AACH;IACA,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC;AACjB;IACA,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;AACf;IACA,CAAC,OAAO,GAAG,CAAC;AACZ;IACA,CAAC,EAAE,EAAA;;;IC7qDH;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;AACA;AACA;IACA;IACA;IACA,IAAI,SAAS,GAAG,IAAI;AACpB;IACA;IACA;IACA,EAAE,UAAU,GAAG,GAAG;AAClB;IACA;IACA,EAAE,QAAQ,GAAG,kBAAkB;AAC/B;IACA;IACA,EAAE,IAAI,GAAG,ogCAAogC;AAC7gC;IACA;IACA,EAAE,EAAE,GAAG,ogCAAogC;AAC3gC;AACA;IACA;IACA,EAAE,QAAQ,GAAG;AACb;IACA;IACA;AACA;IACA;IACA;IACA,IAAI,SAAS,EAAE,EAAE;AACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,QAAQ,EAAE,CAAC;AACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,EAAE,CAAC;AACb;IACA;IACA;IACA,IAAI,QAAQ,EAAE,CAAC,CAAC;AAChB;IACA;IACA;IACA,IAAI,QAAQ,GAAG,EAAE;AACjB;IACA;IACA;IACA,IAAI,IAAI,EAAE,CAAC,SAAS;AACpB;IACA;IACA;IACA,IAAI,IAAI,EAAE,SAAS;AACnB;IACA;IACA,IAAI,MAAM,EAAE,KAAK;IACjB,GAAG;AACH;AACA;IACA;AACA;AACA;IACA,EAAE,OAAO,EAAE,QAAQ;IACnB,EAAE,QAAQ,GAAG,IAAI;AACjB;IACA,EAAE,YAAY,GAAG,iBAAiB;IAClC,EAAE,eAAe,GAAG,YAAY,GAAG,oBAAoB;IACvD,EAAE,sBAAsB,GAAG,YAAY,GAAG,0BAA0B;IACpE,EAAE,iBAAiB,GAAG,YAAY,GAAG,oBAAoB;IACzD,EAAE,GAAG,GAAG,kBAAkB;AAC1B;IACA,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK;IACxB,EAAE,OAAO,GAAG,IAAI,CAAC,GAAG;AACpB;IACA,EAAE,QAAQ,GAAG,4CAA4C;IACzD,EAAE,KAAK,GAAG,wDAAwD;IAClE,EAAE,OAAO,GAAG,+CAA+C;IAC3D,EAAE,SAAS,GAAG,oCAAoC;AAClD;IACA,EAAE,IAAI,GAAG,GAAG;IACZ,EAAE,QAAQ,GAAG,CAAC;IACd,EAAE,gBAAgB,GAAG,gBAAgB;AACrC;IACA,EAAE,cAAc,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;IAClC,EAAE,YAAY,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC;AAC9B;IACA;IACA,EAAE,CAAC,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC;AAC3B;AACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,GAAG,YAAY;IACtC,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACvB,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,IAAI,GAAG,YAAY;IACrB,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;IAC5C,EAAE,IAAI,CAAC;IACP,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;IACzB,EAAE,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,EAAE,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;IACtD,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IACpC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;IACpB,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;IACrC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb;IACA;IACA,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE;IAClB,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrF,GAAG;AACH;IACA;IACA,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5D;IACA;IACA,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC;AAC3B;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACtD;IACA,EAAE,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,EAAE,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;AAClB;IACA;IACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACrD,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAChE,GAAG;AACH;IACA;IACA,EAAE,OAAO,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,YAAY;IAC/B,EAAE,IAAI,EAAE,EAAE,EAAE;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACjC;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzD,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9E,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IAClC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO;IAC5C,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACtD,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC;IACA;IACA;IACA,EAAE,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAClC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACZ;IACA;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;IAC1E,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1B;IACA;IACA,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7D;IACA,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACpB,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IACnB,KAAK,MAAM;IACX,MAAM,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7C,KAAK;AACL;IACA,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACd,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/B,GAAG;AACH;IACA,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;AAChC;IACA;IACA;IACA,EAAE,SAAS;IACX,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACtE;IACA;IACA,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IACrF,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AAClC;IACA;IACA;IACA,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,EAAE;AAC9C;IACA;IACA;IACA,QAAQ,IAAI,CAAC,GAAG,EAAE;IAClB,UAAU,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC;IACA,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACzC,YAAY,CAAC,GAAG,CAAC,CAAC;IAClB,YAAY,MAAM;IAClB,WAAW;IACX,SAAS;AACT;IACA,QAAQ,EAAE,IAAI,CAAC,CAAC;IAChB,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,OAAO,MAAM;AACb;IACA;IACA;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;AACvD;IACA;IACA,UAAU,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,SAAS;AACT;IACA,QAAQ,MAAM;IACd,OAAO;IACP,KAAK;IACL,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE,GAAG,YAAY;IACrC,EAAE,IAAI,CAAC;IACP,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IACd,IAAI,CAAC,GAAG,GAAG,CAAC;AACZ;IACA,EAAE,IAAI,CAAC,EAAE;IACT,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACrB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,QAAQ,CAAC;AACtD;IACA;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,IAAI,IAAI,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;IAC5C,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACrB,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IACnC,EAAE,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,kBAAkB,GAAG,CAAC,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;IACjD,EAAE,IAAI,CAAC,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;IACzB,EAAE,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClF,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE;IAC/B,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,KAAK,GAAG,YAAY;IACtB,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE;IACpC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,oBAAoB,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IAC9C,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IAC1C,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;IACvB,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACxD,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,GAAG,CAAC;AAC7B;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAClD,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACnB;IACA;IACA;AACA;IACA;IACA;IACA,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE;IAChB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC;IACvC,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,CAAC,GAAG,8BAA8B,CAAC;IACvC,GAAG;AACH;IACA,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC3D;IACA;IACA,EAAE,IAAI,OAAO;IACb,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACrB,EAAE,OAAO,CAAC,EAAE,GAAG;IACf,IAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,GAAG;AACH;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IACxC,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;IACpB,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACtD;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAClD,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACnB;IACA,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE;IACf,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC1C,GAAG,MAAM;AACT;IACA;IACA;IACA;AACA;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC1C;IACA;IACA,IAAI,IAAI,OAAO;IACf,MAAM,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;IACtB,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC;IACxB,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACzB,IAAI,OAAO,CAAC,EAAE,GAAG;IACjB,MAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,KAAK;IACL,GAAG;AACH;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,iBAAiB,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IAC3C,EAAE,IAAI,EAAE,EAAE,EAAE;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC7E,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IACvC,EAAE,IAAI,MAAM;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACtB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS;IACvB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;AACvB;IACA,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAChB,IAAI,OAAO,CAAC,KAAK,CAAC;IAClB;IACA,QAAQ,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;IACrD;IACA,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,GAAG;AACH;IACA,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5D;IACA;AACA;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IACf,EAAE,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9C;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,uBAAuB,GAAG,CAAC,CAAC,KAAK,GAAG,YAAY;IAClD,EAAE,IAAI,EAAE,EAAE,EAAE;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACnD,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACxC;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAC5D,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzC;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;IAClB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;IAChB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,qBAAqB,GAAG,CAAC,CAAC,KAAK,GAAG,YAAY;IAChD,EAAE,IAAI,EAAE,EAAE,EAAE;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACtD;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAChE,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxC;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;IAClB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;IAChB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,wBAAwB,GAAG,CAAC,CAAC,KAAK,GAAG,YAAY;IACnD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;IACtB,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAChF;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACf;IACA,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AACnF;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;IACA,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3D;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACb;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IACrC,EAAE,IAAI,MAAM,EAAE,CAAC;IACf,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;AACrB;IACA,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAChB;IACA;IACA,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;IACjB,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClD,MAAM,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,MAAM,OAAO,MAAM,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,GAAG;AACH;IACA;AACA;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACjE;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IACxC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE;IACnC,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS;IACvB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;AACvB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE;IACrB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,IAAI,IAAI,EAAE,GAAG,CAAC,IAAI,YAAY,EAAE;IAChC,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7C,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM,OAAO,CAAC,CAAC;IACf,KAAK;IACL,GAAG,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;IACzB,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,GAAG,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,YAAY,EAAE;IACtD,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACd,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;IACjC,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA;AACA;IACA;IACA;IACA;AACA;IACA,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C;IACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;IAChC,EAAE,CAAC,GAAG,CAAC,CAAC;IACR,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,EAAE,EAAE,GAAG,CAAC,CAAC;AACT;IACA;IACA,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG;IACpB,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC;IACA,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;IAClE,GAAG;AACH;IACA,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,QAAQ,GAAG,YAAY;IACzB,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,YAAY;IACpC,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACtE,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,KAAK,GAAG,YAAY;IACtB,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,GAAG,YAAY;IACrC,EAAE,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,GAAG,YAAY;IACrC,EAAE,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,MAAM,GAAG,YAAY;IACvB,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE;IACjC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IAC3C,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,IAAI,EAAE;IACtC,EAAE,IAAI,QAAQ,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;IAClD,IAAI,GAAG,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,GAAG,CAAC,WAAW;IAC1B,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS;IACvB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ;IACtB,IAAI,KAAK,GAAG,CAAC,CAAC;AACd;IACA;IACA,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;IACpB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,GAAG,MAAM;IACT,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACf;IACA;IACA,IAAI,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACtE;IACA,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3B,GAAG;AACH;IACA,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACZ;IACA;IACA,EAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAC7C,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5E,GAAG;AACH;IACA;IACA;IACA,EAAE,IAAI,QAAQ,EAAE;IAChB,IAAI,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;IACtB,MAAM,GAAG,GAAG,IAAI,CAAC;IACjB,KAAK,MAAM;IACX,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAC5C,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;IACpB,KAAK;IACL,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;IACnB,EAAE,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;IAClB,EAAE,GAAG,GAAG,gBAAgB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAClC,EAAE,WAAW,GAAG,QAAQ,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC/E;IACA;IACA,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;AAC5C;IACA,IAAI,GAAG;IACP,MAAM,EAAE,IAAI,EAAE,CAAC;IACf,MAAM,GAAG,GAAG,gBAAgB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACtC,MAAM,WAAW,GAAG,QAAQ,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACnF,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1C;IACA,MAAM,IAAI,CAAC,GAAG,EAAE;AAChB;IACA;IACA,QAAQ,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;IACnE,UAAU,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,SAAS;AACT;IACA,QAAQ,MAAM;IACd,OAAO;IACP,KAAK,QAAQ,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE;IACpD,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IAC/B,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE;IAClD,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AACpB;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACxC;IACA;IACA,SAAS,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B;IACA;IACA;IACA;IACA,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AACpD;IACA,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;IAClB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrB,GAAG;AACH;IACA,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;AACrB;IACA;IACA,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACxB;IACA;IACA,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;IACA;IACA,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACpC;IACA;IACA;IACA,SAAS,OAAO,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C;IACA,IAAI,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9C,GAAG;AACH;IACA;AACA;IACA;IACA,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;IAChC,EAAE,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;AACjC;IACA,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;IAClB,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACb;IACA;IACA,EAAE,IAAI,CAAC,EAAE;IACT,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB;IACA,IAAI,IAAI,IAAI,EAAE;IACd,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACb,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IACtB,KAAK,MAAM;IACX,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IACtB,KAAK;AACL;IACA;IACA;IACA;IACA,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACpD;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;IACf,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACnB,KAAK;AACL;IACA;IACA,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IAChB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;AAChB;IACA;IACA,GAAG,MAAM;AACT;IACA;AACA;IACA,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IACpB,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;IACnB,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;AACtB;IACA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC9B,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;IAC1B,QAAQ,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,QAAQ,MAAM;IACd,OAAO;IACP,KAAK;AACL;IACA,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,GAAG;AACH;IACA,EAAE,IAAI,IAAI,EAAE;IACZ,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,GAAG;AACH;IACA,EAAE,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;AAClB;IACA;IACA;IACA,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AACtD;IACA;IACA,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG;AAC9B;IACA,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE;IACzB,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IACxD,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACd,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB,GAAG;AACH;IACA;IACA,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AACpC;IACA;IACA,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;AACtC;IACA;IACA,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD;IACA,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACX,EAAE,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC;IACA,EAAE,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IAChC,EAAE,IAAI,CAAC;IACP,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3D;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9B,IAAI,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChE,GAAG;AACH;IACA;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA,EAAE,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;AACxB;IACA;IACA;IACA,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACf,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACxC,GAAG;AACH;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjB;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,GAAG,YAAY;IAC3C,EAAE,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,EAAE,GAAG,YAAY;IACxC,EAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,YAAY;IAChC,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IAC9B,EAAE,IAAI,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC5C,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AACpB;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACxC;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAC9D;IACA,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;IAClB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG;AACH;IACA,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;AACrB;IACA;IACA,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACxB;IACA;IACA;IACA,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC;IACA,IAAI,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9C,GAAG;AACH;IACA;AACA;IACA;IACA,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;IAChC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;AAChC;IACA,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;IAClB,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACZ;IACA;IACA,EAAE,IAAI,CAAC,EAAE;AACT;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;IACf,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACb,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IACtB,KAAK,MAAM;IACX,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IACtB,KAAK;AACL;IACA;IACA,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;IACjC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACpC;IACA,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE;IACjB,MAAM,CAAC,GAAG,GAAG,CAAC;IACd,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACnB,KAAK;AACL;IACA;IACA,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IAChB,IAAI,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IAChB,GAAG;AACH;IACA,EAAE,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;AAChB;IACA;IACA,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;IACnB,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,GAAG;AACH;IACA;IACA,EAAE,KAAK,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG;IACtB,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC;IACzD,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;IAClB,GAAG;AACH;IACA,EAAE,IAAI,KAAK,EAAE;IACb,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtB,IAAI,EAAE,CAAC,CAAC;IACR,GAAG;AACH;IACA;IACA;IACA,EAAE,KAAK,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AAClD;IACA,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACX,EAAE,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC;IACA,EAAE,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE;IAClC,EAAE,IAAI,CAAC;IACP,IAAI,CAAC,GAAG,IAAI,CAAC;AACb;IACA,EAAE,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;AACxF;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;IACX,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtC,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,KAAK,GAAG,YAAY;IACtB,EAAE,IAAI,CAAC,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,YAAY;IAC7B,EAAE,IAAI,EAAE,EAAE,EAAE;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzD,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5C;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,QAAQ,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,GAAG,YAAY;IACpC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;IACzB,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA;IACA,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9B,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA;IACA,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB;IACA;IACA;IACA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC5B,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;AAC1B;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC;IAC1C,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrB,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAClD;IACA,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACpB,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IACnB,KAAK,MAAM;IACX,MAAM,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7C,KAAK;AACL;IACA,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/B,GAAG;AACH;IACA,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;AAChC;IACA;IACA,EAAE,SAAS;IACX,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACnD;IACA;IACA,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IACrF,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AAClC;IACA;IACA;IACA,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,EAAE;AAC9C;IACA;IACA;IACA,QAAQ,IAAI,CAAC,GAAG,EAAE;IAClB,UAAU,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC;IACA,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAChC,YAAY,CAAC,GAAG,CAAC,CAAC;IAClB,YAAY,MAAM;IAClB,WAAW;IACX,SAAS;AACT;IACA,QAAQ,EAAE,IAAI,CAAC,CAAC;IAChB,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,OAAO,MAAM;AACb;IACA;IACA;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;AACvD;IACA;IACA,UAAU,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,SAAS;AACT;IACA,QAAQ,MAAM;IACd,OAAO;IACP,KAAK;IACL,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,YAAY;IAChC,EAAE,IAAI,EAAE,EAAE,EAAE;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3B,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACd,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACV,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AAClE;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9E,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IAC/B,EAAE,IAAI,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;IACxC,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7B;IACA,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb;IACA;IACA,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACtC;IACA,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AACtE;IACA;IACA;IACA,QAAQ,GAAG;AACX;IACA;IACA;IACA,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,GAAG;AACH;IACA,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;IAC5D,EAAE,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;IAClB,EAAE,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;AAClB;IACA;IACA,EAAE,IAAI,GAAG,GAAG,GAAG,EAAE;IACjB,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,EAAE,GAAG,GAAG,CAAC;IACb,IAAI,GAAG,GAAG,GAAG,CAAC;IACd,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,GAAG;AACH;IACA;IACA,EAAE,CAAC,GAAG,EAAE,CAAC;IACT,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;IACjB,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B;IACA;IACA,EAAE,KAAK,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG;IAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAC9B,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAC/C,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IAC5B,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IAC3B,KAAK;AACL;IACA,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC;IACrC,GAAG;AACH;IACA;IACA,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AAC5B;IACA,EAAE,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC;IACjB,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;AACjB;IACA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACV,EAAE,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC;IACA,EAAE,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACnE,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,QAAQ,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IAC/B,EAAE,OAAO,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,IAAI,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IAC/C,EAAE,IAAI,CAAC,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;AAC9B;IACA,EAAE,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAChC;IACA,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACxC,OAAO,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,aAAa,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IACpC,EAAE,IAAI,GAAG;IACT,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;IACrB,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAClC,GAAG,MAAM;IACT,IAAI,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAClC;IACA,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1C,SAAS,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B;IACA,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC1C,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACpD,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IAC9B,EAAE,IAAI,GAAG,EAAE,CAAC;IACZ,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;IACrB,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;IAC5B,GAAG,MAAM;IACT,IAAI,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAClC;IACA,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1C,SAAS,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B;IACA,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IAChD,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,GAAG;AACH;IACA;IACA;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACpD,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE;IAC/B,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;IAC9C,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9B;IACA,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACxB;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACnB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACvC,EAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;IACnB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD;IACA,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;AACpB;IACA;IACA,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1B,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;IACjE,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC1C,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;IACnB,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;AAChD;IACA,EAAE,UAAU;IACZ,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM;IACjC,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,GAAG;AACH;IACA,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB;IACA;IACA,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;IACtF,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5B;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IAC9C,EAAE,OAAO,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE,EAAE,EAAE;IAC/B,EAAE,IAAI,CAAC,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;IACA,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;AACjB;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACvB;IACA,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvB,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;IACvB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACzB,KAAK,MAAM;IACX,MAAM,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,KAAK;AACL;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjC;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACd,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,MAAM,OAAO,CAAC,CAAC;IACf,KAAK;IACL,GAAG;AACH;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACd,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChB;IACA;IACA,GAAG,MAAM;IACT,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACd,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,QAAQ,GAAG,YAAY;IACzB,EAAE,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IAC9B,EAAE,OAAO,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;IACjC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IACxB,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3E;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;IACA,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACxB;IACA,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACtB,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;AACrB;IACA,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC1C;IACA;IACA,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;AAChC;IACA;IACA,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,gBAAgB,EAAE;IAC1E,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9D,GAAG;AACH;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACV;IACA;IACA,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;AACb;IACA;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACjD;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACjC;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;IACpD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACd,MAAM,OAAO,CAAC,CAAC;IACf,KAAK;IACL,GAAG;AACH;IACA;IACA;IACA;IACA;IACA,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACtB,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5B,MAAM,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClF,MAAM,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACzB;IACA;AACA;IACA;IACA,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACjF;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;IACnB,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1B;IACA;IACA;IACA;IACA;IACA,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;AACpC;IACA;IACA,EAAE,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACnE;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;AACX;IACA;IACA,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B;IACA;IACA;IACA,IAAI,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IAC1C,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAClB;IACA;IACA,MAAM,CAAC,GAAG,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzF;IACA;IACA,MAAM,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;IACnE,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,OAAO;IACP,KAAK;IACL,GAAG;AACH;IACA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACV,EAAE,QAAQ,GAAG,IAAI,CAAC;IAClB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,WAAW,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IAClC,EAAE,IAAI,GAAG;IACT,IAAI,CAAC,GAAG,IAAI;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;IACrB,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1E,GAAG,MAAM;IACT,IAAI,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAClC;IACA,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1C,SAAS,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B;IACA,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACnE,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACpD,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC,IAAI,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IACnD,EAAE,IAAI,CAAC,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;IACrB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACxB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvB,GAAG,MAAM;IACT,IAAI,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAClC;IACA,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1C,SAAS,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,GAAG;AACH;IACA,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,QAAQ,GAAG,YAAY;IACzB,EAAE,IAAI,CAAC,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1E;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACpD,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,YAAY;IACpC,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC;AACF;AACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,GAAG,YAAY;IACnC,EAAE,IAAI,CAAC,GAAG,IAAI;IACd,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1E;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACrC,CAAC,CAAC;AACF;AACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA,SAAS,cAAc,CAAC,CAAC,EAAE;IAC3B,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACd,IAAI,eAAe,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC;IAClC,IAAI,GAAG,GAAG,EAAE;IACZ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACb;IACA,EAAE,IAAI,eAAe,GAAG,CAAC,EAAE;IAC3B,IAAI,GAAG,IAAI,CAAC,CAAC;IACb,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACrB,MAAM,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC;IAC/B,MAAM,IAAI,CAAC,EAAE,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;IACrC,MAAM,GAAG,IAAI,EAAE,CAAC;IAChB,KAAK;AACL;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC;IAC7B,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;IACnC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE;IACtB,IAAI,OAAO,GAAG,CAAC;IACf,GAAG;AACH;IACA;IACA,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AAChC;IACA,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC;IACjB,CAAC;AACD;AACA;IACA,SAAS,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;IACjC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE;IACvC,IAAI,MAAM,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;IACrC,GAAG;IACH,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE;IAClD,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AACnB;IACA;IACA,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;AACvC;IACA;IACA,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE;IACf,IAAI,CAAC,IAAI,QAAQ,CAAC;IAClB,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,GAAG,MAAM;IACT,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC;IACvC,IAAI,CAAC,IAAI,QAAQ,CAAC;IAClB,GAAG;AACH;IACA;IACA;IACA;IACA,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;IAChC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB;IACA,EAAE,IAAI,SAAS,IAAI,IAAI,EAAE;IACzB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;IACf,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;IACpC,WAAW,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACxC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE,IAAI,CAAC,CAAC;IACnF,KAAK,MAAM;IACX,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IAC7D,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC3D,UAAU,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;IACrE,KAAK;IACL,GAAG,MAAM;IACT,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;IACf,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;IACrC,WAAW,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;IACzC,WAAW,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACxC,MAAM,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC;IACpF,KAAK,MAAM;IACX,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC;IAC/C,MAAM,CAAC,CAAC,SAAS,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IAC/C,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7D,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA;IACA;IACA,SAAS,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE;IAC3C,EAAE,IAAI,CAAC;IACP,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;IACb,IAAI,IAAI;IACR,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;AACtB;IACA,EAAE,OAAO,CAAC,GAAG,IAAI,GAAG;IACpB,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC;IACzD,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE;IAChC,QAAQ,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAClD,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;IAC3C,QAAQ,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;IAC1B,OAAO;IACP,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE;IACzB,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAChB;IACA,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC;AAC3B;IACA;IACA;AACA;IACA;IACA,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACnB,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE;IAChB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC;IACvC,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,CAAC,GAAG,8BAA8B,CAAC;IACvC,GAAG;AACH;IACA,EAAE,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;AACtB;IACA,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD;IACA;IACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG;IACxB,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzD,GAAG;AACH;IACA,EAAE,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;AACtB;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA;IACA;IACA,IAAI,MAAM,GAAG,CAAC,YAAY;AAC1B;IACA;IACA,EAAE,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IACvC,IAAI,IAAI,IAAI;IACZ,MAAM,KAAK,GAAG,CAAC;IACf,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;AACnB;IACA,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG;IAC9B,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;IAC7B,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;IAC9B,KAAK;AACL;IACA,IAAI,IAAI,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC;IACA,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA,EAAE,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IACjC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;AACb;IACA,IAAI,IAAI,EAAE,IAAI,EAAE,EAAE;IAClB,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,KAAK,MAAM;IACX,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IACnC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IAC1B,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,UAAU,MAAM;IAChB,SAAS;IACT,OAAO;IACP,KAAK;AACL;IACA,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA,EAAE,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE;IACpC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd;IACA;IACA,IAAI,OAAO,EAAE,EAAE,GAAG;IAClB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACvC,KAAK;AACL;IACA;IACA,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7C,GAAG;AACH;IACA,EAAE,OAAO,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;IAC3C,IAAI,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;IAC5F,MAAM,EAAE,EAAE,EAAE;IACZ,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW;IAC1B,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IACd,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACf;IACA;IACA,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACxC;IACA,MAAM,OAAO,IAAI,IAAI;IACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG;AAC/D;IACA;IACA,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;IACvD,KAAK;AACL;IACA,IAAI,IAAI,IAAI,EAAE;IACd,MAAM,OAAO,GAAG,CAAC,CAAC;IAClB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,KAAK,MAAM;IACX,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,MAAM,OAAO,GAAG,QAAQ,CAAC;IACzB,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;IAC9D,KAAK;AACL;IACA,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;IACnB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;IACnB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAClB;IACA;IACA;IACA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5C;IACA,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAClC;IACA,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;IACpB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACzB,KAAK,MAAM,IAAI,EAAE,EAAE;IACnB,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChC,KAAK,MAAM;IACX,MAAM,EAAE,GAAG,EAAE,CAAC;IACd,KAAK;AACL;IACA,IAAI,IAAI,EAAE,GAAG,CAAC,EAAE;IAChB,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjB,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,KAAK,MAAM;AACX;IACA;IACA,MAAM,EAAE,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,MAAM,CAAC,GAAG,CAAC,CAAC;AACZ;IACA;IACA,MAAM,IAAI,EAAE,IAAI,CAAC,EAAE;IACnB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB,QAAQ,EAAE,EAAE,CAAC;AACb;IACA;IACA,QAAQ,OAAO,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;IAC3C,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACtC,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACzB,SAAS;AACT;IACA,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3B;IACA;IACA,OAAO,MAAM;AACb;IACA;IACA,QAAQ,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC;IACA,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;IACnB,UAAU,EAAE,GAAG,eAAe,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5C,UAAU,EAAE,GAAG,eAAe,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5C,UAAU,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;IACzB,UAAU,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;IACzB,SAAS;AACT;IACA,QAAQ,EAAE,GAAG,EAAE,CAAC;IAChB,QAAQ,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9B,QAAQ,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B;IACA;IACA,QAAQ,OAAO,IAAI,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AAC3C;IACA,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;IACxB,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtB,QAAQ,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACpB;IACA,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC;AACrC;IACA,QAAQ,GAAG;IACX,UAAU,CAAC,GAAG,CAAC,CAAC;AAChB;IACA;IACA,UAAU,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AAC3C;IACA;IACA,UAAU,IAAI,GAAG,GAAG,CAAC,EAAE;AACvB;IACA;IACA,YAAY,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,YAAY,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D;IACA;IACA,YAAY,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE;IACvB,cAAc,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;AAC1C;IACA;IACA,cAAc,IAAI,GAAG,eAAe,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAClD,cAAc,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAClC,cAAc,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;AAChC;IACA;IACA,cAAc,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACpD;IACA;IACA,cAAc,IAAI,GAAG,IAAI,CAAC,EAAE;IAC5B,gBAAgB,CAAC,EAAE,CAAC;AACpB;IACA;IACA,gBAAgB,QAAQ,CAAC,IAAI,EAAE,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAClE,eAAe;IACf,aAAa,MAAM;AACnB;IACA;IACA;IACA;IACA,cAAc,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACtC,cAAc,IAAI,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;IAChC,aAAa;AACb;IACA,YAAY,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAChC,YAAY,IAAI,KAAK,GAAG,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C;IACA;IACA,YAAY,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5C;IACA;IACA,YAAY,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE;IAC3B,cAAc,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;AAChC;IACA;IACA,cAAc,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AAC/C;IACA;IACA,cAAc,IAAI,GAAG,GAAG,CAAC,EAAE;IAC3B,gBAAgB,CAAC,EAAE,CAAC;AACpB;IACA;IACA,gBAAgB,QAAQ,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/D,eAAe;IACf,aAAa;AACb;IACA,YAAY,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;IAC9B,WAAW,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE;IAChC,YAAY,CAAC,EAAE,CAAC;IAChB,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,WAAW;AACX;IACA;IACA,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACtB;IACA;IACA,UAAU,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;IAC7B,YAAY,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACtC,WAAW,MAAM;IACjB,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,YAAY,IAAI,GAAG,CAAC,CAAC;IACrB,WAAW;AACX;IACA,SAAS,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE;AAC3D;IACA,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;IACjC,OAAO;AACP;IACA;IACA,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC;IAC7B,KAAK;AACL;IACA;IACA,IAAI,IAAI,OAAO,IAAI,CAAC,EAAE;IACtB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACd,MAAM,OAAO,GAAG,IAAI,CAAC;IACrB,KAAK,MAAM;AACX;IACA;IACA,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;IACnD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;AAChC;IACA,MAAM,QAAQ,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpD,KAAK;AACL;IACA,IAAI,OAAO,CAAC,CAAC;IACb,GAAG,CAAC;IACJ,CAAC,GAAG,CAAC;AACL;AACA;IACA;IACA;IACA;IACA;IACA,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE;IAC3C,EAAE,IAAI,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG;IAC9C,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACzB;IACA;IACA,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE;IACvB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb;IACA;IACA,IAAI,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;AACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,KAAK,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;IAC3D,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC;AACpB;IACA;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;IACf,MAAM,CAAC,IAAI,QAAQ,CAAC;IACpB,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACtB;IACA;IACA,MAAM,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACpD,KAAK,MAAM;IACX,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC;IAC1C,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IACpB,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE;IACpB,QAAQ,IAAI,WAAW,EAAE;AACzB;IACA;IACA,UAAU,OAAO,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACrB,UAAU,MAAM,GAAG,CAAC,CAAC;IACrB,UAAU,CAAC,IAAI,QAAQ,CAAC;IACxB,UAAU,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;IAC/B,SAAS,MAAM;IACf,UAAU,MAAM,GAAG,CAAC;IACpB,SAAS;IACT,OAAO,MAAM;IACb,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AACxB;IACA;IACA,QAAQ,KAAK,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;AACpD;IACA;IACA,QAAQ,CAAC,IAAI,QAAQ,CAAC;AACtB;IACA;IACA;IACA,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,MAAM,CAAC;AAClC;IACA;IACA,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAClE,OAAO;IACP,KAAK;AACL;IACA;IACA,IAAI,WAAW,GAAG,WAAW,IAAI,EAAE,GAAG,CAAC;IACvC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9E;IACA;IACA;IACA;AACA;IACA,IAAI,OAAO,GAAG,EAAE,GAAG,CAAC;IACpB,QAAQ,CAAC,EAAE,IAAI,WAAW,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACnE,QAAQ,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,WAAW,IAAI,EAAE,IAAI,CAAC;AAC/D;IACA;IACA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;IAClF,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;IACA,IAAI,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAC1B,MAAM,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;IACpB,MAAM,IAAI,OAAO,EAAE;AACnB;IACA;IACA,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB;IACA;IACA,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC,QAAQ,GAAG,EAAE,GAAG,QAAQ,IAAI,QAAQ,CAAC,CAAC;IACnE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IACvB,OAAO,MAAM;AACb;IACA;IACA,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,OAAO;AACP;IACA,MAAM,OAAO,CAAC,CAAC;IACf,KAAK;AACL;IACA;IACA,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;IAChB,MAAM,EAAE,CAAC,MAAM,GAAG,GAAG,CAAC;IACtB,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,GAAG,EAAE,CAAC;IACZ,KAAK,MAAM;IACX,MAAM,EAAE,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;IAC1B,MAAM,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;AACpC;IACA;IACA;IACA,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnF,KAAK;AACL;IACA,IAAI,IAAI,OAAO,EAAE;IACjB,MAAM,SAAS;AACf;IACA;IACA,QAAQ,IAAI,GAAG,IAAI,CAAC,EAAE;AACtB;IACA;IACA,UAAU,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;IACvD,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACzB,UAAU,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;AAC5C;IACA;IACA,UAAU,IAAI,CAAC,IAAI,CAAC,EAAE;IACtB,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;IAClB,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzC,WAAW;AACX;IACA,UAAU,MAAM;IAChB,SAAS,MAAM;IACf,UAAU,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvB,UAAU,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,MAAM;IACrC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IACxB,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,SAAS;IACT,OAAO;IACP,KAAK;AACL;IACA;IACA,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACjD,GAAG;AACH;IACA,EAAE,IAAI,QAAQ,EAAE;AAChB;IACA;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AACzB;IACA;IACA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACjB,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAChB;IACA;IACA,KAAK,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AAChC;IACA;IACA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACd,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB;IACA,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA,SAAS,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IACtC,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACjD,EAAE,IAAI,CAAC;IACP,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AACrB;IACA,EAAE,IAAI,KAAK,EAAE;IACb,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IAClC,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IAClE,KAAK,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE;IACxB,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C,KAAK;AACL;IACA,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7C,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;IACpB,IAAI,GAAG,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAC7C,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;IAC1D,GAAG,MAAM,IAAI,CAAC,IAAI,GAAG,EAAE;IACvB,IAAI,GAAG,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACtC,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IACvE,GAAG,MAAM;IACT,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtE,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IAClC,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC;IACpC,MAAM,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;IAC9B,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;AACA;IACA;IACA,SAAS,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE;IACtC,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACpB;IACA;IACA,EAAE,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;IAC7C,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA,SAAS,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;IAC/B,EAAE,IAAI,EAAE,GAAG,cAAc,EAAE;AAC3B;IACA;IACA,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAChC,IAAI,MAAM,KAAK,CAAC,sBAAsB,CAAC,CAAC;IACxC,GAAG;IACH,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;AACD;AACA;IACA,SAAS,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;IAC7B,EAAE,IAAI,EAAE,GAAG,YAAY,EAAE,MAAM,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC7D,EAAE,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;AACD;AACA;IACA,SAAS,YAAY,CAAC,MAAM,EAAE;IAC9B,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;IAC3B,IAAI,GAAG,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;AAC3B;IACA,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAChB;IACA;IACA,EAAE,IAAI,CAAC,EAAE;AACT;IACA;IACA,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC;AACvC;IACA;IACA,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC;IAChD,GAAG;AACH;IACA,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;AACA;IACA,SAAS,aAAa,CAAC,CAAC,EAAE;IAC1B,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;IACd,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;IACzB,EAAE,OAAO,EAAE,CAAC;IACZ,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;IAChC,EAAE,IAAI,WAAW;IACjB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;AACnB;IACA;IACA;IACA,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;AACrC;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA,EAAE,SAAS;IACX,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;IACf,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC;IAC/C,KAAK;AACL;IACA,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AACjB;IACA;IACA,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACzB,MAAM,IAAI,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,MAAM,MAAM;IACZ,KAAK;AACL;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnB,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;AACD;AACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpC,EAAE,IAAI,CAAC;IACP,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,CAAC,GAAG,CAAC,CAAC;AACV;IACA,EAAE,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG;IAC7B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACd,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,MAAM;IACZ,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3B,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE;IACnC,EAAE,IAAI,WAAW,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG;IAC7C,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ;IACtB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AACxB;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE;AACnC;IACA,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;IACzC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,GAAG;AACH;IACA,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE;IAClB,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,GAAG,MAAM;IACT,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,GAAG;AACH;IACA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;AACxB;IACA;IACA,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;AACnB;IACA;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnB,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,GAAG;AACH;IACA;IACA;IACA,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1D,EAAE,GAAG,IAAI,KAAK,CAAC;IACf,EAAE,WAAW,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AACvB;IACA,EAAE,SAAS;IACX,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzC,IAAI,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACnD;IACA,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IACnF,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,OAAO,CAAC,EAAE,EAAE,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzD;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,EAAE,IAAI,IAAI,EAAE;AACtB;IACA,QAAQ,IAAI,GAAG,GAAG,CAAC,IAAI,mBAAmB,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE;IACzE,UAAU,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,EAAE,CAAC;IACrC,UAAU,WAAW,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9C,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,UAAU,GAAG,EAAE,CAAC;IAChB,SAAS,MAAM;IACf,UAAU,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC;IACzE,SAAS;IACT,OAAO,MAAM;IACb,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAC5B,QAAQ,OAAO,GAAG,CAAC;IACnB,OAAO;IACP,KAAK;AACL;IACA,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,GAAG;IACH,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE;IACjC,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;IAChE,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,KAAK,GAAG,EAAE;IACd,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ;IACtB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AACxB;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;IACxE,IAAI,OAAO,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACzE,GAAG;AACH;IACA,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE;IAClB,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,GAAG,MAAM;IACT,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,GAAG;AACH;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,KAAK,CAAC;IAChC,EAAE,CAAC,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC;IACzB,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACnB;IACA,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE;AAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA,IAAI,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAC5D,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,MAAM,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACvB,MAAM,CAAC,EAAE,CAAC;IACV,KAAK;AACL;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACZ;IACA,IAAI,IAAI,EAAE,GAAG,CAAC,EAAE;IAChB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC7B,MAAM,CAAC,EAAE,CAAC;IACV,KAAK,MAAM;IACX,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,KAAK;IACL,GAAG,MAAM;AACT;IACA;IACA;IACA;IACA,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,IAAI,CAAC,GAAG,gBAAgB,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/E,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB;IACA,IAAI,OAAO,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACjE,GAAG;AACH;IACA;IACA,EAAE,EAAE,GAAG,CAAC,CAAC;AACT;IACA;IACA;IACA;IACA,EAAE,GAAG,GAAG,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC9D,EAAE,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACpC,EAAE,WAAW,GAAG,CAAC,CAAC;AAClB;IACA,EAAE,SAAS;IACX,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACtD,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACnE;IACA,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IACnF,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB;IACA;IACA;IACA,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5E,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,EAAE,IAAI,IAAI,EAAE;IACtB,QAAQ,IAAI,mBAAmB,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE;IAC9D,UAAU,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,KAAK,CAAC;IACxC,UAAU,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACtE,UAAU,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5C,UAAU,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC;IAChC,SAAS,MAAM;IACf,UAAU,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC;IACzE,SAAS;IACT,OAAO,MAAM;IACb,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAC5B,QAAQ,OAAO,GAAG,CAAC;IACnB,OAAO;IACP,KAAK;AACL;IACA,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,WAAW,IAAI,CAAC,CAAC;IACrB,GAAG;IACH,CAAC;AACD;AACA;IACA;IACA,SAAS,iBAAiB,CAAC,CAAC,EAAE;IAC9B;IACA,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA,SAASC,cAAY,CAAC,CAAC,EAAE,GAAG,EAAE;IAC9B,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;AAChB;IACA;IACA,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAC9D;IACA;IACA,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAClC;IACA;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;AACpB;IACA;IACA,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IACnB,GAAG;AACH;IACA;IACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7C;IACA;IACA,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAChE,EAAE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1B;IACA,EAAE,IAAI,GAAG,EAAE;IACX,IAAI,GAAG,IAAI,CAAC,CAAC;IACb,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACb;IACA;AACA;IACA;IACA;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC;IAC3B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC;AAC7B;IACA,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE;IACjB,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxC,MAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;IAC7E,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,MAAM,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;IAChC,KAAK,MAAM;IACX,MAAM,CAAC,IAAI,GAAG,CAAC;IACf,KAAK;AACL;IACA,IAAI,OAAO,CAAC,EAAE,GAAG,GAAG,IAAI,GAAG,CAAC;IAC5B,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB;IACA,IAAI,IAAI,QAAQ,EAAE;AAClB;IACA;IACA,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE;AACpC;IACA;IACA,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACnB,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAClB;IACA;IACA,OAAO,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE;AAC3C;IACA;IACA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClB;IACA,OAAO;IACP,KAAK;IACL,GAAG,MAAM;AACT;IACA;IACA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACZ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACd,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA;IACA;IACA,SAAS,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE;IAC5B,EAAE,IAAI,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACtD;IACA,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAC7B,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAC5C,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAOA,cAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACzD,GAAG,MAAM,IAAI,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,KAAK,EAAE;IAClD,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACzB,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACd,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACf,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG;IACxB,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;IAC5B,GAAG,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG;IAClC,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,GAAG,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG;IACjC,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,GAAG,MAAM;IACT,IAAI,MAAM,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;IACvC,GAAG;AACH;IACA;IACA,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB;IACA,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;IACb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,GAAG,MAAM;IACT,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvB,GAAG;AACH;IACA;IACA;IACA,EAAE,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvB,EAAE,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;IACnB,EAAE,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC;AACvB;IACA,EAAE,IAAI,OAAO,EAAE;IACf,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/B,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAChB;IACA;IACA,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD,GAAG;AACH;IACA,EAAE,EAAE,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;AACrB;IACA;IACA,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;IAC1C,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,EAAE,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACX,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,OAAO,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AAC/C;IACA;IACA,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;IACvB,EAAE,IAAI,CAAC;IACP,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACrB;IACA,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE;IACf,IAAI,OAAO,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,GAAG;AACH;IACA;IACA;IACA;AACA;IACA;IACA,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1B;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjC,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC;IACA;IACA,EAAE,IAAI,MAAM;IACZ,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;IACpB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC;IACtB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,EAAE,OAAO,CAAC,EAAE,GAAG;IACf,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE;IACnD,EAAK,IAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAClB,IACI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACxB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,EAAE;AACjC;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;IACnB,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;IACA,EAAE,SAAS;IACX,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACxD,IAAI,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACxD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;IACA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;IAC3B,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;IAC7C,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM;IACzB,KAAK;AACL;IACA,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;IAClB,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;IACvB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACZ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACrB,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE;IACnC,EAAE,IAAI,CAAC;IACP,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;IACnB,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACd;IACA,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;IACrB,IAAI,QAAQ,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACrB;IACA,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;IAClB,IAAI,QAAQ,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7B;IACA;IACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;IACvB,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,MAAM,OAAO,CAAC,CAAC;IACf,KAAK;AACL;IACA,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,cAAc,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE;IAC5C,EAAE,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;IAC7C,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW;IACxB,IAAI,KAAK,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC;AAC1B;IACA,EAAE,IAAI,KAAK,EAAE;IACb,IAAI,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAClC,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1C,SAAS,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,GAAG,MAAM;IACT,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACxB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvB,GAAG;AACH;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE;IACrB,IAAI,GAAG,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAC/B,GAAG,MAAM;IACT,IAAI,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACzB;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,IAAI,KAAK,EAAE;IACf,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,OAAO,IAAI,EAAE,EAAE;IACzB,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,OAAO,MAAM,IAAI,OAAO,IAAI,CAAC,EAAE;IAC/B,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,OAAO;IACP,KAAK,MAAM;IACX,MAAM,IAAI,GAAG,OAAO,CAAC;IACrB,KAAK;AACL;IACA;IACA;AACA;IACA;IACA,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;IAChB,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACjC,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACrD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACvB,KAAK;AACL;IACA,IAAI,EAAE,GAAG,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IACpC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;AACxB;IACA;IACA,IAAI,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;AACrC;IACA,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAChB,MAAM,GAAG,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;IACjC,KAAK,MAAM;IACX,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;IACjB,QAAQ,CAAC,EAAE,CAAC;IACZ,OAAO,MAAM;IACb,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACjB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,QAAQ,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC1C,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,QAAQ,OAAO,GAAG,OAAO,CAAC;IAC1B,OAAO;AACP;IACA;IACA,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IACnB,MAAM,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;AACjD;IACA,MAAM,OAAO,GAAG,EAAE,GAAG,CAAC;IACtB,UAAU,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,OAAO,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7E,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,OAAO,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;IAChF,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpC;IACA,MAAM,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC;AACrB;IACA,MAAM,IAAI,OAAO,EAAE;AACnB;IACA;IACA,QAAQ,OAAO,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG;IACvC,UAAU,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACrB,UAAU,IAAI,CAAC,EAAE,EAAE;IACnB,YAAY,EAAE,CAAC,CAAC;IAChB,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1B,WAAW;IACX,SAAS;IACT,OAAO;AACP;IACA;IACA,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACjD;IACA;IACA,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE;IACA;IACA,MAAM,IAAI,KAAK,EAAE;IACjB,QAAQ,IAAI,GAAG,GAAG,CAAC,EAAE;IACrB,UAAU,IAAI,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,CAAC,EAAE;IAC7C,YAAY,CAAC,GAAG,OAAO,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACtC,YAAY,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,CAAC;IACnD,YAAY,EAAE,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACjD,YAAY,KAAK,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACvD;IACA;IACA,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,WAAW,MAAM;IACjB,YAAY,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrD,WAAW;IACX,SAAS;AACT;IACA,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9C,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;IACxB,QAAQ,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACrC,QAAQ,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;IACzB,OAAO,MAAM;IACb,QAAQ,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC;IACxD,aAAa,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrE,OAAO;IACP,KAAK;AACL;IACA,IAAI,GAAG,GAAG,CAAC,OAAO,IAAI,EAAE,GAAG,IAAI,GAAG,OAAO,IAAI,CAAC,GAAG,IAAI,GAAG,OAAO,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,IAAI,GAAG,CAAC;IACxF,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACnC,CAAC;AACD;AACA;IACA;IACA,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE;IAC5B,EAAE,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;IACxB,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;IACrB,IAAI,OAAO,IAAI,CAAC;IAChB,GAAG;IACH,CAAC;AACD;AACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE;IAChB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;IACrB,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,EAAE,IAAI,CAAC;IACP,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS;IACvB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ;IACtB,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;AACjB;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACpB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACtB;IACA;IACA,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3B,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IACzD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACd;IACA;IACA,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;IACjC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACd;IACA;IACA,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;IACjC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACd;IACA;IACA,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IACtB,IAAI,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;IACzB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACxC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG;AACH;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,QAAQ,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;IAC5B,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,MAAM,CAAC,GAAG,EAAE;IACrB,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,MAAM,KAAK,CAAC,YAAY,GAAG,iBAAiB,CAAC,CAAC;IACrF,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IACb,IAAI,WAAW,GAAG,GAAG,CAAC,QAAQ,KAAK,IAAI;IACvC,IAAI,EAAE,GAAG;IACT,MAAM,WAAW,EAAE,CAAC,EAAE,UAAU;IAChC,MAAM,UAAU,EAAE,CAAC,EAAE,CAAC;IACtB,MAAM,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;IAC/B,MAAM,UAAU,EAAE,CAAC,EAAE,SAAS;IAC9B,MAAM,MAAM,EAAE,CAAC,EAAE,SAAS;IAC1B,MAAM,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC;IAC3B,MAAM,QAAQ,EAAE,CAAC,EAAE,CAAC;IACpB,KAAK,CAAC;AACN;IACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACrC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;IACjC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9E,WAAW,MAAM,KAAK,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;IACvD,KAAK;IACL,GAAG;AACH;IACA,EAAE,IAAI,CAAC,GAAG,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvD,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;IAC/B,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACzD,MAAM,IAAI,CAAC,EAAE;IACb,QAAQ,IAAI,OAAO,MAAM,IAAI,WAAW,IAAI,MAAM;IAClD,WAAW,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;IAC1D,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACzB,SAAS,MAAM;IACf,UAAU,MAAM,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACzC,SAAS;IACT,OAAO,MAAM;IACb,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACxB,OAAO;IACP,KAAK,MAAM;IACX,MAAM,MAAM,KAAK,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;IAClD,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,IAAI,CAAC;IACd,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE;IAChB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,GAAG,EAAE;IACpB,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,SAAS,OAAO,CAAC,CAAC,EAAE;IACtB,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IACf,MAAM,CAAC,GAAG,IAAI,CAAC;AACf;IACA;IACA,IAAI,IAAI,EAAE,CAAC,YAAY,OAAO,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;AACvD;IACA;IACA;IACA,IAAI,CAAC,CAAC,WAAW,GAAG,OAAO,CAAC;AAC5B;IACA;IACA,IAAI,IAAI,iBAAiB,CAAC,CAAC,CAAC,EAAE;IAC9B,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB;IACA,MAAM,IAAI,QAAQ,EAAE;IACpB,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE;AACxC;IACA;IACA,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpB,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACrB,SAAS,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE;AACvC;IACA;IACA,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAClB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,SAAS,MAAM;IACf,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5B,SAAS;IACT,OAAO,MAAM;IACb,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtC,OAAO;AACP;IACA,MAAM,OAAO;IACb,KAAK;AACL;IACA,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;AACjB;IACA,IAAI,IAAI,CAAC,KAAK,QAAQ,EAAE;IACxB,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE;IACnB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClB,QAAQ,OAAO;IACf,OAAO;AACP;IACA,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;IACjB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACf,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,OAAO,MAAM;IACb,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,OAAO;AACP;IACA;IACA,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IAChC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;AACjD;IACA,QAAQ,IAAI,QAAQ,EAAE;IACtB,UAAU,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE;IAChC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACtB,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACvB,WAAW,MAAM,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE;IACvC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,WAAW,MAAM;IACjB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,WAAW;IACX,SAAS,MAAM;IACf,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAClB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,SAAS;AACT;IACA,QAAQ,OAAO;AACf;IACA;IACA,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IAC9B,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAClB,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACnB,QAAQ,OAAO;IACf,OAAO;AACP;IACA,MAAM,OAAOA,cAAY,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3C;IACA,KAAK,MAAM,IAAI,CAAC,KAAK,QAAQ,EAAE;IAC/B,MAAM,MAAM,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;IACvC,KAAK;AACL;IACA;IACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;IACtC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACf,KAAK,MAAM;IACX;IACA,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACd,KAAK;AACL;IACA,IAAI,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAGA,cAAY,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrE,GAAG;AACH;IACA,EAAE,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;AACxB;IACA,EAAE,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;IACvB,EAAE,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;IACzB,EAAE,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;IACzB,EAAE,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;IAC1B,EAAE,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;IAC5B,EAAE,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC;IAC9B,EAAE,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC;IAC9B,EAAE,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC;IAC9B,EAAE,OAAO,CAAC,gBAAgB,GAAG,CAAC,CAAC;IAC/B,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACrB;IACA,EAAE,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC;IACxC,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,SAAS,GAAG,iBAAiB,CAAC;AACxC;IACA,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;IAClB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;IAC1B,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACxB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AACxB;IACA,EAAE,IAAI,GAAG,KAAK,KAAK,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC;IAC/B,EAAE,IAAI,GAAG,EAAE;IACX,IAAI,IAAI,GAAG,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC/B,MAAM,EAAE,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACjG,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACtB;IACA,EAAE,OAAO,OAAO,CAAC;IACjB,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE;IAChB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,QAAQ,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,GAAG;IACjB,EAAE,IAAI,CAAC,EAAE,CAAC;IACV,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;AACnB;IACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG;IACrC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACd,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE;IACf,QAAQ,QAAQ,GAAG,IAAI,CAAC;IACxB,QAAQ,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,OAAO;IACP,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,KAAK,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE;IACpB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,KAAK;IACL,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,iBAAiB,CAAC,GAAG,EAAE;IAChC,EAAE,OAAO,GAAG,YAAY,OAAO,IAAI,GAAG,IAAI,GAAG,CAAC,WAAW,KAAK,GAAG,IAAI,KAAK,CAAC;IAC3E,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,EAAE,CAAC,CAAC,EAAE;IACf,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,GAAG;IACf,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,GAAG;IACf,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,MAAM,CAAC,EAAE,EAAE;IACpB,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAChB,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,EAAE,GAAG,EAAE,CAAC;AACZ;IACA,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IACzC,OAAO,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AACrC;IACA,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;AAC/B;IACA,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;IACpB,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;AACrD;IACA;IACA,GAAG,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE;IACrC,IAAI,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD;IACA,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG;IACnB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;IACA;IACA;IACA,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE;IACvB,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,OAAO,MAAM;AACb;IACA;IACA;IACA,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC1B,OAAO;IACP,KAAK;AACL;IACA;IACA,GAAG,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;AACjC;IACA;IACA,IAAI,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC;IACA,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG;AACnB;IACA;IACA,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC;AAChF;IACA;IACA,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE;IACvB,QAAQ,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,OAAO,MAAM;AACb;IACA;IACA;IACA,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACzB,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,OAAO;IACP,KAAK;AACL;IACA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACd,GAAG,MAAM;IACT,IAAI,MAAM,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACnC,GAAG;AACH;IACA,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,EAAE,EAAE,IAAI,QAAQ,CAAC;AACjB;IACA;IACA,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE;IACf,IAAI,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,QAAQ,GAAG,EAAE,CAAC,CAAC;IACnC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC5B,GAAG;AACH;IACA;IACA,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;AACpC;IACA;IACA,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;IACb,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACb,GAAG,MAAM;IACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACX;IACA;IACA,IAAI,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC;AAClD;IACA;IACA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;AACjD;IACA;IACA,IAAI,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;IACxC,GAAG;AACH;IACA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACV,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACX;IACA,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,QAAQ,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACrD,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE;IAChB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IACnB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,GAAG;IACf,EAAE,IAAI,CAAC,GAAG,CAAC;IACX,IAAI,IAAI,GAAG,SAAS;IACpB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;IACA,EAAE,QAAQ,GAAG,KAAK,CAAC;IACnB,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB;IACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,CAAC,EAAE;IAChB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE;IACjB,EAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,EAAE,OAAO,QAAQ,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC;AACD;AACA;IACA,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;IACzD,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;AAClC;IACA;IACO,IAAI,OAAO,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;AACrD;IACA;IACA,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;IACzB,EAAE,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC;;;;;;;;;;;ICtxJpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,CAAC,SAAS,IAAI,EAAE;AAGhB;IACA;IACA;IACA;IACA,EAAE,IAAI,aAAa,GAAG,IAAI,CAAC;AAC3B;IACA;IACA,EAAE,IAAI,CAAC,GAAG;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,GAAG,CAAC;AACJ;IACA,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;AACxB;IACA,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;IACpC,MAAM,MAAM,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IACzC,KAAK;IACL,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,GAAG;AACH;IACA;IACA,EAAE,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AAC7B;IACA,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;IACjB,MAAM,MAAM,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IACvC,KAAK;AACL;IACA,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC9C,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5B;IACA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvB;IACA,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtB;IACA,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA,EAAE,SAAS,SAAS,CAAC,GAAG,EAAE;AAC1B;IACA,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;AACrB;IACA,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IAChB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd;IACA,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;AACnB;IACA,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IAC1B,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,OAAO;IACP,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;IACtB,KAAK;AACL;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;IACnB,MAAM,IAAI,CAAC,GAAG,CAAC;IACf,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,KAAK,MAAM;IACX,MAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,KAAK;IACL,IAAI,OAAO,OAAO,CAAC;IACnB,GAAG;AACH;IACA,EAAE,IAAI,KAAK,GAAG,SAAS,EAAE,EAAE,EAAE,EAAE;AAC/B;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAC1C;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACrB;IACA,IAAI,IAAI,CAAC,GAAG,QAAQ,CAAC;IACrB,IAAI,IAAI,CAAC,CAAC;AACV;IACA,IAAI,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAE,CAEpC,MAAM,IAAI,EAAE,KAAK,SAAS,EAAE;IACjC,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAChB;IACA,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACtC,QAAQ,MAAM,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAC9C,OAAO;AACP;IACA,KAAK;IACL,MAAM,QAAQ,OAAO,EAAE;AACvB;IACA,QAAQ,KAAK,QAAQ;IACrB,UAAU;IACV,YAAY,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,EAAE;IACxC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAC1B,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAC1B,cAAc,IAAI,GAAG,IAAI,EAAE;IAC3B,gBAAgB,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAC5B,aAAa,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE;IAChC,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,cAAc,IAAI,CAAC,IAAI,EAAE;IACzB,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1B,aAAa,MAAM;IACnB,cAAc,MAAM,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IACjD,aAAa;IACb,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtB,YAAY,MAAM;IAClB,WAAW;IACX,QAAQ,KAAK,QAAQ;IACrB,UAAU;IACV,YAAY,IAAI,EAAE,GAAG,CAAC,EAAE;IACxB,cAAc,CAAC,GAAG,EAAE,CAAC;IACrB,cAAc,EAAE,GAAG,CAAC,EAAE,CAAC;IACvB,aAAa;AACb;IACA,YAAY,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE;IAC9B,cAAc,CAAC,GAAG,EAAE,CAAC;IACrB,aAAa,MAAM,IAAI,EAAE,GAAG,CAAC,EAAE;AAC/B;IACA,cAAc,IAAI,EAAE,IAAI,CAAC,EAAE;IAC3B,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,gBAAgB,EAAE,GAAG,CAAC,CAAC;IACvB,eAAe;AACf;IACA;IACA;AACA;IACA,cAAc,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IACvC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC;IACA,gBAAgB,IAAI,EAAE,KAAK,CAAC,EAAE;IAC9B,kBAAkB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IAClC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,mBAAmB,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;IACpC,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,mBAAmB,MAAM;IACzB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,mBAAmB;IACnB,kBAAkB,MAAM;AACxB;IACA,iBAAiB,MAAM;AACvB;IACA,kBAAkB,IAAI,EAAE,GAAG,CAAC,EAAE;IAC9B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,mBAAmB,MAAM;IACzB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,mBAAmB;AACnB;IACA,kBAAkB,IAAI,CAAC,GAAG,CAAC,EAAE;IAC7B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,mBAAmB,MAAM;IACzB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,cAAc,CAAC,GAAG,CAAC,CAAC;IACpB,aAAa,MAAM,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;IAC/C,cAAc,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC1B,aAAa;IACb,YAAY,MAAM;IAClB,WAAW;IACX,QAAQ,KAAK,QAAQ;IACrB,UAAU;IACV,YAAY,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACnC;IACA,YAAY,IAAI,CAAC,KAAK,IAAI;IAC1B,cAAc,MAAM,QAAQ,CAAC,kBAAkB,CAAC,CAAC;AACjD;IACA,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC9B,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;IACrB,cAAc,CAAC,EAAE,CAAC;IAClB,aAAa,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACrC,cAAc,CAAC,EAAE,CAAC;IAClB,aAAa;AACb;IACA,YAAY,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE;IACpC,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,aAAa,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACzD;IACA,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAChC,gBAAgB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,eAAe;IACf,cAAc,CAAC,EAAE,CAAC;AAClB;IACA;IACA,cAAc,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IACtH,gBAAgB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC9C,gBAAgB,CAAC,EAAE,CAAC;IACpB,eAAe;AACf;IACA;IACA,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IACxF,gBAAgB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACtD,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,eAAe;AACf;IACA,aAAa,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IAC7D,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,cAAc,CAAC,GAAG,CAAC,CAAC;IACpB,aAAa,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IAC7D,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,cAAc,CAAC,GAAG,CAAC,CAAC;IACpB,aAAa;AACb;IACA,YAAY,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;IAC/B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,cAAc,CAAC;IACf,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,cAAc,MAAM;IACpB,aAAa;AACb;IACA;IACA,WAAW;IACX,QAAQ;IACR,UAAU,MAAM,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAC7C,OAAO;AACP;IACA,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;IACjB,MAAM,MAAM,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IACvC,KAAK;AACL;IACA,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,GAAG,CAAC;AACJ;IACA,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC3B;IACA,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;AAC5C;IACA,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;IACjB,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACxB,OAAO;IACP,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;AACA;IACA,EAAE,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;IACtB,MAAM,CAAC,GAAG,CAAC,EAAE;IACb,KAAK;AACL;IACA,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;IACtB,MAAM,CAAC,GAAG,CAAC,EAAE;IACb,KAAK;AACL;IACA,IAAI,IAAI,CAAC,KAAK,CAAC;IACf,MAAM,OAAO,CAAC,CAAC;AACf;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd;IACA,IAAI,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3B,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB;IACA,MAAM,IAAI,CAAC,GAAG,aAAa;IAC3B,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;AACA;IACA,EAAE,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE;AACjC;IACA,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;IACjB,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC;IACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAClC;AACA;IACA,MAAM,IAAI,IAAI,KAAK,IAAI;IACvB,QAAQ,OAAO,CAAC,CAAC;AACjB;IACA,MAAM,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,MAAM,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;AACH;IACA,EAAE,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;AACrB;IACA,IAAI,IAAI,CAAC,CAAC;IACV,MAAM,OAAO,CAAC,CAAC;IACf,IAAI,IAAI,CAAC,CAAC;IACV,MAAM,OAAO,CAAC,CAAC;AACf;IACA,IAAI,OAAO,CAAC,EAAE;IACd,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,IAAI,CAAC,CAAC;IACZ,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,IAAI,CAAC,CAAC;IACZ,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK;IACL,GACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChB;IACA,IAAI,IAAI,IAAI,YAAY,QAAQ,EAAE;IAClC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK,MAAM;IACX,MAAM,OAAO,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,KAAK;IACL,GAAG;AACH;IACA,EAAE,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAC7D,EAAE,QAAQ,CAAC,kBAAkB,CAAC,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAC/D,EAAE,QAAQ,CAAC,qBAAqB,CAAC,GAAG,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;AAC5E;IACA,EAAE,QAAQ,CAAC,SAAS,GAAG;AACvB;IACA,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;AACV;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,WAAW;AACtB;IACA,MAAM,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,WAAW;AACtB;IACA,MAAM,OAAO,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,OAAO,WAAW;IACxB,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACpE,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B,OAAO,CAAC;IACR,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,OAAO,WAAW;IACxB,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACpE,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B,OAAO,CAAC;IACR,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,OAAO,WAAW;IACxB,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC/C,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B,OAAO,CAAC;IACR,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,OAAO,WAAW;IACxB,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC/C,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B,OAAO,CAAC;IACR,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,EAAE,WAAW;IACxB,MAAM,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3D,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,QAAQ,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjC,OAAO;AACP;IACA,MAAM,IAAI,CAAC,KAAK,SAAS,EAAE;IAC3B,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACjE,OAAO;AACP;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE;IAC3C,QAAQ,MAAM,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IACzC,OAAO;AACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,OAAO,WAAW;IACxB,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/D,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;IAC1B,OAAO,CAAC;IACR,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB;IACA;AACA;IACA,MAAM,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9F,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB;IACA;AACA;IACA,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IAC3C,QAAQ,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,OAAO;IACP,MAAM,OAAO,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9F,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,EAAE,SAAS,MAAM,EAAE;AAC7B;IACA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,CAAC,CAAC;AACzC;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,QAAQ,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjC,OAAO;IACP,MAAM,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACxF,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,EAAE,SAAS,MAAM,EAAE;AAC9B;IACA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,CAAC,CAAC;AACzC;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,QAAQ,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjC,OAAO;IACP,MAAM,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACzF,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,EAAE,SAAS,MAAM,EAAE;AAC9B;IACA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,CAAC,CAAC;AACzC;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,QAAQ,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjC,OAAO;IACP,MAAM,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACzF,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,EAAE,WAAW;AAC1B;IACA,MAAM,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3D,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC1B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB;IACA;AACA;IACA,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACxB;IACA,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACxB,UAAU,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnG,SAAS,MAAM;IACf,UAAU,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnG,SAAS;IACT,OAAO;AACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC;AACrC;IACA;IACA,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC;IACA;IACA,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;IAChB,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;IAChB,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;IACvB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,SAAS;IAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;IACvB,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,UAAU,MAAM;IAChB,SAAS;IACT,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACjC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,SAAS,MAAM,OAAO,IAAI,CAAC;IAC3B,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,OAAO;AACP;IACA,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;IACvB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,SAAS;IAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACjC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,SAAS,MAAM,OAAO,IAAI,CAAC;IAC3B,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,OAAO;AACP;IACA,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACtB,QAAQ,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,OAAO;IACP,MAAM,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC7B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5E,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAC9B;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7E,MAAM,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,KAAK;AACL;IACA,IAAI,UAAU,EAAE,SAAS,GAAG,EAAE;AAC9B;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,QAAQ,OAAO,IAAI,CAAC;IACpB,OAAO;AACP;IACA,MAAM,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC;AACzB;IACA,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;IAClC,MAAM,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;AAC1C;IACA,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C;IACA,QAAQ,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACzC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,SAAS;AACT;IACA,QAAQ,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG,EAAE;IACxD,UAAU,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,SAAS;IACT,OAAO;IACP,MAAM,OAAO,IAAI,CAAC;IAClB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,WAAW,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;AAChC;IACA,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAM,OAAO,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,EAAE,WAAW;AAC1B;IACA,MAAM,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,YAAY,EAAE,SAAS,YAAY,EAAE;AACzC;IACA,MAAM,IAAI,KAAK,EAAE,GAAG,GAAG,EAAE,CAAC;IAC1B,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACzB,QAAQ,GAAG,GAAG,GAAG,CAAC;IAClB,OAAO;AACP;IACA,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE;IACnB,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,OAAO,MAAM;AACb;IACA,QAAQ,IAAI,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;IAC7D,UAAU,GAAG,GAAG,KAAK,CAAC;IACtB,UAAU,GAAG,GAAG,GAAG,CAAC;IACpB,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,SAAS;AACT;IACA,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,QAAQ,GAAG,GAAG,GAAG,CAAC;IAClB,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,OAAO;IACP,MAAM,OAAO,GAAG,CAAC;IACjB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,EAAE,SAAS,YAAY,EAAE;AACtC;IACA,MAAM,IAAI,KAAK,EAAE,GAAG,GAAG,EAAE,CAAC;IAC1B,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACzB,QAAQ,GAAG,GAAG,GAAG,CAAC;IAClB,OAAO;AACP;IACA,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE;IACnB,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,OAAO,MAAM;AACb;IACA,QAAQ,IAAI,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;IAC7D,UAAU,GAAG,GAAG,KAAK,CAAC;IACtB,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,SAAS;AACT;IACA,QAAQ,GAAG,GAAG,SAAS,CAAC;IACxB,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,QAAQ,GAAG,GAAG,IAAI,CAAC;IACnB,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,QAAQ,GAAG,GAAG,GAAG,CAAC;IAClB,OAAO;IACP,MAAM,OAAO,GAAG,CAAC;IACjB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,EAAE,WAAW;AAC9B;IACA,MAAM,IAAI,CAAC,CAAC;IACZ,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC;AACnB;IACA,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAChC,QAAQ,OAAO,GAAG,CAAC;IACnB,OAAO;AACP;IACA,MAAM,GAAG;IACT,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE;AACxB;IACA,MAAM,OAAO,GAAG,CAAC;IACjB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,EAAE,SAAS,GAAG,EAAE;AAC9B;IACA,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB;IACA,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAChC,QAAQ,OAAO,KAAK,CAAC;IACrB,OAAO;AACP;IACA,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;AACtB;IACA,MAAM,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,MAAM,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC5C;IACA,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AACzC;IACA,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB;IACA,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,CAAC,GAAG,EAAE,CAAC;AACb;IACA,MAAM,IAAI,CAAC;IACX,QAAQ,GAAG,GAAG,GAAG,CAAC;AAClB;IACA,MAAM,IAAI,MAAM,EAAE;AAClB;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,GAAG;IACnC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,UAAU,CAAC,GAAG,EAAE,CAAC;IACjB,SAAS;IACT,QAAQ,GAAG,GAAG,GAAG,CAAC;IAClB,QAAQ,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,GAAG;IACnC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,UAAU,CAAC,GAAG,EAAE,CAAC;IACjB,SAAS;IACT,QAAQ,GAAG,GAAG,GAAG,CAAC;IAClB,OAAO,MAAM;IACb,QAAQ,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG;IACrC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,UAAU,CAAC,GAAG,CAAC,CAAC;IAChB,UAAU,CAAC,GAAG,EAAE,CAAC;IACjB,SAAS;IACT,OAAO;IACP,MAAM,OAAO,GAAG,CAAC;IACjB,KAAK;IACL,GAAG,CAAC;AACJ;IACA,EAI0C;IAC1C,IAAI,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACrE,IAAI,QAAQ,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;IACnC,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;IACpC,IAAI,MAAM,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;IACjC,GAEG;AACH;IACA,CAAC,EAAM,CAAC,CAAA;;;;;IC72BR;IACgB,SAAA,IAAI,CAAC,GAAW,EAAE,GAAW,EAAA;IACzC,IAAA,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACzD,CAAC;IAEK,SAAU,QAAQ,CAAI,GAAiB,EAAA;IACzC,IAAA,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAEe,SAAA,UAAU,CAAI,GAAiB,EAC3C,GAAsB,EAAA;QAEtB,IAAI,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;IAE/B,IAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,MAAM,SAAS,GAClB,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAEnB,MAAM,QAAQ,GAAG,MACpB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAIxB,SAAU,EAAE,CAAC,GAAqB,EAAA;QAEpC,IAAI,WAAW,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAA,OAAO,OAAO,GAAG,KAAK,QAAQ;YAC1B,GAAG,GAAG,WAAW;IACjB,QAAA,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEe,SAAA,MAAM,CAAC,GAAW,EAAE,OAAgB,EAAA;QAChD,OAAO,KAAK,gEAAgE,CAAC;QAC7E,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC1B,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IACtD,QAAA,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,KAAA;IACD,IAAA,OAAO,GAAG,CAAC;IACf,CAAC;IAEK,SAAU,OAAO,CAAI,GAAiB,EAAA;IACxC,IAAA,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACnB,IAAA,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACrC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,KAAA;IACD,IAAA,OAAO,GAAG,CAAC;IACf,CAAC;IAEW,IAAI,YAAY,GAAG;IAkBxB,MAAM,GAAG,GAAG,CAAC,IAAgB,KAChC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAEjB,MAAM,KAAK,GAAG,CAAC,EAAU,KAC5B,IAAI,OAAO,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IAE7C,MAAM,KAAK,GAAG,CAAC,KAAa,EAAE,GAAW,KAC5C,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,EAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;IAEvD,SAAU,IAAI,CAAC,IAAgB,EAAA;QACjC,IAAI;YACA,OAAO,IAAI,EAAE,CAAC;IACjB,KAAA;IACD,IAAA,OAAO,GAAG,EAAE;IACR,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACrB,IAAI,IAAI,KAAK,EAAE;gBAAE,IAAI,GAAG,SAAS,CAAC;IAClC,QAAA,KAAK,CAAC,CAAY,SAAA,EAAA,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;IAClC,KAAA;IACL,CAAC;IAEM,MAAM,YAAY,GAAG,CAAC,GAAW,EAAE,KAAc,KACpD,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAExD,MAAM,UAAU,GAAG,CAAC,CAAU,KACjC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAIvB,SAAUC,KAAG,CAA6B,GAAM,EAAA;QAClD,IAAI,OAAO,GAAG,KAAK,QAAQ;IACvB,QAAA,OAAa,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IAElC,IAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;IACnB,QAAA,OAAa,GAAG,CAAC;QAErB,OAAa,GAAG,CAAC,GAAG,CAChB,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzD,CAAC;IAEK,SAAU,GAAG,CAA6B,GAAM,EAAA;QAClD,IAAI,OAAO,GAAG,KAAK,QAAQ;IACvB,QAAA,OAAa,GAAG,CAAC;IAErB,IAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;IACnB,QAAA,OAAa,GAAG,CAAC,QAAQ,EAAE,CAAC;QAEhC,OAAa,GAAG,CAAC,GAAG,CAChB,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,CAAC;aAEe,GAAG,CAAC,CAAU,EAAE,YAAY,GAAG,IAAI,EAAA;IAC/C,IAAA,IAAI,KAAK,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;QAE3B,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACd,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAE7C,IAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEpC,IAAA,OAAO,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC;IAEM,MAAM,IAAI,GAAG,CAAC,CAAU,EAAE,CAAU,KACvC,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEtC,MAAM,GAAG,GAAG,CAAC,CAAU,KAC1B,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAExB,MAAM,GAAG,GAAG,CAAC,EAAY,KAC5BA,KAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEjB,MAAM,GAAG,GAAG,CAAC,GAAW,KAC3B,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IAErB,SAAU,YAAY,CAAI,GAAQ,EAAA;IACpC,IAAA,IAAI,GAAG,GAAG,IAAI,GAAG,EAAU,CAAC;IAC5B,IAAA,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE;IACf,QAAA,IAAI,GAAG,GAAG,CAAG,EAAA,CAAC,EAAE,CAAC;IACjB,QAAA,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;IAAE,YAAA,OAAO,KAAK,CAAC;IAC/B,QAAA,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChB,KAAA;IACD,IAAA,OAAO,IAAI,CAAC;IAChB,CAAC;IAKK,SAAU,SAAS,CAAC,KAAa,EAAA;IACnC,IAAA,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC;;IClJA,MAAM,KAAK,CAAA;QACP,UAAU,GAAA;YACN,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC/C,QAAA,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SACjC;QAED,OAAO,GAAA;IACH,QAAA,OAAO,QAAQ,CAAC;SACnB;QAED,SAAS,GAAA;YACL,IAAI;gBACA,OAAOC,IAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACvC,SAAA;IACD,QAAA,OAAO,GAAG,EAAE;gBACR,KAAK,CAAC,GAAG,CAAC,CAAC;IACX,YAAA,OAAa,EAAE,CAAC;IACnB,SAAA;SACJ;IAED,IAAA,CAAC,QAAQ,GAAA;IACL,QAAA,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAErD,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAAE,OAAO;IAEnC,QAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1C,KAAK,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;IACrC,YAAA,MAAM,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,SAAA;SAEJ;QAED,MAAM,GAAA;IACF,QAAA,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAErD,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAC9B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,YAAA,OAAO,CAAC;IAEZ,QAAA,OAAO,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SACpC;IACJ,CAAA;IAEM,MAAM,IAAI,GAAU,IAAI,KAAK,EAAE;;;;ICjE9B,IAAA,YAAY,GAAY,KAAK,CAAA;IAC7B,IAAA,mBAAmB,GAAY,KAAK,CAAA;;;aAI/B,OAAO,GAAA;UACP,mBAAmB,EAAA,OAAA;IAExB,CAAA,mBAAmB,GAAG,KAAK,CAAA;KAE3B,IAAI,CAAA,MAAO,OAAO,CAAC,OAAO,EAAA,CAAA,CAAA;;;aAGd,WAAW,GAAA;IACvB,CAAA,mBAAmB,GAAG,IAAI,CAAA;UAErB,YAAY,EAAA,OAAA;IAEjB,CAAA,GAAG,CAAC,OAAO,CAAA,CAAA;;;aAGC,QAAQ,GAAA;KACpB,GAAG,CAAA,YAAA;IACO,EAAA,MAAA,KAAK,CAAC,IAAI,CAAA,CAAA;IAChB,EAAA,YAAY,GAAG,IAAI,CAAA;MACnB,OAAO,EAAA,CAAA;;;;;;UC3BT,KAAK,GAAA;KAAI,KAAK;KAAE,IAAI;KAAE,MAAM;KAAE,MAAM;KAAE,UAAU;KAAE,WAAW;KAC/D,eAAe;KAAE,aAAa;KAAE,YAAY;;;IAI5C,IAAA,QAAQ,OAAyC,GAAG,EAAA,CAAA;IACpD,IAAA,QAAQ,GAAY,IAAI,CAAA;;IAEnB,SAAA,QAAQ,CAAC,YAAoB,EAAA;IAEzB,CAAA,SAAA,QAAQ,CAAC,MAAc,EAAE,IAAa,EAAE,EAAU,EAAA;UACnD,QAAQ,GAAG,MAAM,KAAK,EAAE;IACrB,IAAA,CAAA,EAAA,IAAI,IAAI,EAAE,CAAA,IAAA,CAAA;WACV,MAAM,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA,EAAI,EAAE,CAAA,IAAA,CAAA,CAAA;;UAEvB,KAAK,GAAA,IAAO,KAAK,CAAC,QAAQ,CAAA,CAAA;;IAE9B,EAAA,KAAK,CAAC,gBAAgB;OAAC,gBAAgB;OAAE,CAAC,IAAA;;IAElC,IAAA,IAAA,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;QAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAA,CAAA;QACjB,GAAG,CAAA,MAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,CAAA,CAAA,CAAA;;IACvC,GAAA,EAAA,IAAI,EAAE,IAAI,EAAA;;;;KAGlB,KAAK,CAAC,OAAO,CAAC,IAAI,IAAA;;MAEd,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAA,EAAA,CAAA,CAAA;;IACjB,EAAA,GAAG,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,CAAA,CAAA,CAAA;;;;IAYvC,SAAA,IAAI,CAAC,IAAa,EAAA;IACnB,CAAA,IAAA,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;IAEzB,CAAA,IAAA,CAAA,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAA,OAAA;SAE9B,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAA,CAAA;;IAE3B,CAAA,KAAK,CAAC,IAAI,EAAG,CAAA,KAAK,CAAC,GAAG,IAAA;;;;;UAGpB,IAAI,CAAA;IACN,CAAA,IAAI,CAAC,IAAa,EAAA;WACT,QAAQ,EAAA,OAAA;IAEb,EAAA,IAAI,CAAC,IAAI,CAAA,CAAA;;;KAGb,eAAe,CAAC,YAAoB,EAAE,OAAgB,EAAA;IAClD,EAAA,QAAQ,GAAG,OAAO,CAAA;MAClB,GAAG,CAAA,MAAO,QAAQ,CAAC,EAAE,CAAA,CAAA,CAAA;MACrB,GAAG,CAAA,MAAO,QAAQ,CAAC,YAAY,CAAA,CAAA,CAAA;;;IAGnC,CAAA,WAAW,CAAC,OAAgB,EAAA;IACpB,EAAA,IAAA,QAAQ,KAAK,OAAO,EAAA,OAAA;IAExB,EAAA,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,WAAW,CAAA,CAAA;IACvC,EAAA,QAAQ,GAAG,OAAO,CAAA;;;KAGtB,UAAU,GAAA;WACD,QAAQ,EAAA,OAAA;MAEb,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAA,CAAA,CAAA;;;SAGnB,SAAS,GAAA;aACF,QAAQ,CAAA;;;;IAIV,MAAA,GAAG,OAAa,IAAI,EAAA;;;ICnD7B,IAAA,YAAY,OAAyB,GAAG,EAAA,CAAA;;IAE5B,SAAA,YAAY,CAAC,IAAiB,EAAA;YACnC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;;aAGhB,gBAAgB,CAAC,IAAiB,EAAE,OAAiB,EAAA;SAE7D,OAAO,GAAA;IACP,EAAA,EAAE,EAAE,OAAO,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAA;IAC3B,EAAA,MAAM,EAAE,OAAO,EAAE,MAAM,IAAK,CAAA,CAAC,EAAE,CAAC,CAAA;;;IAGhC,CAAA,IAAA,KAAK,IAAI,CAAC,CAAA;IACV,CAAA,IAAA,MAAM,KAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAA,CAAA;IAC3B,CAAA,IAAA,KAAK,KAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAA,CAAA;IAE1B,CAAA,IAAA,aAAa,GAAW,CAAC,CAAA;;cAGpB,IAAI,CAAC,IAAe,EAAE,IAAe,EAAA;cAClC,IAAI;YACH,YAAY;QACb,YAAY,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;YAEpB,UAAU;QACX,YAAY,CAAC,MAAM,CAAC,IAAI,CAAA,CAAA;;;;MAGhC,IAAI,CAAC,aAAa,CACV,IAAA,WAAW,CAAC,IAAI,EAAA,EAAI,MAAM,EAAE,IAAI,EAAA,CAAA,CAAA,CAAA;;;cAInC,QAAQ,CAAC,KAAY,EAAE,KAAa,EAAA;UACrC,GAAG,GAAA;IACH,GAAA,CAAC,EAAG,EAAE,GAAG,KAAK,CAAC,OAAO,GAAI,CAAC;IAC3B,GAAA,CAAC,EAAG,EAAE,GAAG,KAAK,CAAC,OAAO,GAAI,CAAC;;;IAG/B,EAAA,KAAK,KAAK,GAAG,CAAA;IAET,EAAA,IAAA,MAAM,KACN,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAClB,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAA,CAAA;IAIlB,EAAA,OAAA,EAAA,EAAE,EAAE,OAAO,CAAC,EAAE,EACd,KAAK,EAAE,MAAM,EAAA,CAAA;;;cAIZ,UAAU,CAAC,IAAc,EAAE,IAAW,EAAA;IACvC,EAAA,IAAA,QAAQ,GACR,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAI,GAAA,OAAO,CAAC,MAAM,CAAC,CAAC,CAAA,IACnD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA,GAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAA,CAAA;IAEnD,EAAA,IAAA,QAAQ,SAAS,KAAK,CAAA;IAE1B,EAAA,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAA,CAAA;IACjD,EAAA,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAA,CAAA;aAE1C,IAAI,CAAA;;;IAGN,CAAA,SAAA,YAAY,CAAC,EAAc,EAAA;IAC5B,EAAA,IAAA,KAAK,KAAM,CAAA,CAAC,EACL,OAAA,IAAI,CAAC,YAAY,CAAA,CAAA;IAExB,EAAA,IAAA,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAA,CAAA;UAC3B,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAA,CAAA;MAEzB,KAAK,GAAG,KAAK,CAAC,UAAU,CAAA;MACxB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAA;MACnB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;IAEnB,EAAA,aAAa,GAAG,CAAC,CAAA;;;MAIjB,IAAI,CAAC,YAAY,EAAE,IAAI,CAAA,CAAA;;;IAGlB,CAAA,SAAA,WAAW,CAAC,EAAc,EAAA;IAC3B,EAAA,IAAA,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAA,CAAA;IAE3B,EAAA,IAAA,KAAK,KAAK,KAAK,CAAC,UAAU,SACnB,aAAa,EAAA,CAAA;IAEpB,EAAA,IAAA,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAA,CAAA;IAE5B,EAAA,IAAA,CAAA,UAAU,CAAC,IAAI,EAAE,KAAK,UAChB,aAAa,EAAA,CAAA;MAExB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;MAGnB,IAAI,CAAC,WAAW,EAAE,IAAI,CAAA,CAAA;;;IAGX,CAAA,eAAA,UAAU,CAAC,EAAc,EAAA;IAChC,EAAA,IAAA,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAA,CAAA;IAE3B,EAAA,IAAA,KAAK,KAAK,KAAK,CAAC,UAAU,EACnB,OAAA,IAAI,CAAC,YAAY,CAAA,CAAA;IAExB,EAAA,IAAA,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAA,CAAA;;;IAIjC,EAAA,KAAK,IAAI,CAAC,CAAA;;MAEV,IAAI,CAAC,UAAU,EAAE,IAAI,CAAA,CAAA;;;KAGzB,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,YAAY,EAAA,EAAG,OAAO,EAAE,IAAI,EAAA,CAAA,CAAA;KAChE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,EAAA,EAAG,OAAO,EAAE,IAAI,EAAA,CAAA,CAAA;KAC9D,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAU,EAAA,EAAG,OAAO,EAAE,IAAI,EAAA,CAAA,CAAA;KAC5D,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,UAAU,EAAA,EAAG,OAAO,EAAE,IAAI,EAAA,CAAA,CAAA;;;MAG3D,OAAO,GAAA;IACH,GAAA,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,YAAY,CAAA,CAAA;IACnD,GAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAA,CAAA;IACjD,GAAA,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,CAAA,CAAA;IAC/C,GAAA,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,UAAU,CAAA,CAAA;;;;;;;QC3J1D,MAAM,GAAA;IACN,CAAA,QAAQ,EAAE,GAAG;IACb,CAAA,QAAQ,EAAE,KAAK;IACf,CAAA,MAAM,EAAE,IAAI;;;QAGZ,OAAO,GAAA;IACL,CAAA,EAAA,SAAS,EAAE,aAAa,EAAA;IACxB,CAAA,EAAA,SAAS,EAAE,mBAAmB,EAAA;IAC9B,CAAA,EAAA,SAAS,EAAE,aAAa,EAAA;;;QAG1B,MAAM,GAAA;IACJ,CAAA,EAAA,SAAS,EAAE,aAAa,EAAA;IACxB,CAAA,EAAA,SAAS,EAAE,mBAAmB,EAAA;IAC9B,CAAA,EAAA,SAAS,EAAE,aAAa,EAAA;;;QAG1B,MAAM,GAAA;IACJ,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;IAChC,CAAA,EAAA,SAAS,EAAE,sBAAsB,EAAA;IACjC,CAAA,EAAA,SAAS,EAAE,sBAAsB,EAAA;IACjC,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;;;QAGlC,MAAM,GAAA;IACJ,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;IAChC,CAAA,EAAA,SAAS,EAAE,sBAAsB,EAAA;IACjC,CAAA,EAAA,SAAS,EAAE,sBAAsB,EAAA;IACjC,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;;;QAGlC,OAAO,GAAA;IACL,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;IAChC,CAAA,EAAA,SAAS,EAAE,uBAAuB,EAAA;IAClC,CAAA,EAAA,SAAS,EAAE,uBAAuB,EAAA;IAClC,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;;;QAGlC,OAAO,GAAA;IACL,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;IAChC,CAAA,EAAA,SAAS,EAAE,uBAAuB,EAAA;IAClC,CAAA,EAAA,SAAS,EAAE,uBAAuB,EAAA;IAClC,CAAA,EAAA,SAAS,EAAE,qBAAqB,EAAA;;;QAGlC,MAAM,GAAA;IACJ,CAAA,EAAA,SAAS,EAAE,cAAc,EAAA;IACzB,CAAA,EAAA,SAAS,EAAE,eAAe,EAAA;IAC1B,CAAA,EAAA,SAAS,EAAE,eAAe,EAAA;IAC1B,CAAA,EAAA,SAAS,EAAE,cAAc,EAAA;;;IAG3B,IAAA,MAAM,GACN,CAAA,OAAO,EAAE,MAAM,EACf,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAChC,MAAM,CAAA,CAAA;;mBAGK,YAAY,CAAC,IAAiB,EAAE,MAAqB,EAAA;;IAEvD,EAAA,IAAA,EAAA,QAAQ,EAAE,MAAM,EAAE,QAAQ,KAAI,MAAM,CAAA;UACrC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,EAAE,QAAQ,GAAG,MAAM,CAAA,CAAA;IAEjD,EAAA,MAAA,KAAK,CAAC,OAAO,CAAA,CAAA;IAEf,EAAA,IAAA,YAAY,CAAC,IAAI,CAAA,EAAA,SAAA;UAGjB,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAA,CAAA;IAC3B,EAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAA,CAAA;;;;aAIpB,KAAK,CAAC,IAAiB,EAAE,MAAsB,EAAA;IAC3D,CAAA,GAAG,OAAO,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,MAAM,CAAA,CAAA,CAAA;;;;;aChEjC,YAAY,CAAC,IAAiB,EAAE,OAAuB,EAAA;KAEnE,OAAO,KAAA,EAAA,CAAA;IACP,CAAA,OAAO,CAAC,MAAM,KAAM,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA;;IAEf,CAAA,SAAA,YAAY,CAAC,GAAU,EAAA;MAC5B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAA,CAAA,YAAA,EAAkB,GAAG,CAAC,CAAC,CAAA,IAAA,EAAO,GAAG,CAAC,CAAC,CAAA,QAAA,CAAA,CAAA;;;cAGlD,iBAAiB,GAAA;IACtB,EAAA,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAA;;;IAGtB,CAAA,SAAA,UAAU,CAAC,IAAW,EAAA;IAEvB,EAAA,IAAA,IAAI,MACF,SAAS,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA,CAAA;;MAGf,IAAI,CAAC,OAAO,CAAC,IAAI,EAAA;IACb,GAAA,QAAQ,EAAE,GAAG;IACb,GAAA,MAAM,EAAE,gCAAgC;IAE3C,GAAA,CAAA,CAAA,QAAQ,SAAS,iBAAiB,EAAA,CAAA;;;IAG9B,CAAA,SAAA,WAAW,CAAC,EAAa,EAAA;MAC9B,GAAG,CAAC,IAAI,CAAC,eAAe,CAAA,CAAA;;;IAGnB,CAAA,SAAA,UAAU,CAAC,EAAa,EAAA;IAC7B,EAAA,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAA,CAAA;;;IAGxB,CAAA,SAAA,SAAS,CAAC,EAAa,EAAA;MAC5B,GAAG,CAAC,IAAI,CAAC,aAAa,CAAA,CAAA;IACtB,EAAA,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAA,CAAA;;;IAG/B,CAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,WAAW,CAAA,CAAA;IAC/C,CAAA,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAU,CAAA,CAAA;IAC7C,CAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,CAAA,CAAA;IAEvC,CAAA,IAAA,IAAI,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAA,CAAA;;;MAGrC,OAAO,GAAA;IACH,GAAA,IAAI,CAAC,OAAO,EAAA,CAAA;IACZ,GAAA,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,WAAW,CAAA,CAAA;IAClD,GAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,UAAU,CAAA,CAAA;IAChD,GAAA,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,CAAA,CAAA;;;;;aAO1C,YAAY,CAAC,IAAiB,EAAE,GAAc,EAAA;IAE1D,CAAA,GAAG,SAAS,GAAG,EAAA,CAAA;;IAEN,CAAA,SAAA,WAAW,CAAC,EAAa,EAAA;IAC9B,EAAA,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAA,CAAA,CAAA;;;IAGxB,CAAA,SAAA,SAAS,CAAC,EAAa,EAAA;IAC5B,EAAA,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAA,CAAA,CAAA;;;IAG/B,CAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,WAAW,CAAA,CAAA;IAC/C,CAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,CAAA,CAAA;SAEvC,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAA,CAAA;;;MAG5B,OAAO,GAAA;IACH,GAAA,IAAI,CAAC,OAAO,EAAA,CAAA;IACZ,GAAA,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,WAAW,CAAA,CAAA;IAClD,GAAA,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CCxCvC,CAAC,eAAI,GAAM,CAAA,CAAA,CAAA,cAAG,GAAM,CAAA,EAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;;OAJxC,UAKE,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IANK,CAAA,IAAA,YAAA,GAAA,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;IAHE,GAAA,QAAA,CAAA,IAAA,EAAA,WAAA,EAAA,SAAA,GAAA,EAAE,cAAG,GAAM,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;;OAJ/B,UAKE,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBANK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;sFAHrC,GAAO,CAAA,CAAA,CAAA;SAAG,oBAAoB;SAAG,qBAAqB,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;;;;;IA0BjD,GAAA,QAAA,CAAA,KAAA,EAAA,WAAA,EAAA,qBAAA,GAAA,SAAA,IAAA,EAAE,aAAG,GAAK,CAAG,CAAA,CAAA,eAAA,GAAO,MAAG,CAAC,CAAA,GAAA,GAAA,CAAA,CAAA;;;;;IAQxB,GAAA,QAAA,CAAA,KAAA,EAAA,WAAA,EAAA,qBAAA,GAAA,SAAA,IAAA,CAAC,eAAG,GAAO,CAAG,CAAA,CAAA,eAAA,GAAO,MAAG,EAAE,CAAA,GAAA,GAAA,CAAA,CAAA;;;;;;;;;;IAIxB,GAAA,QAAA,CAAA,CAAA,EAAA,WAAA,EAAA,iBAAA,GAAA,SAAA,GAAA,CAAC,eAAG,GAAO,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;0CA3Ce,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;OAAnD,UA+CM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OA1CL,UAA+E,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;OAsB/E,UAKE,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;OAGF,UAKE,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;OAGF,UAGI,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;OAFH,UAAuC,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;OACvC,UAAmD,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;;;;kDA5CvC,GAAW,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;;;;;;;;;iHAIT,GAAO,CAAA,CAAA,CAAA;SAAG,oBAAoB;SAAG,qBAAqB,CAAA,GAAA,gBAAA,CAAA,CAAA,EAAA;;;;IA0BjD,GAAA,IAAA,KAAA,sBAAA,EAAA,IAAA,qBAAA,MAAA,qBAAA,GAAA,SAAA,IAAA,EAAE,aAAG,GAAK,CAAG,CAAA,CAAA,eAAA,GAAO,MAAG,CAAC,CAAA,GAAA,GAAA,CAAA,EAAA;;;;IAQxB,GAAA,IAAA,KAAA,wBAAA,EAAA,IAAA,qBAAA,MAAA,qBAAA,GAAA,SAAA,IAAA,CAAC,eAAG,GAAO,CAAG,CAAA,CAAA,eAAA,GAAO,MAAG,EAAE,CAAA,GAAA,GAAA,CAAA,EAAA;;;;IAIxB,GAAA,IAAA,KAAA,eAAA,CAAA,IAAA,iBAAA,MAAA,iBAAA,GAAA,SAAA,GAAA,CAAC,eAAG,GAAO,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,EAAA;;;;;2CA3Ce,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA3BpC,EAAE,EAAA,GAAA,OAAA,CAAA;SAET,OAAO,GAAG,GAAG,CAAC,SAAS,CAAA;IAC1B,CAAA,IAAA,IAAI,OAAO,IAAI,EAAA,CAAA;;KAQnB,OAAO,CAAA,MAAA;IACA,EAAA,MAAA,QAAQ,GAAG,WAAW;;IAC3B,IAAA,YAAA,CAAA,CAAA,EAAA,IAAI,OAAO,IAAI,EAAA,CAAA,CAAA;;OACb,IAAI;;;;IAGN,GAAA,aAAa,CAAC,QAAQ,CAAA,CAAA;;;;cAIZ,WAAW,GAAA;IAChB,EAAA,YAAA,CAAA,CAAA,EAAA,OAAO,IAAI,IAAI,CAAA,CAAA;MACf,GAAG,CAAC,WAAW,CAAC,OAAO,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAhB9B,GAAG,YAAA,CAAA,CAAA,EAAA,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAA,CAAA,CAAA;;;;IACxB,GAAG,YAAA,CAAA,CAAA,EAAA,OAAO,GAAG,IAAI,CAAC,UAAU,EAAA,CAAA,CAAA;;;;IAC5B,GAAG,YAAA,CAAA,CAAA,EAAA,OAAO,GAAG,IAAI,CAAC,UAAU,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICf7B;IACA;IACA;IACA;IACA;IACA;AACA;IACA;AACA;IACA,IAAI,uBAAuB,GAAG;IAC9B,EAAE,MAAM,EAAE,IAAI;IACd,EAAE,KAAK,EAAE,IAAI;IACb,EAAE,SAAS,EAAE,IAAI;IACjB,EAAE,WAAW,EAAE,IAAI;IACnB,EAAE,MAAM,EAAE,IAAI;IACd,EAAE,cAAc,EAAE,IAAI;IACtB,EAAE,YAAY,EAAE,IAAI;IACpB,EAAE,QAAQ,EAAE,IAAI;IAChB,EAAE,IAAI,EAAE,CAAC;IACT,EAAE,SAAS,EAAE,QAAQ;IACrB,EAAE,QAAQ,EAAE,IAAI;IAChB,EAAE,cAAc,EAAE,CAAC;IACnB,CAAC,CAAC;AACF;IACA,IAAI,oBAAoB,GAAG;IAC3B,EAAE,QAAQ,EAAE,IAAI;IAChB,EAAE,KAAK,EAAE,CAAC;IACV,EAAE,QAAQ,EAAE,CAAC;IACb,EAAE,MAAM,EAAE,uBAAuB;IACjC,EAAE,KAAK,EAAE,CAAC;IACV,CAAC,CAAC;AACF;IACA,IAAI,eAAe,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AAClN;IACA;AACA;IACA,IAAI,KAAK,GAAG;IACZ,EAAE,GAAG,EAAE,EAAE;IACT,EAAE,OAAO,EAAE,EAAE;IACb,CAAC,CAAC;AACF;IACA;AACA;IACA,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IAC/B,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;AACD;IACA,SAAS,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;IACnC,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;AACD;IACA,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE;IACpC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;AACD;IACA,IAAI,EAAE,GAAG;IACT,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;IAChD,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE;IAC3F,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,EAAE;IAC5E,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,YAAY,UAAU,CAAC,EAAE;IACvD,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,YAAY,gBAAgB,CAAC,EAAE;IAC7D,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACvD,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC,EAAE;IACrD,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,OAAO,CAAC,KAAK,UAAU,CAAC,EAAE;IACvD,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,OAAO,CAAC,KAAK,WAAW,CAAC,EAAE;IACxD,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;IACvD,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,oCAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5E,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9C,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9C,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;IACrE,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,WAAW,CAAC,EAAE;IAC7J,CAAC,CAAC;AACF;IACA;AACA;IACA,SAAS,qBAAqB,CAAC,MAAM,EAAE;IACvC,EAAE,IAAI,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,EAAE,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IACtF,CAAC;AACD;IACA;AACA;IACA,SAAS,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;AAClC;IACA,EAAE,IAAI,MAAM,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC;IAC7C,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAChE,EAAE,IAAI,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACvE,EAAE,IAAI,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACpE,EAAE,IAAI,QAAQ,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACrE,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;IACvC,EAAE,IAAI,IAAI,GAAG,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;IACzD,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACZ,EAAE,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,QAAQ,IAAI,EAAE,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnE;IACA,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE;IACrB,IAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC;IACxD,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;IAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;IAC/G,KAAK,MAAM;IACX,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC/D,KAAK;IACL,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;IACzC,IAAI,OAAO,CAAC,GAAG,QAAQ,CAAC;IACxB,GAAG;AACH;IACA,EAAE,SAAS,WAAW,GAAG;IACzB,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvC,IAAI,IAAI,MAAM,EAAE,EAAE,OAAO,MAAM,CAAC,EAAE;IAClC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,IAAI,OAAO,GAAG,CAAC,CAAC;IACpB,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;IACjB,IAAI,MAAM,IAAI,EAAE;IAChB,MAAM,OAAO,IAAI,KAAK,CAAC;IACvB,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IACjC,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE;IAClC,OAAO,MAAM;IACb,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,OAAO;IACP,KAAK;IACL,IAAI,IAAI,QAAQ,GAAG,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;IAC1C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;IACrC,IAAI,OAAO,QAAQ,CAAC;IACpB,GAAG;AACH;IACA,EAAE,OAAO,QAAQ,GAAG,MAAM,GAAG,WAAW,CAAC;AACzC;IACA,CAAC;AACD;IACA;AACA;IACA,SAAS,KAAK,CAAC,KAAK,EAAE;IACtB,EAAE,KAAK,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;AACrC;IACA,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;IAC5F,CAAC;AACD;IACA;AACA;IACA,IAAI,MAAM,GAAG,CAAC,YAAY;AAC1B;IACA,EAAE,IAAI,gBAAgB,GAAG,EAAE,CAAC;IAC5B,EAAE,IAAI,eAAe,GAAG,GAAG,IAAI,gBAAgB,GAAG,GAAG,CAAC,CAAC;AACvD;IACA,EAAE,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;IAC7D,EAAE,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;IACvD,EAAE,SAAS,CAAC,CAAC,GAAG,OAAO,EAAE,OAAO,GAAG,GAAG,GAAG,EAAE;AAC3C;IACA,EAAE,SAAS,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE;IACpG,EAAE,SAAS,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AAC1G;IACA,EAAE,SAAS,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;IACjD,IAAI,IAAI,QAAQ,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,GAAG;IACP,MAAM,QAAQ,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC;IACtC,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IACrD,MAAM,IAAI,QAAQ,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,QAAQ,CAAC,EAAE,MAAM,EAAE,EAAE,GAAG,QAAQ,CAAC,EAAE;IACpE,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,SAAS,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;IACzD,IAAI,OAAO,QAAQ,CAAC;IACpB,GAAG;AACH;IACA,EAAE,SAAS,oBAAoB,CAAC,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE;IACvD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAChC,MAAM,IAAI,YAAY,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACrD,MAAM,IAAI,YAAY,KAAK,GAAG,EAAE,EAAE,OAAO,OAAO,CAAC,EAAE;IACnD,MAAM,IAAI,QAAQ,GAAG,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IACxD,MAAM,OAAO,IAAI,QAAQ,GAAG,YAAY,CAAC;IACzC,KAAK;IACL,IAAI,OAAO,OAAO,CAAC;IACnB,GAAG;AACH;IACA,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtC;IACA,IAAI,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE;IACpE,IAAI,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,gBAAgB,CAAC,CAAC;AAC1D;IACA,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,EAAE;IACpC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,EAAE,CAAC,EAAE;IACjD,QAAQ,YAAY,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACpE,OAAO;IACP,KAAK;AACL;IACA,IAAI,SAAS,QAAQ,CAAC,EAAE,EAAE;AAC1B;IACA,MAAM,IAAI,aAAa,GAAG,CAAC,CAAC;IAC5B,MAAM,IAAI,aAAa,GAAG,CAAC,CAAC;IAC5B,MAAM,IAAI,UAAU,GAAG,gBAAgB,GAAG,CAAC,CAAC;AAC5C;IACA,MAAM,OAAO,aAAa,KAAK,UAAU,IAAI,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,EAAE,aAAa,EAAE;IACjG,QAAQ,aAAa,IAAI,eAAe,CAAC;IACzC,OAAO;AACP;IACA,MAAM,EAAE,aAAa,CAAC;AACtB;IACA,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,KAAK,YAAY,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;IACtH,MAAM,IAAI,SAAS,GAAG,aAAa,GAAG,IAAI,GAAG,eAAe,CAAC;IAC7D,MAAM,IAAI,YAAY,GAAG,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACvD;IACA,MAAM,IAAI,YAAY,IAAI,KAAK,EAAE;IACjC,QAAQ,OAAO,oBAAoB,CAAC,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7D,OAAO,MAAM,IAAI,YAAY,KAAK,GAAG,EAAE;IACvC,QAAQ,OAAO,SAAS,CAAC;IACzB,OAAO,MAAM;IACb,QAAQ,OAAO,eAAe,CAAC,EAAE,EAAE,aAAa,EAAE,aAAa,GAAG,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7F,OAAO;AACP;IACA,KAAK;AACL;IACA,IAAI,OAAO,UAAU,CAAC,EAAE;IACxB,MAAM,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;IACnD,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;IAC3C,MAAM,OAAO,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/C,KAAK;AACL;IACA,GAAG;AACH;IACA,EAAE,OAAO,MAAM,CAAC;AAChB;IACA,CAAC,GAAG,CAAC;AACL;IACA,IAAI,MAAM,GAAG,CAAC,YAAY;AAC1B;IACA;AACA;IACA,EAAE,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E;IACA,EAAE,IAAI,eAAe,GAAG;IACxB,IAAI,IAAI,EAAE,YAAY,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IACxF,IAAI,IAAI,EAAE,YAAY,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IACnF,IAAI,IAAI,EAAE,YAAY,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9E,IAAI,MAAM,EAAE,YAAY,EAAE,OAAO,UAAU,CAAC,EAAE;IAC9C,MAAM,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;IACtB,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE;IAC1D,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IACrF,KAAK,CAAC,EAAE;IACR,IAAI,OAAO,EAAE,UAAU,SAAS,EAAE,MAAM,EAAE;IAC1C,MAAM,KAAK,SAAS,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;IAChD,MAAM,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;AAC3C;IACA,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACpC,MAAM,OAAO,UAAU,CAAC,EAAE;IAC1B,QAAQ,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IACvC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9H,OAAO;IACP,KAAK;IACL,GAAG,CAAC;AACJ;IACA,EAAE,IAAI,WAAW,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAChE;IACA,EAAE,WAAW,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,EAAE;IACzC,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,YAAY,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAChG,GAAG,CAAC,CAAC;AACL;IACA,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;IACvD,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;IACvC,IAAI,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC;IACpC,IAAI,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAC3G,IAAI,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAChH,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAC7C,IAAI,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IAC1H,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9C,GAAG,CAAC,CAAC;AACL;IACA,EAAE,OAAO,KAAK,CAAC;AACf;IACA,CAAC,GAAG,CAAC;AACL;IACA,SAAS,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE;IACxC,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,MAAM,CAAC,EAAE;IACxC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,EAAE,IAAI,IAAI,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC;IAC3C,EAAE,QAAQ,IAAI;IACd,IAAI,KAAK,QAAQ,GAAG,OAAO,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACpD,IAAI,KAAK,aAAa,GAAG,OAAO,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7D,IAAI,KAAK,OAAO,GAAG,OAAO,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACtD,IAAI,UAAU,OAAO,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAChD,GAAG;IACH,CAAC;AACD;IACA;AACA;IACA,SAAS,YAAY,CAAC,GAAG,EAAE;IAC3B,EAAE,IAAI;IACN,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAC/C,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG,CAAC,MAAM,CAAC,EAAE;IACb,IAAI,OAAO;IACX,GAAG;IACH,CAAC;AACD;IACA;AACA;IACA,SAAS,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE;IACpC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IACvB,EAAE,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC9D,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;IAClB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAChC,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE;IAClB,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE;IAC/C,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,OAAO;IACP,KAAK;IACL,GAAG;IACH,EAAE,OAAO,MAAM,CAAC;IAChB,CAAC;AACD;IACA,SAAS,YAAY,CAAC,GAAG,EAAE;IAC3B,EAAE,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC/F,CAAC;AACD;IACA,SAAS,OAAO,CAAC,CAAC,EAAE;IACpB,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;IAC9B,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;IAC9C,EAAE,IAAI,CAAC,YAAY,QAAQ,IAAI,CAAC,YAAY,cAAc,EAAE,EAAE,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACxF,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACb,CAAC;AACD;IACA,SAAS,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE;IACjC,EAAE,OAAO,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC;AACD;IACA;AACA;IACA,SAAS,WAAW,CAAC,CAAC,EAAE;IACxB,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC;IACjB,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACvC,EAAE,OAAO,KAAK,CAAC;IACf,CAAC;AACD;IACA,SAAS,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE;IACpC,EAAE,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;IAC1B,EAAE,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACpE,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;IACA,SAAS,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE;IAC9B,EAAE,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;IAC1B,EAAE,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7D,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;IACA;AACA;IACA,SAAS,SAAS,CAAC,QAAQ,EAAE;IAC7B,EAAE,IAAI,GAAG,GAAG,iCAAiC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7D,EAAE,OAAO,GAAG,IAAI,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,QAAQ,CAAC;IACvD,CAAC;AACD;IACA,SAAS,SAAS,CAAC,QAAQ,EAAE;IAC7B,EAAE,IAAI,GAAG,GAAG,kCAAkC,CAAC;IAC/C,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAC5F,EAAE,IAAI,GAAG,GAAG,2CAA2C,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClE,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,EAAE,QAAQ,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,EAAE;IACnD,CAAC;AACD;IACA,SAAS,SAAS,CAAC,QAAQ,EAAE;IAC7B,EAAE,IAAI,GAAG,GAAG,yCAAyC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,sDAAsD,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9I,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACtB,EAAE,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE;IAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE;IAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;IAC9B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IACxD,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;IACH,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACd,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;IACd,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,GAAG,MAAM;IACT,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClD,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,GAAG;IACH,EAAE,QAAQ,OAAO,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE;IACnF,CAAC;AACD;IACA,SAAS,UAAU,CAAC,GAAG,EAAE;IACzB,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;IAC7C,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;IAC7C,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;IAC7C,CAAC;AACD;IACA;AACA;IACA,SAAS,OAAO,CAAC,GAAG,EAAE;IACtB,EAAE,IAAI,KAAK,GAAG,4GAA4G,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrI,EAAE,IAAI,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IACjC,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,QAAQ,EAAE;IACpC,EAAE,IAAI,cAAc,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,QAAQ,KAAK,aAAa,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;IAC3F,EAAE,IAAI,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;IAC/F,CAAC;AACD;IACA;AACA;IACA,SAAS,gBAAgB,CAAC,GAAG,EAAE,UAAU,EAAE;IAC3C,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;IACnC,EAAE,OAAO,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;IACjE,CAAC;AACD;IACA,SAAS,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE;IAChC,EAAE,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;AACD;IACA,SAAS,eAAe,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;IAC1C,EAAE,IAAI,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IACjC,EAAE,IAAI,aAAa,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;IAC/E,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IACvC,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,MAAM,CAAC,EAAE;IACzC,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC;IACrB,EAAE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAClD,EAAE,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,UAAU,KAAK,QAAQ,CAAC,IAAI,EAAE,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;IACjG,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC/B,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;IACrC,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC;IACvC,EAAE,IAAI,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC;IAC7C,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC/B,EAAE,IAAI,aAAa,GAAG,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IACjD,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,aAAa,CAAC;IAC1C,EAAE,OAAO,aAAa,CAAC;IACvB,CAAC;AACD;IACA,SAAS,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;IACrC,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,EAAE;IACxB,IAAI,IAAI,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;IACnF,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC;IAClG,IAAI,OAAO,IAAI,GAAG,eAAe,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;IAC3D,GAAG;IACH,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE;IACpC,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,WAAW,CAAC,EAAE;IACzH,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,WAAW,CAAC,EAAE;IACjF,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,IAAI,KAAK,WAAW,IAAI,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;IACtF,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,OAAO,QAAQ,CAAC,EAAE;IAC5C,CAAC;AACD;IACA,SAAS,oBAAoB,CAAC,EAAE,EAAE;IAClC,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE;IAC9B,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;IACrC,EAAE,IAAI,GAAG,IAAI,mBAAmB,CAAC;IACjC,EAAE,IAAI,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7B,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAClE,EAAE,OAAO,UAAU,CAAC;IACpB,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE;IAC3D,EAAE,IAAI,UAAU,GAAG,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC1F,EAAE,IAAI,KAAK,GAAG,oBAAoB,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC;IACnE,EAAE,IAAI,UAAU,EAAE;IAClB,IAAI,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACpD,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;IAC7C,GAAG;IACH,EAAE,OAAO,IAAI,GAAG,eAAe,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;IACzD,CAAC;AACD;IACA,SAAS,sBAAsB,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE;IACpE,EAAE,QAAQ,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC;IAC5C,IAAI,KAAK,WAAW,EAAE,OAAO,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IACnF,IAAI,KAAK,KAAK,EAAE,OAAO,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC3D,IAAI,KAAK,WAAW,EAAE,OAAO,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC5D,IAAI,SAAS,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1C,GAAG;IACH,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE;IACpC,EAAE,IAAI,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1C,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;IAC/B,EAAE,IAAI,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3B,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3B,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAClD,EAAE,QAAQ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,KAAK,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI,KAAK,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI,KAAK,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,GAAG;IACH,CAAC;AACD;IACA,SAAS,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE;IAClC,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9C,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;IACtC,EAAE,IAAI,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,EAAE,IAAI,QAAQ,GAAG,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;IACtF,EAAE,IAAI,IAAI,EAAE,EAAE,OAAO,QAAQ,GAAG,IAAI,CAAC,EAAE;IACvC,EAAE,OAAO,QAAQ,CAAC;IAClB,CAAC;AACD;IACA;IACA;AACA;IACA,SAAS,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE;IAC7B,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;AACD;IACA,SAAS,eAAe,CAAC,EAAE,EAAE;IAC7B,EAAE,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;AACD;IACA,SAAS,aAAa,CAAC,EAAE,EAAE;IAC3B,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5E,CAAC;AACD;IACA,SAAS,aAAa,CAAC,EAAE,EAAE;IAC3B,EAAE,OAAO,WAAW;IACpB,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1D,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1D,GAAG,CAAC;IACJ,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,EAAE,EAAE;IAC/B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;IACzB,EAAE,IAAI,WAAW,GAAG,CAAC,CAAC;IACtB,EAAE,IAAI,WAAW,CAAC;IAClB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE;IAClD,IAAI,IAAI,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,WAAW,IAAI,WAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,EAAE;IACvE,IAAI,WAAW,GAAG,UAAU,CAAC;IAC7B,GAAG;IACH,EAAE,OAAO,WAAW,CAAC;IACrB,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,EAAE,EAAE;IAC9B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;IACzB,EAAE,OAAO,iBAAiB,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1G,CAAC;AACD;IACA;AACA;IACA,SAAS,cAAc,CAAC,EAAE,EAAE;IAC5B,EAAE,IAAI,EAAE,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,CAAC,cAAc,EAAE,CAAC,EAAE;IACxD,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE;IACjC,IAAI,KAAK,QAAQ,EAAE,OAAO,eAAe,CAAC,EAAE,CAAC,CAAC;IAC9C,IAAI,KAAK,MAAM,EAAE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC;IAC1C,IAAI,KAAK,MAAM,EAAE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC;IAC1C,IAAI,KAAK,UAAU,EAAE,OAAO,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAClD,IAAI,KAAK,SAAS,EAAE,OAAO,gBAAgB,CAAC,EAAE,CAAC,CAAC;IAChD,GAAG;IACH,CAAC;AACD;IACA,SAAS,aAAa,CAAC,EAAE,EAAE;IAC3B,EAAE,IAAI,UAAU,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC;IACtC,EAAE,EAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;IAClD,EAAE,OAAO,UAAU,CAAC;IACpB,CAAC;AACD;IACA;AACA;IACA,SAAS,cAAc,CAAC,EAAE,EAAE;IAC5B,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC;IAC/B,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC3B,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE;IAChD,IAAI,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC;IACnC,GAAG;IACH,EAAE,OAAO,QAAQ,CAAC;IAClB,CAAC;AACD;IACA,SAAS,YAAY,CAAC,MAAM,EAAE,OAAO,EAAE;IACvC,EAAE,IAAI,GAAG,GAAG,OAAO,IAAI,EAAE,CAAC;IAC1B,EAAE,IAAI,WAAW,GAAG,GAAG,CAAC,EAAE,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC;IACrD,EAAE,IAAI,IAAI,GAAG,WAAW,CAAC,qBAAqB,EAAE,CAAC;IACjD,EAAE,IAAI,WAAW,GAAG,YAAY,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACzD,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACzB,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3B,EAAE,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,KAAK,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IAC9F,EAAE,OAAO;IACT,IAAI,EAAE,EAAE,WAAW;IACnB,IAAI,OAAO,EAAE,OAAO;IACpB,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACrB,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACrB,IAAI,CAAC,EAAE,KAAK;IACZ,IAAI,CAAC,EAAE,MAAM;IACb,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAClB,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAClB,GAAG;IACH,CAAC;AACD;IACA,SAAS,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE;IAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC3D,EAAE,IAAI,CAAC,GAAG,OAAO,IAAI,GAAG,CAAC;IACzB,EAAE,OAAO,SAAS,QAAQ,EAAE;IAC5B,IAAI,OAAO;IACX,MAAM,QAAQ,EAAE,QAAQ;IACxB,MAAM,EAAE,EAAE,MAAM;IAChB,MAAM,GAAG,EAAE,YAAY,CAAC,MAAM,CAAC;IAC/B,MAAM,WAAW,EAAE,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;IACrD,KAAK;IACL,GAAG;IACH,CAAC;AACD;IACA,SAAS,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,qBAAqB,EAAE;IAChE,EAAE,SAAS,KAAK,CAAC,MAAM,EAAE;IACzB,IAAI,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;AACxC;IACA,IAAI,IAAI,CAAC,GAAG,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC;IAC3D,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACvC,GAAG;IACH,EAAE,IAAI,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5C,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,EAAE,IAAI,MAAM,GAAG,qBAAqB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;IAC1D,EAAE,IAAI,MAAM,GAAG,qBAAqB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;IAC1D,EAAE,QAAQ,IAAI,CAAC,QAAQ;IACvB,IAAI,KAAK,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;IAC5C,IAAI,KAAK,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;IAC5C,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;IAC9E,GAAG;IACH,CAAC;AACD;IACA;AACA;IACA,SAAS,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;IACnC;IACA;IACA,EAAE,IAAI,GAAG,GAAG,4CAA4C,CAAC;IACzD,EAAE,IAAI,KAAK,GAAG,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC9E,EAAE,OAAO;IACT,IAAI,QAAQ,EAAE,KAAK;IACnB,IAAI,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;IAC1D,GAAG;IACH,CAAC;AACD;IACA;AACA;IACA,SAAS,YAAY,CAAC,OAAO,EAAE;IAC/B,EAAE,IAAI,YAAY,GAAG,OAAO,IAAI,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC9G,EAAE,OAAO,WAAW,CAAC,YAAY,EAAE,UAAU,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;IACtG,CAAC;AACD;IACA,SAAS,cAAc,CAAC,OAAO,EAAE;IACjC,EAAE,IAAI,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IACrC,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACpC,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,oBAAoB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACpG,GAAG,CAAC,CAAC;IACL,CAAC;AACD;IACA;AACA;IACA,SAAS,uBAAuB,CAAC,IAAI,EAAE,aAAa,EAAE;IACtD,EAAE,IAAI,QAAQ,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;IAC5C;IACA,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE;IACvF,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACpB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IACxB,IAAI,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,IAAI,CAAC,QAAQ,EAAE;IACnB;IACA,MAAM,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE;IAC9F,KAAK,MAAM;IACX;IACA,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC3B,KAAK;IACL,GAAG;IACH,EAAE,IAAI,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/C,EAAE,OAAO,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACvC,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACzD;IACA,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;IACxE;IACA,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,QAAQ,GAAG,CAAC,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE;IACzG,IAAI,OAAO,GAAG,CAAC;IACf,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7D,CAAC;AACD;AACA;IACA,SAAS,gBAAgB,CAAC,SAAS,EAAE;IACrC,EAAE,IAAI,aAAa,GAAG,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/I,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACjF,EAAE,IAAI,UAAU,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,IAAI,GAAG,WAAW,CAAC,GAAG;IAC5B,IAAI,IAAI,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IACpC,IAAI,UAAU,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE;IACxD,MAAM,IAAI,MAAM,GAAG,EAAE,CAAC;IACtB,MAAM,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE;IACzB,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;IACvB,UAAU,IAAI,CAAC,IAAI,QAAQ,EAAE,EAAE,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACvD,SAAS,MAAM;IACf,UAAU,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7B,SAAS;IACT,OAAO;IACP,MAAM,OAAO,MAAM,CAAC;IACpB,KAAK,CAAC,CAAC;IACP,GAAG,CAAC;AACJ;IACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;IAC3D,EAAE,OAAO,UAAU,CAAC;IACpB,CAAC;AACD;IACA,SAAS,aAAa,CAAC,aAAa,EAAE,MAAM,EAAE;IAC9C,EAAE,IAAI,UAAU,GAAG,EAAE,CAAC;IACtB,EAAE,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACnC,EAAE,IAAI,SAAS,EAAE,EAAE,MAAM,GAAG,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE;IAChF,EAAE,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;IACxB,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;IACnB,MAAM,UAAU,CAAC,IAAI,CAAC;IACtB,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,MAAM,EAAE,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC;IACjE,OAAO,CAAC,CAAC;IACT,KAAK;IACL,GAAG;IACH,EAAE,OAAO,UAAU,CAAC;IACpB,CAAC;AACD;IACA;AACA;IACA,SAAS,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE;IACjD,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;IACb,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;IACvB,IAAI,IAAI,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACvD,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACvB,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,gBAAgB,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAClF,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IACnD,KAAK;IACL,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACjB,GAAG;IACH,EAAE,CAAC,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtC,EAAE,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAChC,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;IACA,SAAS,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE;IAC3C,EAAE,IAAI,aAAa,CAAC;IACpB,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IACtC,IAAI,IAAI,KAAK,GAAG,oBAAoB,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACpD,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;IACjC,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;IAC7D,IAAI,IAAI,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,IAAI,IAAI,aAAa,GAAG,sBAAsB,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IACjG,IAAI,IAAI,aAAa,GAAG,aAAa,GAAG,aAAa,CAAC,EAAE,CAAC,QAAQ,GAAG,aAAa,CAAC;IAClF,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;IAClE,IAAI,IAAI,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,aAAa,CAAC,CAAC;IAC3D,IAAI,IAAI,IAAI,GAAG,MAAM,IAAI,QAAQ,CAAC;IAClC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,aAAa,CAAC,EAAE;IAC3C,IAAI,KAAK,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,IAAI,KAAK,CAAC,EAAE,GAAG,cAAc,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IAChE,IAAI,KAAK,CAAC,KAAK,GAAG,aAAa,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC;IACxD,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAC5E,IAAI,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC9D,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,qBAAqB,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5E,IAAI,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,IAAI,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,aAAa,GAAG,KAAK,CAAC;IAC1B,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG,CAAC,CAAC;IACL,CAAC;AACD;IACA;AACA;IACA,IAAI,gBAAgB,GAAG;IACvB,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IACpD,EAAE,SAAS,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAChE,EAAE,MAAM,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IACjD,EAAE,SAAS,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE;IACpD,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC,KAAK,UAAU,CAAC,IAAI,IAAI,MAAM,EAAE;IACzC,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC;IACnB,MAAM,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5F,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;IAC9B,KAAK;IACL,GAAG;IACH,CAAC,CAAC;AACF;IACA;AACA;IACA,SAAS,eAAe,CAAC,OAAO,EAAE,UAAU,EAAE;IAC9C,EAAE,IAAI,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;IAC5C,EAAE,WAAW,CAAC,OAAO,CAAC,UAAU,UAAU,EAAE;IAC5C,IAAI,KAAK,IAAI,QAAQ,IAAI,UAAU,EAAE;IACrC,MAAM,IAAI,KAAK,GAAG,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,CAAC;IACrE,MAAM,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IACrC,MAAM,IAAI,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IACrC,MAAM,IAAI,aAAa,GAAG,sBAAsB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IAC1F,MAAM,IAAI,IAAI,GAAG,SAAS,IAAI,OAAO,CAAC,aAAa,CAAC,CAAC;IACrD,MAAM,IAAI,EAAE,GAAG,gBAAgB,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,aAAa,CAAC,CAAC;IAC3E,MAAM,IAAI,QAAQ,GAAG,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACxD,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACpF,KAAK;IACL,GAAG,CAAC,CAAC;IACL,CAAC;AACD;IACA;AACA;IACA,SAAS,eAAe,CAAC,UAAU,EAAE,IAAI,EAAE;IAC3C,EAAE,IAAI,QAAQ,GAAG,gBAAgB,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,EAAE,IAAI,QAAQ,EAAE;IAChB,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACnD,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,IAAI,OAAO;IACX,MAAM,IAAI,EAAE,QAAQ;IACpB,MAAM,QAAQ,EAAE,IAAI,CAAC,IAAI;IACzB,MAAM,UAAU,EAAE,UAAU;IAC5B,MAAM,MAAM,EAAE,MAAM;IACpB,MAAM,QAAQ,EAAE,SAAS,CAAC,GAAG;IAC7B,MAAM,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;IAC5B,MAAM,QAAQ,EAAE,SAAS,CAAC,QAAQ;IAClC,KAAK;IACL,GAAG;IACH,CAAC;AACD;IACA,SAAS,aAAa,CAAC,WAAW,EAAE,UAAU,EAAE;IAChD,EAAE,OAAO,WAAW,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,UAAU,EAAE;IACxE,IAAI,OAAO,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;IAC1C,MAAM,OAAO,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC/C,KAAK,CAAC,CAAC;IACP,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;AACD;IACA;AACA;IACA,SAAS,kBAAkB,CAAC,UAAU,EAAE,aAAa,EAAE;IACvD,EAAE,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;IACrC,EAAE,IAAI,WAAW,GAAG,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC;IAC9F,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC;IACnB,EAAE,OAAO,CAAC,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC;IAC/J,EAAE,OAAO,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC;IACtJ,EAAE,OAAO,CAAC,QAAQ,GAAG,UAAU,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC;IAClM,EAAE,OAAO,OAAO,CAAC;IACjB,CAAC;AACD;IACA,IAAI,UAAU,GAAG,CAAC,CAAC;AACnB;IACA,SAAS,iBAAiB,CAAC,MAAM,EAAE;IACnC,EAAE,IAAI,gBAAgB,GAAG,kBAAkB,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;IAC7E,EAAE,IAAI,aAAa,GAAG,kBAAkB,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;IACvE,EAAE,IAAI,UAAU,GAAG,aAAa,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACxD,EAAE,IAAI,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACnD,EAAE,IAAI,UAAU,GAAG,aAAa,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IAC1D,EAAE,IAAI,OAAO,GAAG,kBAAkB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAC9D,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC;IACtB,EAAE,UAAU,EAAE,CAAC;IACf,EAAE,OAAO,YAAY,CAAC,gBAAgB,EAAE;IACxC,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,QAAQ,EAAE,EAAE;IAChB,IAAI,WAAW,EAAE,WAAW;IAC5B,IAAI,UAAU,EAAE,UAAU;IAC1B,IAAI,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC9B,IAAI,KAAK,EAAE,OAAO,CAAC,KAAK;IACxB,IAAI,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC9B,GAAG,CAAC,CAAC;IACL,CAAC;AACD;IACA;AACA;IACA,IAAI,eAAe,GAAG,EAAE,CAAC;AACzB;IACA,IAAI,MAAM,GAAG,CAAC,YAAY;IAC1B,EAAE,IAAI,GAAG,CAAC;AACV;IACA,EAAE,SAAS,IAAI,GAAG;IAClB,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;IACzG,MAAM,GAAG,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACxC,KAAK;IACL,GAAG;IACH,EAAE,SAAS,IAAI,CAAC,CAAC,EAAE;IACnB;IACA;IACA;IACA,IAAI,IAAI,qBAAqB,GAAG,eAAe,CAAC,MAAM,CAAC;IACvD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,OAAO,CAAC,GAAG,qBAAqB,EAAE;IACtC,MAAM,IAAI,cAAc,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;IAC9C,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;IAClC,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAQ,CAAC,EAAE,CAAC;IACZ,OAAO,MAAM;IACb,QAAQ,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,QAAQ,qBAAqB,EAAE,CAAC;IAChC,OAAO;IACP,KAAK;IACL,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IAC1D,GAAG;AACH;IACA,EAAE,SAAS,sBAAsB,GAAG;IACpC,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE,EAAE,OAAO,EAAE;AACrD;IACA,IAAI,IAAI,gBAAgB,EAAE,EAAE;IAC5B;IACA,MAAM,GAAG,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC;IACtC,KAAK,MAAM;IACX;IACA,MAAM,eAAe,CAAC,OAAO;IAC7B,QAAQ,UAAU,QAAQ,EAAE,EAAE,OAAO,QAAQ,EAAE,qBAAqB,EAAE,CAAC,EAAE;IACzE,OAAO,CAAC;IACR,MAAM,MAAM,EAAE,CAAC;IACf,KAAK;IACL,GAAG;IACH,EAAE,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;IACvC,IAAI,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,CAAC;IAC1E,GAAG;AACH;IACA,EAAE,OAAO,IAAI,CAAC;IACd,CAAC,GAAG,CAAC;AACL;IACA,SAAS,gBAAgB,GAAG;IAC5B,EAAE,OAAO,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;IACvC,CAAC;AACD;IACA;AACA;IACA,SAAS,KAAK,CAAC,MAAM,EAAE;IACvB,EAAE,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;AACvC;AACA;IACA,EAAE,IAAI,SAAS,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;IAC3C,EAAE,IAAI,QAAQ,EAAE,cAAc,GAAG,CAAC,CAAC;IACnC,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC;AACrB;IACA,EAAE,SAAS,WAAW,CAAC,QAAQ,EAAE;IACjC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,OAAO,CAAC,UAAU,QAAQ,EAAE,EAAE,OAAO,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACpG,IAAI,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC;IAChC,IAAI,OAAO,OAAO,CAAC;IACnB,GAAG;AACH;IACA,EAAE,IAAI,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAC3C,EAAgB,WAAW,CAAC,QAAQ,EAAE;AACtC;IACA,EAAE,SAAS,uBAAuB,GAAG;IACrC,IAAI,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;IACvC,IAAI,IAAI,SAAS,KAAK,WAAW,EAAE;IACnC,MAAM,QAAQ,CAAC,SAAS,GAAG,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG,SAAS,CAAC;IACzE,KAAK;IACL,IAAI,QAAQ,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAC3C,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACtF,GAAG;AACH;IACA,EAAE,SAAS,UAAU,CAAC,IAAI,EAAE;IAC5B,IAAI,OAAO,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;IAC/D,GAAG;AACH;IACA,EAAE,SAAS,SAAS,GAAG;IACvB,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;IACpE,GAAG;AACH;IACA,EAAE,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;IAClC,IAAI,IAAI,KAAK,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE;IAC3D,GAAG;AACH;IACA,EAAE,SAAS,oBAAoB,CAAC,IAAI,EAAE;IACtC,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;IACnC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAChF,KAAK,MAAM;IACX,MAAM,KAAK,IAAI,GAAG,GAAG,cAAc,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;IAChF,KAAK;IACL,GAAG;AACH;IACA,EAAE,SAAS,qBAAqB,CAAC,OAAO,EAAE;IAC1C,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IACzC,IAAI,IAAI,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC;IAC7C,IAAI,OAAO,CAAC,GAAG,gBAAgB,EAAE;IACjC,MAAM,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACvC,MAAM,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC/B,MAAM,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1C,MAAM,IAAI,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;IACtC;IACA,MAAM,IAAI,WAAW,EAAE,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,EAAE,QAAQ,OAAO,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE;IAC/G,MAAM,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;IACpG,MAAM,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC7D,MAAM,IAAI,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC;IACrC,MAAM,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC9B,MAAM,IAAI,OAAO,GAAG,EAAE,CAAC;IACvB,MAAM,IAAI,eAAe,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC;IACpD,MAAM,IAAI,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;IAChD,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;IAC7B,QAAQ,IAAI,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3C,QAAQ,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACpD,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IAC3B,UAAU,KAAK,GAAG,UAAU,IAAI,KAAK,IAAI,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC;IACjE,SAAS,MAAM;IACf,UAAU,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,QAAQ,EAAE,KAAK,CAAC,qBAAqB,CAAC,CAAC;IAC9F,SAAS;IACT,QAAQ,IAAI,KAAK,EAAE;IACnB,UAAU,IAAI,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IACzC,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;IACtD,WAAW;IACX,SAAS;IACT,QAAQ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,OAAO;IACP;IACA,MAAM,IAAI,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;IACzC,MAAM,IAAI,CAAC,aAAa,EAAE;IAC1B,QAAQ,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9B,OAAO,MAAM;IACb,QAAQ,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;IAChD,UAAkB,OAAO,CAAC,CAAC,EAAE;IAC7B,UAAU,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,UAAU,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/B,UAAU,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;IAC3B,YAAY,IAAI,CAAC,CAAC,EAAE;IACpB,cAAc,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC;IACpC,aAAa,MAAM;IACnB,cAAc,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC;IAClC,aAAa;IACb,WAAW;IACX,SAAS;IACT,OAAO;IACP,MAAM,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;IACrG,MAAM,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;IACnC,MAAM,CAAC,EAAE,CAAC;IACV,KAAK;IACL,GAAG;AACH;IACA,EAAE,SAAS,WAAW,CAAC,EAAE,EAAE;IAC3B,IAAI,IAAI,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE;IAC1E,GAAG;AACH;IACA,EAAE,SAAS,cAAc,GAAG;IAC5B,IAAI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAE;IAC3D,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;IAC3B,KAAK;IACL,GAAG;AACH;IACA,EAAE,SAAS,mBAAmB,CAAC,UAAU,EAAE;IAC3C,IAAI,IAAI,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACxC,IAAI,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;IAClC,IAAI,IAAI,WAAW,GAAG,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACtD,IAAI,IAAI,OAAO,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;IACzC,IAAI,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,OAAO,GAAG,WAAW,IAAI,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACtE,IAAI,QAAQ,CAAC,eAAe,GAAG,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC;IAC9D,IAAI,IAAI,QAAQ,EAAE,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC,EAAE;IACpD,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,WAAW,GAAG,CAAC,EAAE;IACrD,MAAM,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;IAC5B,MAAM,WAAW,CAAC,OAAO,CAAC,CAAC;IAC3B,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,WAAW,GAAG,CAAC,EAAE;IACzD,MAAM,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;IAChC,MAAM,WAAW,CAAC,WAAW,CAAC,CAAC;IAC/B,KAAK;IACL,IAAI,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE;IAC3D,MAAM,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC/B,KAAK;IACL,IAAI,IAAI,CAAC,OAAO,IAAI,WAAW,IAAI,QAAQ,CAAC,WAAW,KAAK,WAAW,KAAK,CAAC,WAAW,EAAE;IAC1F,MAAM,qBAAqB,CAAC,WAAW,CAAC,CAAC;IACzC,KAAK;IACL,IAAI,IAAI,OAAO,GAAG,QAAQ,IAAI,OAAO,GAAG,WAAW,EAAE;IACrD,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;IACjC,QAAQ,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;IACpC,QAAQ,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;IACzC,QAAQ,WAAW,CAAC,aAAa,CAAC,CAAC;IACnC,OAAO;IACP,MAAM,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC5B,MAAM,qBAAqB,CAAC,OAAO,CAAC,CAAC;IACrC,KAAK,MAAM;IACX,MAAM,IAAI,QAAQ,CAAC,WAAW,EAAE;IAChC,QAAQ,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC;IACxC,QAAQ,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;IACrC,QAAQ,WAAW,CAAC,gBAAgB,CAAC,CAAC;IACtC,OAAO;IACP,KAAK;IACL,IAAI,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;IAC3D,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE;IAClD,IAAI,IAAI,UAAU,IAAI,WAAW,EAAE;IACnC,MAAM,QAAQ,GAAG,CAAC,CAAC;IACnB,MAAM,cAAc,EAAE,CAAC;IACvB,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;IAC/B,QAAQ,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;IACjC,UAAU,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;IACpC,UAAU,WAAW,CAAC,cAAc,CAAC,CAAC;IACtC,UAAU,WAAW,CAAC,UAAU,CAAC,CAAC;IAClC,UAAU,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,IAAI,MAAM,EAAE;IAC5D,YAAY,OAAO,EAAE,CAAC;IACtB,YAAsB,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC5C,WAAW;IACX,SAAS;IACT,OAAO,MAAM;IACb,QAAQ,SAAS,GAAG,GAAG,CAAC;IACxB,QAAQ,WAAW,CAAC,cAAc,CAAC,CAAC;IACpC,QAAQ,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;IACnC,QAAQ,IAAI,QAAQ,CAAC,SAAS,KAAK,WAAW,EAAE;IAChD,UAAU,uBAAuB,EAAE,CAAC;IACpC,SAAS;IACT,OAAO;IACP,KAAK;IACL,GAAG;AACH;IACA,EAAE,QAAQ,CAAC,KAAK,GAAG,WAAW;IAC9B,IAAI,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;IACvC,IAAI,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;IACjC,IAAI,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC;IAC7B,IAAI,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC1B,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;IAC3B,IAAI,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,IAAI,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;IAC/B,IAAI,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;IACjC,IAAI,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;IAC/B,IAAI,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;IACrC,IAAI,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;IACrC,IAAI,QAAQ,CAAC,QAAQ,GAAG,SAAS,KAAK,SAAS,CAAC;IAChD,IAAI,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;IACvC,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACjC,IAAI,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;IACrC,IAAI,KAAK,IAAI,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE;IACxE,IAAI,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,KAAK,SAAS,KAAK,WAAW,IAAI,QAAQ,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,SAAS,EAAE,CAAC,EAAE;IACpI,IAAI,qBAAqB,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACrE,GAAG,CAAC;AACJ;IACA;IACA,EAAE,QAAQ,CAAC,qBAAqB,GAAG,SAAS,CAAC;AAC7C;IACA;AACA;IACA,EAAE,QAAQ,CAAC,GAAG,GAAG,SAAS,OAAO,EAAE,UAAU,EAAE;IAC/C,IAAI,eAAe,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IACzC,IAAI,OAAO,QAAQ,CAAC;IACpB,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,EAAE;IAC9B,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE;IACxC,IAAI,mBAAmB,CAAC,CAAC,GAAG,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IACtE,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE;IACjC,IAAI,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,KAAK,GAAG,WAAW;IAC9B,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;IAC3B,IAAI,SAAS,EAAE,CAAC;IAChB,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,IAAI,GAAG,WAAW;IAC7B,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;IACrC,IAAI,IAAI,QAAQ,CAAC,SAAS,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE;IACjD,IAAI,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;IAC5B,IAAI,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,IAAI,SAAS,EAAE,CAAC;IAChB,IAAI,MAAM,EAAE,CAAC;IACb,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,OAAO,GAAG,WAAW;IAChC,IAAI,uBAAuB,EAAE,CAAC;IAC9B,IAAI,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC;IAC1D,IAAI,SAAS,EAAE,CAAC;IAChB,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,OAAO,GAAG,WAAW;IAChC,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;IACrB,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;IACpB,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,MAAM,GAAG,SAAS,OAAO,EAAE;IACtC,IAAI,IAAI,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IAC7C,IAAI,yBAAyB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACtD,GAAG,CAAC;AACJ;IACA,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC;AACnB;IACA,EAAE,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE;AAC7C;IACA,EAAE,OAAO,QAAQ,CAAC;AAClB;IACA,CAAC;AACD;IACA;AACA;IACA,SAAS,2BAA2B,CAAC,YAAY,EAAE,UAAU,EAAE;IAC/D,EAAE,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;IACxC,IAAI,IAAI,aAAa,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;IACtE,MAAM,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,KAAK;IACL,GAAG;IACH,CAAC;AACD;IACA,SAAS,yBAAyB,CAAC,YAAY,EAAE,QAAQ,EAAE;IAC3D,EAAE,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IACvC,EAAE,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACnC,EAAE,2BAA2B,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;IACxD,EAAE,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;IACtC,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,IAAI,eAAe,GAAG,KAAK,CAAC,UAAU,CAAC;IAC3C,IAAI,2BAA2B,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;IAC/D,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACrF,GAAG;IACH,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE;IACnE,CAAC;AACD;IACA,SAAS,gCAAgC,CAAC,OAAO,EAAE;IACnD,EAAE,IAAI,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IAC3C,EAAE,KAAK,IAAI,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;IAC7C,IAAI,IAAI,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,yBAAyB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACtD,GAAG;IACH,CAAC;AACD;IACA;AACA;IACA,SAAS,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE;IAC9B,EAAE,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;AACvC;IACA,EAAE,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,QAAQ,CAAC;IAC/C,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClE,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IACzB,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IACzB,EAAE,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC;IACnC,EAAE,IAAI,SAAS,GAAG,SAAS,KAAK,OAAO,CAAC;IACxC,EAAE,IAAI,UAAU,GAAG,SAAS,KAAK,QAAQ,CAAC;IAC1C,EAAE,IAAI,QAAQ,GAAG,SAAS,KAAK,MAAM,CAAC;IACtC,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,EAAE,IAAI,IAAI,GAAG,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;IAC5D,EAAE,IAAI,IAAI,GAAG,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C,EAAE,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAClD,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;IACvD,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,QAAQ,GAAG,CAAC,CAAC;IACnB,EAAE,OAAO,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,SAAS,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC,EAAE;IACrC,IAAI,IAAI,UAAU,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;IAChD,IAAI,IAAI,QAAQ,EAAE,EAAE,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IACxC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;IACxB,MAAM,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;IAC9C,QAAQ,IAAI,CAAC,IAAI,EAAE;IACnB,UAAU,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;IACnD,SAAS,MAAM;IACf,UAAU,IAAI,KAAK,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACtE,UAAU,IAAI,KAAK,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAClF,UAAU,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,UAAU,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,UAAU,IAAI,SAAS,GAAG,KAAK,GAAG,GAAG,CAAC;IACtC,UAAU,IAAI,SAAS,GAAG,KAAK,GAAG,GAAG,CAAC;IACtC,UAAU,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;IAC/E,UAAU,IAAI,IAAI,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,SAAS,CAAC,EAAE;IACnD,UAAU,IAAI,IAAI,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,SAAS,CAAC,EAAE;IACnD,UAAU,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,SAAS;IACT,QAAQ,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChD,OAAO;IACP,MAAM,IAAI,MAAM,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE;IACxG,MAAM,IAAI,SAAS,KAAK,SAAS,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IACrJ,KAAK;IACL,IAAI,IAAI,OAAO,GAAG,OAAO,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC;IAC5D,IAAI,OAAO,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC1E,GAAG;IACH,CAAC;AACD;IACA;AACA;IACA,SAAS,QAAQ,CAAC,MAAM,EAAE;IAC1B,EAAE,KAAK,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;AACvC;IACA,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IACzB,EAAE,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;IAClB,EAAE,EAAE,CAAC,GAAG,GAAG,SAAS,cAAc,EAAE,cAAc,EAAE;IACpD,IAAI,IAAI,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC9C,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;IAC/B,IAAI,IAAI,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE;IAC7D,IAAI,SAAS,WAAW,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE;IACzD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3E,IAAI,IAAI,SAAS,GAAG,YAAY,CAAC,cAAc,EAAE,kBAAkB,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC;IACnG,IAAI,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;IAC5D,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC;IACjC,IAAI,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC/B,IAAI,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;IACvC,IAAI,SAAS,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,UAAU,GAAG,gBAAgB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IAClH,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;IACpB,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;IAC/B,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;IACrB,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACvD,IAAI,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAC7B,IAAI,EAAE,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACnC,IAAI,EAAE,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACnC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACf,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;IACf,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE;IACnC,IAAI,OAAO,EAAE,CAAC;IACd,GAAG,CAAC;IACJ,EAAE,OAAO,EAAE,CAAC;IACZ,CAAC;AACD;IACA,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IAChB;IACA,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC;IACvC,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC;IAChC,KAAK,CAAC,MAAM,GAAG,gCAAgC,CAAC;IAChD,KAAK,CAAC,GAAG,GAAG,sBAAsB,CAAC;IACnC,KAAK,CAAC,GAAG,GAAG,eAAe,CAAC;IAC5B,KAAK,CAAC,SAAS,GAAG,eAAe,CAAC;IAClC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;IACrB,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;IACpC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;IAC5B,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,KAAK,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClsCtE,GAAA,QAAA,CAAA,OAAA,EAAA,MAAA,EAAA,kBAAA,YAAA,GAAI,IAAC,KAAK,CAAA,CAAA;IACR,GAAA,QAAA,CAAA,OAAA,EAAA,QAAA,EAAA,oBAAA,YAAA,GAAI,IAAC,KAAK,CAAA,CAAA;;;;;;;;;;;IATb,GAAA,SAAA,CAAA,GAAA,EAAA,QAAA,aAAA,GAAM,IAAC,IAAI,GAAA,IAAA,CAAA,CAAA;2CACX,GAAM,CAAA,CAAA,CAAA,CAAC,GAAG,CAAC,CAAC,CAAA,GAAA,IAAA,CAAA,CAAA;0CACb,GAAM,CAAA,CAAA,CAAA,CAAC,GAAG,CAAC,CAAC,CAAA,GAAA,IAAA,CAAA,CAAA;;;;OAL5B,UAsBM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAdF,UAaM,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAXF,UAUE,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;IATQ,GAAA,IAAA,KAAA,aAAA,CAAA,IAAA,kBAAA,MAAA,kBAAA,YAAA,GAAI,IAAC,KAAK,CAAA,EAAA;;;;IACR,GAAA,IAAA,KAAA,aAAA,CAAA,IAAA,oBAAA,MAAA,oBAAA,YAAA,GAAI,IAAC,KAAK,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAb3B,GAAK,CAAA,CAAA,CAAA,CAAA;;;;oCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;OADV,UA0BM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;+BAzBK,GAAK,CAAA,CAAA,CAAA,CAAA;;;;mCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SArEF,MAAM,GAAA;IACN,EAAA,IAAI,EAAE,EAAE;MACR,GAAG,EAAA,CAAG,GAAG,EAAE,GAAG,CAAA;MACd,KAAK,EAAA,CAAG,EAAE,EAAE,GAAG,CAAA;MACf,KAAK,EAAA,CAAG,EAAE,EAAE,GAAG,CAAA;IACf,EAAA,QAAQ,EAAE,IAAI;;;SAQd,KAAa,CAAA;IACb,CAAA,IAAA,MAAM,GAAY,IAAI,CAAA;;cAEjB,KAAK,GAAA;MACV,KAAK,CAAA;OACD,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAA;IACnC,GAAA,UAAU,EAAE,CAAC;IACb,GAAA,UAAU,EAAE,CAAC;IACb,GAAA,MAAM,EAAE,CAAC;IACT,GAAA,OAAO,EAAE,CAAC;IACV,GAAA,QAAQ,EAAE,CAAC;;;;cAIH,IAAI,GAAA;IACZ,EAAA,IAAA,KAAK,GAAS,MAAA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAA,CAAA;UAC3B,UAAU,GAAA,MAAS,QAAQ,CAAE,CAAA,CAAC,GAAG,CAAC,CAAA,CAAA,IAAM,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;UAChF,UAAU,GAAA,MAAS,QAAQ,CAAE,CAAA,CAAC,GAAG,CAAC,CAAA,CAAA,IAAM,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;IAChF,EAAA,IAAA,MAAM,GAAS,MAAA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAA,CAAA;UAC5B,KAAK,GAAA,MAAS,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,GAAI,EAAE,CAAA;MAEtC,KAAK,EAAA,CAAA;IACL,EAAA,YAAA,CAAA,CAAA,EAAA,MAAM,GAAG,KAAK,CAAA,CAAA;;MAEd,KAAK,CAAA;OACD,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAA;OACnC,UAAU;OACV,UAAU;OACV,MAAM;OACN,KAAK;OACL,KAAK;OACL,OAAO,EAAA;IACH,IAAA,KAAK,EAAE,CAAC;IACR,IAAA,MAAM,EAAE,QAAQ;IAChB,IAAA,KAAK,EAAE,MAAM,CAAC,QAAQ,GAAG,GAAG;IAC5B,IAAA,QAAQ,EAAE,GAAG;;IAEjB,GAAA,MAAM,EAAE,gBAAgB;OACxB,QAAQ,EAAE,MAAM,CAAC,QAAQ;OACzB,QAAQ,EAAA,MAAA,YAAA,CAAA,CAAA,EAAQ,MAAM,GAAG,IAAI,CAAA;;;;IAI1B,CAAA,IAAA,EAAA,SAAS,GAAW,GAAG,EAAA,GAAA,OAAA,CAAA;;IAElC,CAAA,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,CAAA,MAAA;;IAC3B,GAAA,GAAG,EAAE,SAAS;IACd,GAAA,KAAK,EAAE,QAAQ,CAAA,CAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAA,CAAA;;;;IAG9C,CAAA,OAAO,CAAC,KAAK,CAAA,CAAA;;;;;;;;;8BAQW,GAAG,GAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC7EvB,SAAS,GAAA,EAAA,CAAA;;aAEG,KAAK,CAAC,IAAY,EAAE,EAAuB,EAAA;SACnD,KAAK,GAAG,SAAS,CAAC,IAAI,CAAA,IAAA,EAAA,CAAA;KAC1B,KAAK,CAAC,IAAI,CAAC,EAAE,CAAA,CAAA;KACb,SAAS,CAAC,IAAI,CAAA,GAAI,KAAK,CAAA;;;aAGX,OAAO,CAAC,IAAY,EAAE,IAAS,EAAA;SACvC,KAAK,GAAG,SAAS,CAAC,IAAI,CAAA,IAAA,EAAA,CAAA;KAC1B,KAAK,CAAC,OAAO,CAAC,IAAI,IACd,UAAU,CAAA,MAAO,IAAI,CAAC,IAAI,CAAA,EAAG,CAAC,CAAA,CAAA,CAAA;;;;;UCHzB,SAAS,CAAA;IAMlB,CAAA,WAAR,CAAoB,GAAW,EAAE,OAAe,EAAE,MAAe,EAAA;MACrD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAA;MACf,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;IACvB,EAAA,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,CAAA;;;KAG9B,GAAG,GAAA;IACK,EAAA,IAAA,OAAO,GACP,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAA,CAAA;MAEnE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA,MAClB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAA,EAAA,CAAA,EAAO,OAAO,CAAA,CAAA;;;KAI7C,MAAM,GAAA;MACF,YAAY,CAAC,IAAI,CAAC,UAAU,CAAA,CAAA;;;KAGhC,KAAK,GAAA;IACD,EAAA,IAAI,CAAC,MAAM,EAAA,CAAA;IACX,EAAA,IAAI,CAAC,GAAG,EAAA,CAAA;;;;;;aCWAC,IAAE,CAA2B,IAAU,EAAE,EAA8B,EAAA;KACnF,KAAK,CAAC,IAAI,EAAE,EAAE,CAAA,CAAA;;;aAGFC,MAAI,CAA2B,IAAU,EAAE,IAAiB,EAAA;KACxE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAA,CAAA;;;IAGN,SAAAC,aAAW,CAAC,GAAe,EAAE,OAAe,EAAE,MAAe,EAAA;IAC9D,CAAA,OAAA,IAAA,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,CAAA,CAAA;;;;;QCpC9CC,OAAW,CAAA;IACX,IAAA,WAAW,GAAGD,aAAW,CAAC,iBAAiB,EAAE,IAAI,CAAA,CAAA;IACjD,IAAA,OAAO,GAAGA,aAAW,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAA,CAAA;QAE/C,SAAS,GAAA,EAAA,CAAA;IACT,IAAA,QAAQ,IAAY,CAAC,CAAA;QACrB,EAAE,GAAA,CAAc,CAAC,EAAE,CAAC,CAAA,CAAA;;aAEf,OAAO,GAAA;SACR,IAAI,GAAG,IAAI,CAAC,MAAM,EAAA,CAAA;SAClB,KAAK,GAAA,EAAA,CAAA;;IACA,CAAA,KAAA,IAAA,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAA;IACvC,EAAA,KAAK,CAAC,IAAI,CACN,CAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,EACf,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAA,CAAA,CAAA,CAAA,CAAA;;;SAGrB,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAA,CAAA;YAClB,IAAI,CAAA;;;IAGN,SAAA,YAAY,CAAC,UAAkB,EAAA;SAChC,KAAK,GAAA,EAAA,CAAA;SACL,IAAI,GAAA,EAAA,CAAA;;cAEC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAA,EAAA;UACrB,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAA,CAAA;MACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA,CAAA;;UAET,IAAI,CAAC,MAAM,IAAI,UAAU,EAAA;OACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;OACf,IAAI,GAAA,EAAA,CAAA;;;;YAIL,KAAK,CAAA;;;aAGP,OAAO,GAAA;YACL,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAA,CAAA,CAAA;;;aAGzB,YAAY,GAAA;IACb,CAAA,IAAA,IAAI,GAAG,OAAO,EAAA,CAAA;SAEd,QAAQ,GAAA,CAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAA,IAAK,EAAE,CAAA;IAEnC,CAAA,IAAA,EAAE,GAAG,GAAG,CAAA;SAER,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;SACX,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,EAAG,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA;IACrB,CAAA,IAAA,CAAC,GAAG,EAAE,GAAC,EAAE,GAAG,EAAE,CAAA;SAEd,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;IACX,CAAA,IAAA,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAG,EAAA,EAAE,CAAC,CAAC,CAAI,GAAA,CAAC,GAAG,EAAE,CAAA,CAAA;IAC/B,CAAA,IAAA,CAAC,GAAG,EAAE,GAAC,EAAE,GAAG,EAAE,CAAA;SAEd,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;IAEX,CAAA,IAAA,IAAI,GAAG,OAAO,CAAE,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;SAEpB,OAAO,GAAG,OAAO,CAAA,CACjB,GAAG,EACH,GAAG,GAAG,QAAQ,EAAK,GAAA,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,EAC5B,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAA,CAAA,CAAA;SAG9B,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAA,CAAA;;IAE7C,CAAA,SAAS,CAAC,IAAI,CAAA;MACV,IAAI;MACJ,IAAI;MACJ,EAAE;MACF,QAAQ;MACR,OAAO;MACP,OAAO;;;;aAIN,aAAa,GAAA;IACd,CAAA,IAAA,IAAI,GAAG,OAAO,EAAA,CAAA;SACd,QAAQ,GAAA,CAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAA,IAAK,EAAE,CAAA;IAEnC,CAAA,IAAA,EAAE,GAAG,GAAG,CAAA;SAER,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;SACX,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,EAAG,EAAE,CAAC,CAAC,CAAA,GAAI,CAAC,CAAA,CAAA;IAC1B,CAAA,IAAA,CAAC,GAAG,EAAE,GAAC,EAAE,GAAG,EAAE,CAAA;IAEd,CAAA,IAAA,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAG,EAAA,EAAE,CAAC,CAAC,CAAI,GAAA,CAAC,GAAG,EAAE,CAAA,CAAA;SAC/B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;IACX,CAAA,IAAA,CAAC,GAAG,EAAE,GAAC,EAAE,GAAG,EAAE,CAAA;SAEd,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;IAEX,CAAA,IAAA,IAAI,IAAI,GAAG,EAAE,SAAS,EAAK,GAAA,CAAC,GAAG,CAAC,CAAA,CAAA;IAChC,CAAA,IAAA,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;SAElB,OAAO,GAAG,OAAO,CAAA,CACjB,GAAG,EACH,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAA,EAC3B,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAA,CAAA,CAAA;SAG9B,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAA,CAAA;;IAE7C,CAAA,SAAS,CAAC,IAAI,CAAA;MACV,IAAI;MACJ,IAAI;MACJ,EAAE;MACF,QAAQ;MACR,OAAO;MACP,OAAO;;;;aAIN,WAAW,GAAA;IACZ,CAAA,IAAA,IAAI,GAAG,OAAO,EAAA,CAAA;SAEd,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,EAAG,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;SACxB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,EAAG,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;IAExB,CAAA,IAAA,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAA,CAAA;IACtB,CAAA,IAAA,IAAI,GAAG,OAAO,CAAE,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;IACpB,CAAA,IAAA,EAAE,GAAG,GAAG,CAAA;SAER,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;SACX,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAA;SAEnB,OAAO,GAAG,OAAO,CAAA,CACjB,GAAG,EACH,GAAG,GAAG,QAAQ,EAAK,GAAA,IAAI,CAAC,GAAG,IAAI,IAAI,CAAA,EACnC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAA,CAAA,CAAA;SAG9B,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAA,CAAA;;IAE7C,CAAA,SAAS,CAAC,IAAI,CAAA;MACV,IAAI;MACJ,IAAI;MACJ,EAAE;MACF,QAAQ;MACR,OAAO;MACP,OAAO;;;;aAIN,WAAW,GAAA;IACZ,CAAA,IAAA,IAAI,GAAG,OAAO,EAAA,CAAA;SAEd,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,EAAG,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;SACxB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,EAAG,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;SAExB,IAAI,GAAG,CAAC,GAAG,CAAC,CAAA;IAEZ,CAAA,IAAA,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAA,CAAA;IACtB,CAAA,IAAA,IAAI,IAAI,IAAI,EAAE,QAAQ,CAAE,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;IAC5B,CAAA,IAAA,EAAE,GAAG,GAAG,CAAA;IAER,CAAA,IAAA,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;IACnB,CAAA,IAAA,QAAQ,GAAI,CAAC,GAAG,CAAC,GAAI,EAAE,CAAA;SAEvB,OAAO,GAAG,OAAO,CAAA,CACjB,GAAG,EACH,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,QAAQ,EAAA,GAAK,GAAG,GAAG,CAAC,EACpC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAA,CAAA,CAAA;SAG9B,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAA,CAAA;;IAE7C,CAAA,SAAS,CAAC,IAAI,CAAA;MACV,IAAI;MACJ,IAAI;MACJ,EAAE;MACF,QAAQ;MACR,OAAO;MACP,OAAO;;;;aAIN,aAAa,GAAA;SACd,MAAM,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;;aACnB,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAA;WAC5B,WAAW;OACZ,YAAY,EAAA,CAAA;OACZ,aAAa,EAAA,CAAA;;WAEZ,SAAS;OACV,WAAW,EAAA,CAAA;OACX,WAAW,EAAA,CAAA;;;;;aAKd,iBAAiB,GAAA;SAClB,MAAM,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;IACvB,CAAA,IAAA,UAAU,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,CAAA;;IAE1B,CAAA,KAAA,IAAA,GAAG,GAAG,UAAU,EAAE,GAAG,KAAK,CAAC,IAAA;MAEhC,aAAa,EAAA,CAAA;;;;UAIf,SAAS,CAAA;KAEX,WAAR,GAAA;eACqB,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAA,EAAA;eACjB,GAAG,CAAC,CAAC,CAAA,CAAE,iBAAiB,EAAA;aACvB,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;;;;;KAK3D,QAAQ,GAAA;UACA,MAAM,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;IAE3B,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;IACb,EAAA,WAAW,CAAC,MAAM,EAAA,CAAA;MAElB,QAAQ,EAAA,CAAA;UAEJ,QAAQ,IAAI,SAAS,CAAC,MAAM,EAC5B,KAAK,CAAA,CAAA,0BAAA,EAA8B,QAAQ,CAAA,QAAA,EAAW,SAAS,CAAC,MAAM,CAAA,CAAA,CAAA,CAAA;UAEtE,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAA,CAAA;IAC1B,EAAA,IAAA,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,QAAQ,CAAA;IAEnC,EAAA,IAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAA;;MAEtCC,OAAK,GAAA;IACD,GAAA,UAAU,EAAE,KAAK;IACjB,GAAA,SAAS,EAAE,CAAC;IACZ,GAAA,KAAK,EAAE,aAAa;OACpB,QAAQ;UACL,KAAK;;;MAGZF,MAAI,CAAC,oBAAoB,EAAEE,OAAK,CAAA,CAAA;;;KAGpC,UAAU,GAAA;IACE,EAAA,QAAAA,OAAK,CAAC,KAAK;YACV,aAAa;IACd,IAAAF,MAAI,CAAC,cAAc,CAAA,CAAA;;YAElB,UAAU;IACX,IAAAA,MAAI,CAAC,iBAAiB,CAAA,CAAA;;;;;KAKlC,KAAK,GAAA;UACGE,OAAK,CAAC,KAAK,KAAK,UAAU,EAAA,OAAA;UAG1BA,OAAK,CAAC,UAAU,IAAI,CAAC,EAAA,OAAA;IAGrB,EAAA,IAAA,OAAO,GAAGA,OAAK,CAAC,SAAS,KAAKA,OAAK,CAAC,OAAO,CAAA;IAE/C,EAAAF,MAAI,CAAC,OAAO,GAAG,WAAW,GAAG,UAAU,CAAA,CAAA;;;IAG3C,CAAA,SAAS,CAAC,IAA0B,EAAA;IAChC,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;;IAEL,EAAA,QAAAE,OAAK,CAAC,KAAK;YACV,aAAa;QACdA,OAAK,CAAC,KAAK,GAAG,QAAQ,CAAA;;YAErB,QAAQ;IACT,IAAAA,OAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAA;QAC5BA,OAAK,CAAC,KAAK,GAAG,UAAU,CAAA;IACxB,IAAA,IAAI,CAAC,KAAK,EAAA,CAAA;;YAET,UAAU;IACX,IAAAF,MAAI,CAAC,iBAAiB,CAAA,CAAA;;;;MAI9BA,MAAI,CAAC,oBAAoB,EAAEE,OAAK,CAAA,CAAA;;;KAGpC,GAAG,GAAA;UACKA,OAAK,CAAC,UAAU,KAAK,CAAC,EAAA;IACtB,GAAAF,MAAI,CAAC,YAAY,CAAA,CAAA;;OAEjB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAA,CAAA;;;IAGlB,EAAA,WAAW,CAAC,KAAK,EAAA,CAAA;;;KAGrB,EAAE,GAAA;MACE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;MACb,aAAa,EAAA,CAAA;;;KAGjB,IAAI,GAAA;MACA,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;MACf,aAAa,EAAA,CAAA;;;KAGjB,IAAI,GAAA;IACA,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;MACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;;;;IAIV,MAAA,QAAQ,OAAkB,SAAS,EAAA,CAAA;IAEhD,iBAAiB,EAAA;;;;;;;;;;;;;;2BC/ShB,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;8CALC,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAOS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;4DADJ,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CAJW,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;SAjB/B,MAAc,CAAA;WAEP,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;;IAErB,CAAA,SAAA,UAAU,CAAC,IAAU,EAAA;IAC1B,EAAA,YAAA,CAAA,CAAA,EAAA,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAA,CAAA,CAAA;;;KAGrCD,IAAE,CAAC,oBAAoB,EAAE,UAAU,CAAA,CAAA;SAE/B,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBCuB3B,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;8CAVG,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;8CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAYS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;iDATK,GAAO,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;;;IAGK,KAAA,gBAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,EAAA,IAAA,GAAG,GACpB,YAAY,EAAE,KAAK,CACnB,EAAA,CAAA,UAAU,EAAE,IAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;wDAGpB,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CATa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;+CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAzBzB,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,KAAa,EAAA,GAAA,OAAA,CAAA;IACb,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;SAEtB,IAAY,CAAA;SACZ,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;SACxB,MAAc,CAAA;SACd,GAAW,CAAA;;cAEN,OAAO,GAAA;IACZ,EAAAC,MAAI,CAAC,aAAa,CAAA,CAAA;;;IAGb,CAAA,SAAA,UAAU,CAAC,IAAU,EAAA;sBAC1B,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAA,CAAE,cAAc,CAAC,IAAI,CAAA,CAAA,CAAA;MAC3C,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA;IACrC,EAAA,YAAA,CAAA,CAAA,EAAA,GAAG,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA,CAAA;;;KAGnCD,IAAE,CAAC,oBAAoB,EAAE,UAAU,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBCGlC,GAAG,CAAA,CAAA,CAAA,CAAA,CAAA;8CANI,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAQS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;sDADJ,GAAG,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CALc,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAhBxB,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;IAE1B,CAAA,IAAA,GAAG,GAAW,GAAG,CAAA;SACjB,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;IAEnB,CAAA,SAAA,UAAU,CAAC,IAAU,EAAA;sBAC1B,GAAG,GAAG,IAAI,CAAC,EAAE,CAAA,CAAA;;;KAGjBA,IAAE,CAAC,oBAAoB,EAAE,UAAU,CAAA,CAAA;;;;;;;;;;;;;;IAOnB,CAAA,MAAA,aAAA,GAAA,MAAA,GAAG,CAAC,UAAU,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BCoC7B,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;4CANC,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;6CACK,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;8CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAQQ,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;iDALM,GAAO,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;;;;;;;;;0DAIhB,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;6CANC,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CACK,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;+CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;SAlDhC,KAAa,CAAA;SACb,MAAc,CAAA;SACd,MAAc,CAAA;SACd,GAAW,CAAA;WAEJ,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,KAAa,EAAA,GAAA,OAAA,CAAA;IACb,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;;cAEjB,OAAO,GAAA;MACZC,MAAI,CAAC,cAAc,EAAA,EAAG,KAAK,EAAA,CAAA,CAAA;;;IAGtB,CAAA,SAAA,OAAO,CAAC,IAAU,EAAA;IACnB,EAAA,IAAA,IAAI,CAAC,KAAK,KAAK,aAAa,SACrB,IAAI,CAAA;IAER,EAAA,OAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAE,CAAA,cAAc,CAAC,IAAI,CAAA,CAAA;;;IAGzC,CAAA,SAAA,QAAQ,CAAC,IAAU,EAAA;IACpB,EAAA,IAAA,IAAI,CAAC,KAAK,KAAK,aAAa,SACrB,aAAa,CAAA;IAEpB,EAAA,IAAA,IAAI,CAAC,KAAK,KAAK,QAAQ,SAChB,eAAe,CAAA;IAEtB,EAAA,IAAA,IAAI,CAAC,OAAO,KAAK,KAAK,SACf,cAAc,CAAA;IAErB,EAAA,IAAA,IAAI,CAAC,SAAS,KAAK,KAAK,SACjB,aAAa,CAAA;aAEjB,YAAY,CAAA;;;IAGd,CAAA,SAAA,UAAU,CAAC,IAAU,EAAA;sBAC1B,KAAK,GAAG,OAAO,CAAC,IAAI,CAAA,CAAA,CAAA;sBACpB,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAA,CAAA,CAAA;MAEtB,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA;IACtC,EAAA,YAAA,CAAA,CAAA,EAAA,GAAG,GAAG,EAAE,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA,CAAA;;;KAGpCD,IAAE,CAAC,oBAAoB,EAAE,UAAU,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBCvB9B,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;wBAOF,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;+CAXS,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;+CAOR,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;0CARL,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;0CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAAxC,UAcM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAbF,UAKS,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;;OAET,UAKS,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;qDARJ,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;qDAOF,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;2CAZY,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;2CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAhBzB,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;SAE1B,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;IACxB,CAAA,IAAA,EAAE,GAAW,GAAG,CAAA;IAChB,CAAA,IAAA,EAAE,GAAW,GAAG,CAAA;;IAEX,CAAA,SAAA,UAAU,CAAC,IAAU,EAAA;IAC1B,EAAA,YAAA,CAAA,CAAA,EAAA,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,CAAA,QAAQ,KAAK,GAAG,CAAA,CAAA;IAClD,EAAA,YAAA,CAAA,CAAA,EAAA,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,CAAA,QAAQ,KAAK,GAAG,CAAA,CAAA;;;KAGtDA,IAAE,CAAC,oBAAoB,EAAE,UAAU,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BCW9B,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;8CAJC,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;0CAFD,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;0CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAAxC,UAQM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAPF,UAMS,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;4DADJ,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;2CANQ,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;2CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAfzB,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;SAE1B,MAAc,CAAA;SACd,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;IAEnB,CAAA,SAAA,UAAU,CAAC,IAAU,EAAA;sBAC1B,MAAM,GAAG,IAAI,CAAC,QAAQ,GAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAA,GAAK,GAAG,CAAA,CAAA;;;KAGtCA,IAAE,CAAC,oBAAoB,EAAE,UAAU,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCCsCZ,CAAC,EAAA;;;;;;;kCAED,CAAC,EAAA;;;;;iCACD,CAAC,EAAA;;;;;iCACD,CAAC,EAAA;;;;;iCACD,CAAC,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAjDpB,QAAkB,CAAA;;cAEb,IAAI,GAAA;IACT,EAAA,QAAQ,CAAC,IAAI,EAAA,CAAA;IACb,EAAAN,QAAI,CAAC,IAAI,EAAA,CAAA;;;IAGb,CAAAM,IAAE,CAAC,iBAAiB,EAAQ,MAAAN,QAAI,CAAC,QAAQ,EAAA,CAAA,CAAA;KACzCM,IAAE,CAAC,cAAc,EAAE,IAAI,IAAIN,QAAI,CAAC,SAAS,CAAC,IAAI,CAAA,CAAA,CAAA;IAC9C,CAAAM,IAAE,CAAC,aAAa,EAAQ,MAAAN,QAAI,CAAC,UAAU,EAAA,CAAA,CAAA;KACvCM,IAAE,CAAC,YAAY,EAAA,MAAQ,IAAI,EAAA,CAAA,CAAA;IAC3B,CAAAA,IAAE,CAAC,WAAW,EAAQ,MAAAN,QAAI,CAAC,GAAG,EAAA,CAAA,CAAA;IAC9B,CAAAM,IAAE,CAAC,UAAU,EAAQ,MAAAN,QAAI,CAAC,EAAE,EAAA,CAAA,CAAA;IAC5B,CAAAM,IAAE,CAAC,YAAY,EAAQ,MAAAN,QAAI,CAAC,IAAI,EAAA,CAAA,CAAA;IAChC,CAAAO,MAAI,CAAC,iBAAiB,CAAA,CAAA;;SAElB,MAAM,GAAA;MACN,KAAK,EAAA,CAAA;;;;;;MAML,IAAI,EAAA,CAAA,WAAA,CAAA;MACJ,IAAI,EAAA,CAAA,qBAAA,CAAA;MACJ,QAAQ,EAAA;IACJ,GAAA,GAAG,EAAE,eAAe;IACpB,GAAA,EAAE,EAAG,eAAe;IACpB,GAAA,EAAE,EAAG,aAAa;IAClB,GAAA,GAAG,EAAE,cAAc;IACnB,GAAA,EAAE,EAAG,eAAe;IACpB,GAAA,GAAG,EAAE,cAAc;;;;;;;;;;;;OAoBN,QAAQ,GAAA,OAAA,CAAA;;;;;IAbb,CAAA,MAAA,aAAA,GAAA,MAAAA,MAAI,CAAC,aAAa,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aCnBlBD,IAAE,CAA2B,IAAU,EAAE,EAA8B,EAAA;KACnF,KAAK,CAAC,IAAI,EAAE,EAAE,CAAA,CAAA;;;aAGFC,MAAI,CAA2B,IAAU,EAAE,IAAiB,EAAA;KACxE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAA,CAAA;;;;;QC1BlB,KAAW,CAAA;;UAET,OAAO,CAAA;SAEL,IAAI,GAAA;aACG,KAAK,CAAA;;;KAGhB,QAAQ,GAAA;MACJ,KAAK,GAAA;IACD,GAAA,UAAU,EAAE,CAAC;OACb,IAAI,EAAA,CAAG,CAAC,EAAE,CAAC,CAAA;OACX,QAAQ,EAAA;IACF,IAAA,EAAA,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAA;IACnB,IAAA,EAAA,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAA;IACnB,IAAA,EAAA,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAA;IACnB,IAAA,EAAA,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAA;;;;MAI7BA,MAAI,CAAC,kBAAkB,EAAE,KAAK,CAAA,CAAA;;;KAGlC,EAAE,GAAA;;;;KAIF,IAAI,GAAA;;;;KAEJ,IAAI,GAAA;;;;;IAGK,MAAA,MAAM,OAAgB,OAAO,EAAA;;;;;;;;;;;;;;wBCjBzC,GAAG,CAAA,CAAA,CAAA,CAAA,CAAA;8CALI,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAOS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;iDAJK,GAAO,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;;;;;;;;;8CADC,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAfxB,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;IAE1B,CAAA,IAAA,GAAG,GAAW,IAAI,CAAA;SAClB,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;cAEnB,OAAO,GAAA;IACZ,EAAAA,MAAI,CAAC,UAAU,CAAA,CAAA;MACf,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBCMzC,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;8CAJG,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAMS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;wDADJ,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CAHa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAfxB,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;IAE1B,CAAA,IAAA,IAAI,GAAW,CAAC,CAAA;SAChB,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;IAEZ,CAAA,SAAA,QAAQ,CAAC,GAAW,EAAA;IAChC,EAAA,YAAA,CAAA,CAAA,EAAA,IAAI,GAAG,GAAG,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICyCb,CAAA,IAAA,OAAA,GAAA,SAAA,GAAG,MAAG,CAAC;iBAAG,GAAK,CAAA,CAAA,CAAA;IAAG,SAAA,GAAC,IAAC,MAAM,IAAA,EAAA,CAAA;;;;;;;;;;6CALnB,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA;6CACG,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAOS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;iDAJK,GAAO,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;;;;;;;;IAGhB,GAAA,IAAA,KAAA,qBAAA,EAAA,IAAA,OAAA,MAAA,OAAA,GAAA,SAAA,GAAG,MAAG,CAAC;mBAAG,GAAK,CAAA,CAAA,CAAA;IAAG,WAAA,GAAC,IAAC,MAAM,IAAA,EAAA,CAAA,EAAA,YAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;8CALnB,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CACG,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;WA1CxB,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;;SAI1B,CAAC,GAAA;IACD,EAAA,MAAM,EAAE,CAAC;IACT,EAAA,KAAK,EAAE,CAAC;IACR,EAAA,KAAK,EAAE,CAAC;IACR,EAAA,KAAK,EAAE,KAAK;;;SAGZ,KAAa,CAAA;IACb,CAAA,IAAA,KAAK,GAAY,KAAK,CAAA;IACtB,CAAA,IAAA,GAAG,GAAW,CAAC,CAAA;;cAKV,OAAO,GAAA;IACR,EAAA,IAAA,YAAA,CAAA,CAAA,EAAA,GAAG,YAAM,CAAC,CAAC,KAAK,EAAE,YAAA,CAAA,CAAA,EAAA,GAAG,GAAG,CAAC,CAAA,CAAA;IAC7B,EAAA,YAAA,CAAA,CAAA,EAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,IAAI,GAAG,EAAA,CAAA,CAAA,CAAA;IAEzB,EAAAA,MAAI,CAAC,aAAa,CAAA,CAAA;MAClB,MAAM,EAAA,CAAA;;;cAGM,MAAM,GAAA;sBAClB,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA,CAAA;sBACf,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA,CAAA;;;IAGH,CAAA,SAAA,QAAQ,CAAC,KAAY,EAAA;IACjC,EAAA,YAAA,CAAA,CAAA,EAAA,CAAC,GAAG,KAAK,CAAA,CAAA;;;KAGbD,IAAE,CAAC,oBAAoB,EAAA,MAAQ,MAAM,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OApBpC,YAAA,CAAA,CAAA,EAAE,OAAO,GAAG,KAAK;SAAG,YAAY;IAC7B,KAAA,GAAG,GAAG,CAAC,GAAG,cAAc,GAAG,aAAa,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BCD3C,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;8CAJC,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAMS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;4DADJ,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CAHW,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAf/B,CAAA,IAAA,MAAM,GAAW,CAAC,CAAA;WAEX,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;SAE1B,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;IAEZ,CAAA,SAAA,QAAQ,CAAC,KAAa,EAAA;IAClC,EAAA,YAAA,CAAA,CAAA,EAAA,MAAM,GAAG,KAAK,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CCgHE,GAAE,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBADX,KAAK,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;;;;oCAAf,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;qBAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;;;;mCAAf,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;4BAAJ,MAAI,EAAA,CAAA,GAAA,WAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;sCAAJ,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAXI,GAAE,CAAA,CAAA,CAAA;;;;;;;;;;uBAKF,GAAE,CAAA,CAAA,CAAA;;;;;;;;;;uBAKF,GAAE,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA5GZ,QAAkB,CAAA;;cAEb,IAAI,GAAA;IACT,EAAA,QAAQ,CAAC,IAAI,EAAA,CAAA;IACb,EAAAN,MAAI,CAAC,IAAI,EAAA,CAAA;;;IAGb,CAAAM,IAAE,CAAC,iBAAiB,EAAQ,MAAAN,MAAI,CAAC,QAAQ,EAAA,CAAA,CAAA;KACzCM,IAAE,CAAC,YAAY,EAAA,MAAQ,IAAI,EAAA,CAAA,CAAA;IAC3B,CAAAA,IAAE,CAAC,YAAY,EAAQ,MAAAN,MAAI,CAAC,IAAI,EAAA,CAAA,CAAA;IAChC,CAAAO,MAAI,CAAC,iBAAiB,CAAA,CAAA;;SAElB,MAAM,GAAA;MACN,KAAK,EAAA,CAAA;;;;;;;MAOL,IAAI,EAAA,CAAA,GAAA,CAAA;MACJ,IAAI,EAAA,CAAA,0BAAA,CAAA;;;SAGJ,EAAE,GAAA;MACF,KAAK,EAAA,CAAA;;;MAGL,IAAI,EAAA,CAAA,WAAA,CAAA;MACJ,IAAI,EAAA,CAAA,GAAA,CAAA;;;SAGJ,EAAE,GAAA;MACF,KAAK,EAAA,CAAA;;;MAGL,IAAI,EAAA,CAAA,eAAA,CAAA;MACJ,IAAI,EAAA,CAAA,GAAA,CAAA;;;SAGJ,EAAE,GAAA;MACF,KAAK,EAAA,CAAA;;;;MAIL,IAAI,EAAA,CAAA,eAAA,CAAA;MACJ,IAAI,EAAA,CAAA,OAAA,CAAA;;;SAGJ,EAAE,GAAA;MACF,KAAK,EAAA,CAAA;;;MAGL,IAAI,EAAA,CAAA,OAAA,CAAA;MACJ,IAAI,EAAA,CAAA,GAAA,CAAA;;;SAGJ,GAAG,GAAA;MACH,KAAK,EAAA,CAAA;;;;MAIL,IAAI,EAAA,CAAA,OAAA,CAAA;MACJ,IAAI,EAAA,CAAA,OAAA,CAAA;;;SAGJ,GAAG,GAAA;MACH,KAAK,EAAA,CAAA;;;;MAIL,IAAI,EAAA,CAAA,OAAA,CAAA;MACJ,IAAI,EAAA,CAAA,OAAA,CAAA;;;SAGJ,IAAI,GAAA;IACJ,EAAA,KAAK,EAAU,IAAI;MACnB,IAAI,EAAA,IAAM,KAAK,CAAM,CAAC,CAAA;MACtB,OAAO,EAAA,IAAM,KAAK,CAAS,CAAC,CAAA;MAC5B,GAAG,EAAA,IAAM,KAAK,CAAM,CAAC,CAAA;MACrB,GAAG,EAAA,IAAM,KAAK,CAAM,CAAC,CAAA;;;IAGzB,CAAAD,IAAE,CAAC,UAAU,EAAA,MAAA;MACT,QAAQ,CAACN,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAA,CAAE,KAAK,GAAG,IAAI,CAAA;IACzC,EAAAO,MAAI,CAAC,oBAAoB,CAAA,CAAA;;;KAG7BD,IAAE,CAAC,kBAAkB,EAAE,IAAI,IAAA;IACvB,EAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAA,CAAA;MACnC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;MACjC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;IACjC,EAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAE,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAE,CAAA,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;;;;;;;;;;IAO/B,GAAA,IAAI,CAAC,KAAK,GAAA,OAAA,CAAA;;;;;;;OAKd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,GAAA,OAAA,CAAA;;;;;;;OACX,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,GAAA,OAAA,CAAA;;;;;;;OAKF,IAAI,CAAC,OAAO,CAAC,EAAE,CAAA,GAAA,OAAA,CAAA;;;;;iCAkBzB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAA,CAAA;;;;OAE5B,QAAQ,GAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aClHbA,IAAE,CAA2B,IAAU,EAAE,EAA8B,EAAA;KACnF,KAAK,CAAC,IAAI,EAAE,EAAE,CAAA,CAAA;;;aAGFC,MAAI,CAA2B,IAAU,EAAE,IAAiB,EAAA;KACxE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAA,CAAA;;;IAGN,SAAAC,aAAW,CAAC,GAAe,EAAE,OAAe,EAAE,MAAe,EAAA;IAC9D,CAAA,OAAA,IAAA,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,CAAA,CAAA;;;;;;;;;;;;;;;0BCpBjD,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;8CALE,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAOS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;0DADJ,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CAJY,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAVxB,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,KAAa,EAAA,GAAA,OAAA,CAAA;IACb,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;SAE1B,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aCLhB,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,EAAA;QACrC,UAAU,CAAC,MAAK;YACZ,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;IAClC,KAAC,EAAE,KAAK,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IACpC,CAAC;IAEK,SAAU,OAAO,CAAC,GAAW,EAAA;IAC/B,IAAA,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC;IACpB,QAAA,GAAG,GAAG,CAAK,EAAA,EAAA,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,SAASJ,KAAG,CAAC,GAAW,EAAA;IACpB,IAAA,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEK,SAAU,cAAc,CAAC,GAAY,EAAA;IACvC,IAAA,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;IAClC,IAAA,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAE3B,IAAA,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YACT,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC9C,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;IACnC,KAAA;IAED,IAAA,IAAI,CAAC,GAAGA,KAAG,CAAC,CAAC,CAAC,CAAC;IAGf,IAAA,OAAO,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAC7B,QAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACd,QAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAEjB,KAAA;QAED,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,QAAA,CAAA,EAAG,IAAI,CAAG,EAAA,CAAC,IAAI,CAAC,CAAA,CAAE;IAClB,QAAA,CAAA,EAAG,CAAC,CAAI,CAAA,EAAA,CAAC,CAAI,CAAA,EAAA,CAAC,EAAE,CAAC;;QAIrB,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;IACpC,CAAC;IAgBD;;;;;;;;;;;;;;0BCpBK,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;8CALE,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;8CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAOS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;0DADJ,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CAJY,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;+CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA7BzB,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,GAAY,EAAA,GAAA,OAAA,CAAA;WACZ,WAAoB,EAAA,GAAA,OAAA,CAAA;IAEpB,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;;IAEjB,CAAA,SAAA,GAAG,CAAC,CAAU,EAAA;IACf,EAAA,IAAA,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAG,CAAA,cAAc,CAAC,IAAI,CAAA,CAAA;IACrC,EAAA,IAAA,CAAA,UAAU,EAAE,IAAI,EAAE,GAAG,CAAI,GAAA,cAAc,CAAC,CAAC,CAAA,CAAA;IAEzC,EAAA,IAAA,CAAA,UAAU,KAAK,WAAW,EAAA,OAAA,CACnB,GAAG,EAAE,GAAG,CAAC,MAAM,CAAA,CAAA;UAEvB,UAAU,EACV,GAAG,IAAI,CAAC,CAAA;cAEJ,OAAO,CAAC,IAAI,CAAA,EAAG,GAAG,CAAA,CAAA;;;SAM1B,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAH5B,oBAAI,KAAK,EAAE,IAAI,CAAI,GAAA,GAAG,CAAC,GAAG,CAAA,EAAA,KAAA,GAAA,YAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,YAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,CAAA;;;;IAC1B,mBAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BCevB,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;8CANE,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;8CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAQS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;0DADJ,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;+CANE,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;+CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA/BzB,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,GAAY,EAAA,GAAA,OAAA,CAAA;WACZ,WAAoB,EAAA,GAAA,OAAA,CAAA;IAEpB,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;;IAEjB,CAAA,SAAA,GAAG,CAAC,CAAU,EAAA;IACf,EAAA,IAAA,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAG,CAAA,cAAc,CAAC,IAAI,CAAA,CAAA;IACrC,EAAA,IAAA,CAAA,UAAU,EAAE,IAAI,EAAE,GAAG,CAAI,GAAA,cAAc,CAAC,CAAC,CAAA,CAAA;IAEzC,EAAA,IAAA,CAAA,UAAU,KAAK,WAAW,EAAA,OAAA,CACnB,GAAG,EAAE,GAAG,CAAC,MAAM,CAAA,CAAA;cAEnB,OAAO,CAAC,IAAI,CAAA,EAAG,GAAG,CAAA,CAAA;;;IAO1B,CAAA,IAAA,QAAQ,GAAG,aAAa,CAAA;;IAEZ,CAAA,SAAA,UAAU,CAAC,KAAa,EAAA;IACpC,EAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,KAAK,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAPpB,oBAAI,KAAK,EAAE,IAAI,CAAI,GAAA,GAAG,CAAC,GAAG,CAAA,EAAA,KAAA,GAAA,YAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,YAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,CAAA;;;;OACzB,YAAA,CAAA,CAAA,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA,CAAA;;;;OAC/B,YAAA,CAAA,CAAA,EAAE,GAAG,GAAG,EAAE,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBCJlC,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;8CANK,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;6CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFvC,UAQS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;oDADJ,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;8CALe,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CAAa,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAVxB,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,EAAU,EAAA,GAAA,OAAA,CAAA;IACV,CAAA,IAAA,EAAA,EAAE,GAAW,MAAM,EAAA,GAAA,OAAA,CAAA;SAE1B,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;IAOZ,CAAA,MAAA,aAAA,GAAA,MAAA,GAAG,CAAC,UAAU,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBCkZrB,GAAK,CAAA,CAAA,CAAA,CAAC,IAAI,CAAC,CAAC,CAAA;IACJ,IAAA,WAAA,qBAAA,GAAc,OAAI,SAAS,EAAA;;;;;;;;;;;;;;;+DADnC,GAAK,CAAA,CAAA,CAAA,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;IACJ,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,CAAA,EAAA,WAAA,CAAA,WAAA,sBAAA,GAAc,OAAI,SAAS,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAOnC,GAAK,CAAA,CAAA,CAAA,CAAC,IAAI,CAAC,CAAC,CAAA;IACJ,IAAA,WAAA,qBAAA,GAAc,OAAI,SAAS,EAAA;;;;;;;;;;;;;;;+DADnC,GAAK,CAAA,CAAA,CAAA,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;IACJ,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,sBAAA,CAAA,EAAA,WAAA,CAAA,WAAA,sBAAA,GAAc,OAAI,SAAS,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAK5B,GAAC,CAAA,EAAA,CAAA,CAAA,CAAA;mBACJ,GAAG,CAAA,EAAA,CAAA;IACK,EAAA,WAAA,qBAAA,GAAc,CAAI,CAAA,CAAA,cAAA,GAAK,CAAC,CAAA,CAAA,CAAA,WAAW,OAAC,GAAC,CAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DAF1C,GAAC,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;6DACJ,GAAG,CAAA,EAAA,CAAA,CAAA;IACK,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,6BAAA,CAAA,EAAA,WAAA,CAAA,WAAA,sBAAA,GAAc,CAAI,CAAA,CAAA,cAAA,GAAK,CAAC,CAAA,CAAA,CAAA,WAAW,OAAC,GAAC,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAlBpD,CAAA,IAAA,YAAA,gBAAA,GAAQ,IAAC,CAAC,CAAA,CAAA;;;;IAQV,CAAA,IAAA,cAAA,gBAAA,GAAQ,IAAC,CAAC,CAAA,CAAA;;;;;;;;;kDAXO,GAAW,CAAA,CAAA,CAAA,EAAA;;;;;;;;IAShB,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,YAAA,GAAK,IAAC,EAAE,EAAA;;;;;IAQnB,CAAA,IAAA,UAAA,aAAA,GAAK,IAAC,OAAO,CAAA;;IAAY,CAAA,MAAA,OAAA,GAAA,GAAA,iBAAA,GAAQ,UAAC,GAAC,CAAA,EAAA,CAAA,CAAA,CAAA;;;oCAAxC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gFAjBiB,GAAW,CAAA,CAAA,CAAA,CAAA;;;IAG5B,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,gBAAA,EAAA,IAAA,cAAA,CAAA,YAAA,EAAA,YAAA,gBAAA,GAAQ,IAAC,CAAC,CAAA,CAAA,EAAA;;;;;;;;;;;;;IAME,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,aAAA,CAAA,EAAA,UAAA,CAAA,EAAA,aAAA,GAAK,IAAC,EAAE,CAAA;;;IAEpB,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,gBAAA,EAAA,IAAA,cAAA,CAAA,cAAA,EAAA,cAAA,gBAAA,GAAQ,IAAC,CAAC,CAAA,CAAA,EAAA;;;;;;;;;;;;;IAMT,IAAA,UAAA,aAAA,GAAK,IAAC,OAAO,CAAA;;;;;;;;;;;;;;;;;;;sCAAlB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA3ZF,QAAkB,CAAA;SAElB,KAAY,CAAA;IAEZ,CAAA,IAAA,QAAQ,GAAG,CAAC,CAAA;SACZ,OAAO,GAAA,EAAA,CAAA;IAIP,CAAA,IAAA,cAAc,GAAY,KAAK,CAAA;SAC/B,OAAO,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;IAExB,CAAA,IAAA,WAAW,GAAGI,aAAW,CAAC,kBAAkB,EAAE,IAAI,CAAA,CAAA;IAClD,CAAA,IAAA,OAAO,GAAGA,aAAW,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAA,CAAA;SAE9C,EAAE,GAAA,CAAc,CAAC,EAAE,CAAC,CAAA,CAAA;SACpB,EAAE,GAAA,CAAc,CAAC,EAAE,CAAC,CAAA,CAAA;SACpB,GAAG,GAAA,EAAA,CAAA;SACH,GAAG,GAAA,EAAA,CAAA;IACH,CAAA,IAAA,UAAU,GAAW,IAAI,CAAA;IAEzB,CAAA,IAAA,OAAO,GAAW,CAAA,IAAI,EAAE,IAAI,EAAE,IAAI,CAAA,CAAA;IAClC,CAAA,IAAA,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM,EAAA,CAAA,CAAA;IAUtC,CAAA,IAAA,CAAC,GAAI,CAAS,IAAS,IAAA,OAAO,CAAC,CAAC,CAAA,CAAA;;cAE3B,KAAK,GAAA;UACN,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GACpB,QAAQ,CAAC,GAAG,CAAA,GACZ,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,EAAG,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;UAGhB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GACpB,QAAQ,CAAC,GAAG,CAAA,GACZ,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,EAAG,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;IAGZ,EAAA,OAAA,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA;;;IAGP,CAAA,SAAA,iBAAiB,CAAC,IAAc,EAAA;IAEhC,EAAA,IAAA,CAAA,EAAE,EAAE,EAAE,CAAI,GAAA,OAAO,CAAC,IAAI,CAAA,CAAA;;UAEvB,EAAE,GAAG,EAAE,GAAG,CAAC;QACX,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAA,CAAG,CAAC,CAAA,CAAA;QAC3B,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,CAAA;;UAE1B,EAAE,GAAG,EAAE,GAAG,CAAC;QACX,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAA,CAAG,CAAC,CAAA,CAAA;QAC3B,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,CAAA;;WAEzB,CAAC,EAAE,CAAC,CAAA,GAAI,KAAK,EAAA,CAAA;IAEd,EAAA,IAAA,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA;IAEvB,EAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACZ,EAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACZ,EAAA,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IAEZ,EAAA,OAAA,EAAA,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAA,CAAA;;;cAGtB,SAAS,GAAA;UACV,IAAI,GAAG,IAAI,CAAC,MAAM,EAAA,CAAG,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;IAExC,EAAA,IAAA,IAAI,CAAC,CAAC,CAAI,GAAA,CAAC,IAAI,IAAI,CAAC,CAAC,CAAI,GAAA,CAAC,EACnB,OAAA,iBAAiB,CAAC,IAAI,CAAA,CAAA;WAE5B,CAAC,EAAE,CAAC,CAAA,GAAI,KAAK,EAAA,CAAA;IAEd,EAAA,IAAA,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA;UACnB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA;UACR,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA;UAER,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA,EAAG,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;;IAE3B,EAAA,KAAA,IAAA,EAAE,GAAG,SAAS,EAAE,EAAE,KAAK,CAAC,IAAA;WACzB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA,EAAA;;IACV,IAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;IACZ,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;;;eAIV,SAAS,EAAA;aACR,IAAI;IACL,KAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACZ,KAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;aAEb,KAAK;IACN,KAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACZ,KAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACd,KAAA,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;;;;IAKxB,EAAA,OAAA,EAAA,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAA,CAAA;;;cAGtB,WAAW,GAAA;IACZ,EAAA,IAAA,EAAE,GAAG,GAAG,CAAA;IAEP,EAAA,IAAA,EAAA,CAAC,EAAE,CAAC,EAAE,KAAK,KAAI,SAAS,EAAA,CAAA;IAEzB,EAAA,IAAA,GAAG,GAAG,CAAC,CAAA;IACP,EAAA,IAAA,GAAG,GAAG,CAAC,CAAA;IAEP,EAAA,IAAA,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAA,CAAA;IAChB,EAAA,IAAA,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAA,CAAA;IAElB,EAAA,IAAA,EAAW,EAAE,EAAW,CAAA;;cAEpB,SAAS,EAAA;YACR,IAAI;IACL,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACd,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;YAEb,KAAK;IACN,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACd,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;;;IAIlB,EAAA,IAAA,IAAI,GAAG,OAAO,CAAE,CAAA,GAAG,EAAE,GAAG,CAAA,CAAA,CAAA;UACxB,OAAO,GAAG,OAAO,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA;IACjC,EAAA,IAAA,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,EAAA,CAAA,CAAA;UAExC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAA,CAAA;MAE5C,OAAO,CAAC,IAAI,CAAA,EACR,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAA,CAAA,CAAA;;;cAItC,WAAW,GAAA;IACZ,EAAA,IAAA,EAAE,GAAG,GAAG,CAAA;IAEP,EAAA,IAAA,EAAA,CAAC,EAAE,CAAC,EAAE,KAAK,KAAI,SAAS,EAAA,CAAA;IAEzB,EAAA,IAAA,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IACb,EAAA,IAAA,GAAG,GAAG,CAAC,CAAA;IAEP,EAAA,IAAA,EAAE,GAAG,CAAC,CAAA;IACN,EAAA,IAAA,EAAE,GAAG,KAAK,CAAA;IAEV,EAAA,IAAA,EAAW,EAAE,EAAW,CAAA;;cAEpB,SAAS,EAAA;YACR,IAAI;IACL,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACd,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;YAEb,KAAK;IACN,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;IACd,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;;;;UAIlB,IAAI,GAAA,CAAI,GAAG,EAAE,GAAG,CAAA,CAAA;UAChB,OAAO,GAAG,OAAO,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA;IACjC,EAAA,IAAA,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,EAAA,CAAA,CAAA;UAExC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAA;MAE7C,OAAO,CAAC,IAAI,CAAA,EACR,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAA,CAAA,CAAA;;;SAI3C,QAAQ,GAAI,CAAU,IAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA,CAAA;IAC3C,CAAA,IAAA,MAAM,GAAI,CAAU,IAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA,CAAA,CAAA;;cAE/C,oBAAoB,GAAA;IACrB,EAAA,IAAA,EAAE,GAAG,GAAG,CAAA;WAEP,CAAC,EAAE,CAAC,CAAA,GAAI,KAAK,EAAA,CAAA;aAEX,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA,IAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAE,CAAA,EAAE,CAAC,CAAC,IACnC,CAAC,EAAE,CAAC,CAAA,GAAI,KAAK,EAAA,CAAA;IAEd,EAAA,IAAA,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IACZ,EAAA,IAAA,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAA,CAAA;UAErB,GAAG,GAAG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;UAChC,IAAI,GAAG,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA,CAAA,CAAA;UAC7B,CAAC,GAAGJ,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,CAAG,GAAG,CAAC,EAAE,CAAA,CAAA;;IAE3B,EAAA,IAAA,EAAE,GAAG,SAAS,EAAA;IACd,IAAA,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,IAAI,CAAC,SAAS,CAAA;IAC3B,IAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,CAAA,IAAI,CAAC,SAAS,CAAA,CAAA;;IAE3B,EAAA,IAAA,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;IAChB,EAAA,IAAA,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;IACd,EAAA,IAAA,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAE,CAAA,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAA,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA;UAE5C,IAAI,GAAA,CAAI,CAAC,EAAE,CAAC,CAAA,CAAA;UACZ,OAAO,GAAG,OAAO,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA;UACjC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAA;IAEzC,EAAA,IAAA,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAA,CAAA;MAExC,OAAO,CAAC,IAAI,CAAA,EACR,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAA,CAAA,CAAA;;;cAItC,oBAAoB,GAAA;IACrB,EAAA,IAAA,EAAE,GAAG,GAAG,CAAA;WACP,CAAC,EAAE,CAAC,CAAA,GAAI,KAAK,EAAA,CAAA;aAEX,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA,IAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAE,CAAA,EAAE,CAAC,CAAC,IACnC,CAAC,EAAE,CAAC,CAAA,GAAI,KAAK,EAAA,CAAA;IAEd,EAAA,IAAA,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IAEZ,EAAA,IAAA,EAAE,GAAG,CAAC,CAAA;IACN,EAAA,IAAA,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA,CAAA,CAAA;UAElB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;;;IAGtB,EAAA,OAAA,EAAE,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,EAAE,CAAE,CAAA,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CACjC,CAAA,EAAA,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;;IAEzB,EAAA,IAAA,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA,CAAA,CAAA;UAElB,IAAI,GAAA,CAAI,EAAE,EAAE,CAAC,CAAA,CAAA;UACb,OAAO,GAAG,OAAO,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA;UACjC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAA;IAEzC,EAAA,IAAA,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAA,CAAA;MAExC,OAAO,CAAC,IAAI,CAAA,EACR,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAA,CAAA,CAAA;;;cAItC,aAAa,GAAA;IACd,EAAA,IAAA,QAAQ,GAAG,IAAI,CAAA;IACf,EAAA,IAAA,QAAQ,GAAG,MAAM,CAAA;;UAEjB,UAAU,EAAA;WAGN,UAAU,CAAC,MAAM,GAAG,CAAC,EAAA;gBACb,SAAS,EAAA;cACR,IAAI;UACL,oBAAoB,EAAA,CAAA;UACpB,oBAAoB,EAAA,CAAA;;cAEnB,KAAK;UACN,oBAAoB,EAAA,CAAA;UACpB,oBAAoB,EAAA,CAAA;;;;;;;WAM5B,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAA,EAAA;QAC5B,oBAAoB,EAAA,CAAA;QACpB,oBAAoB,EAAA,CAAA;;;;WAIpB,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAA,EAAA;QAC5B,oBAAoB,EAAA,CAAA;QACpB,oBAAoB,EAAA,CAAA;;;;;MAK5B,WAAW,EAAA,CAAA;MACX,WAAW,EAAA,CAAA;;;oBAGA,SAAS,GAAA;IACpB,EAAA,WAAW,CAAC,MAAM,EAAA,CAAA;IAClB,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;IAEP,EAAA,IAAA,YAAA,CAAA,CAAA,EAAA,EAAA,QAAQ,CAAK,KAAA,OAAO,CAAC,MAAM,EAC7B,aAAa,EAAA,CAAA;sBAEjB,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAA,CAAA,CAAA;MAExB,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,aAAa,CAAA,CAAA,CAAA;IACnD,EAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM,EAAA,CAAA,CAAA,CAAA;YAEhC,IAAI,EAAA,CAAA;MACV,WAAW,EAAA,CAAA;;;cAGN,IAAI,GAAA;IACT,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;UAET,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAA,CAAA;;IACf,EAAA,KAAA,IAAA,GAAG,IAAI,IAAI,EAAA;IACR,GAAA,QAAA,GAAG,CAAC,CAAC,CAAA;aACJ,MAAM;;aACN,gBAAgB;IACjB,KAAA,YAAA,CAAA,CAAA,EAAA,cAAc,GAAG,IAAI,CAAA,CAAA;;aAEpB,YAAY;SAAE,UAAU,GAAG,GAAG,CAAC,CAAC,CAAA,CAAA;;aAChC,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC1C,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC1C,KAAK;IAAE,KAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC7C,KAAK;IAAE,KAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;;;;IAItD,EAAA,IAAA,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAA;IAE3B,EAAA,KAAA,IAAA,GAAG,GAAG,UAAU,EAAE,GAAG,EAAK,GAAA,CAAC,IAChC,aAAa,EAAA,CAAA;sBAEjB,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAA,CAAA,CAAA;MAExB,WAAW,EAAA,CAAA;;;IAGN,CAAA,SAAA,MAAM,CAAC,EAAU,EAAA;IACtB,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;;UAET,KAAK,CAAC,SAAS,KAAK,SAAS,EAAA;IAC7B,GAAAG,MAAI,CAAC,kBAAkB,CAAA,CAAA;;;;sBAI3B,KAAK,CAAC,SAAS,GAAG,EAAE,EAAA,KAAA,CAAA,CAAA;;UAEhB,EAAE,KAAK,KAAK,CAAC,OAAO,EAAA;IAChB,GAAA,IAAA,QAAQ,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAA;QAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;IACf,IAAA,QAAQ,CAAC,IAAI,EAAA,CAAA;;QAEb,GAAG,CAAC,IAAI,CAAC,KAAK,CAAA,CAAA;;;IAElB,GAAA,WAAW,CAAC,KAAK,EAAA,CAAA;;OAEjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;IACb,GAAA,OAAO,CAAC,EAAE,CAAE,CAAA,UAAU,CAAC,YAAY,CAAA,CAAA;OACnC,aAAa,EAAA,CAAA;IACb,GAAA,YAAA,CAAA,CAAA,EAAA,WAAW,GAAG,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAA,CAAA;;;IAG3C,EAAA,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE,CAAA,UAAU,CAAC,cAAc,CAAA,CAAA;;;cAG3C,OAAO,GAAA;IACR,EAAA,IAAA,KAAK,CAAC,SAAS,KAAK,SAAS,EAC7BA,MAAI,CAAC,kBAAkB,CAAA,CAAA;;;cAGtB,IAAI,GAAA;IACT,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;MACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;;;KAGnBD,IAAE,CAAC,kBAAkB,EAAA,MAAQ,SAAS,EAAA,CAAA,CAAA;KACtCA,IAAE,CAAC,aAAa,EAAA,MAAQ,OAAO,EAAA,CAAA,CAAA;KAC/BA,IAAE,CAAC,YAAY,EAAA,MAAQ,IAAI,EAAA,CAAA,CAAA;KAE3B,IAAI,EAAA,CAAA;;SAEA,MAAM,GAAA;MACN,KAAK,EAAA,CAAA;;;;;;MAML,IAAI,EAAA,CAAA,WAAA,CAAA;MACJ,IAAI,EAAA,CAAA,mBAAA,CAAA;MACJ,QAAQ,EAAA;IACJ,GAAA,GAAG,EAAE,eAAe;IACpB,GAAA,GAAG,EAAE,cAAc;IACnB,GAAA,EAAE,EAAG,eAAe;IACpB,GAAA,GAAG,EAAE,cAAc;;;;;;;;;;;;IA+BR,GAAA,OAAO,CAAC,CAAC,CAAA,GAAA,OAAA,CAAA;;;;;IACJ,CAAA,MAAA,aAAA,GAAA,CAAA,IAAA,MAAM,CAAC,CAAC,CAAA,CAAA;;;;OAIX,QAAQ,GAAA,OAAA,CAAA;;;;;IA7Bb,CAAA,MAAA,eAAA,GAAA,MAAAC,MAAI,CAAC,aAAa,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAjYlC,mBAAG,WAAW,GAAG,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBCiBzC,GAAG,CAAA,CAAA,CAAA,CAAA,CAAA;wCANI,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA;wCACG,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;yCAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAQG,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;sDADE,GAAG,CAAA,CAAA,CAAA,CAAA,CAAA;;;yCANI,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA;;;;yCACG,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;0CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;IA9B9B,MAAA,YAAY,GAAG,GAAG,CAAA;;;;;;;WAEb,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,GAAW,EAAA,GAAA,OAAA,CAAA;IACX,CAAA,IAAA,EAAA,KAAK,GAAW,YAAY,EAAA,GAAA,OAAA,CAAA;WAC5B,OAAO,GAAW,UAAU,CAAC,EAAE,CAAA,EAAA,GAAA,OAAA,CAAA;IAC/B,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;SAMtB,KAAkB,CAAA;;IAEP,CAAA,eAAA,MAAM,CAAC,GAAW,EAAA;YACvB,IAAI,EAAA,CAAA;IACV,EAAA,YAAA,CAAA,CAAA,EAAA,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAA,KAAA,CAAA,CAAA;MACjC,WAAW,EAAA,CAAA;IACL,EAAA,MAAA,KAAK,CAAC,IAAI,CAAA,CAAA;;IAEhB,EAAA,KAAK,CAAC,gBAAgB,CAAc,OAAO,CAAE,CAAA,OAAO,CAAC,EAAE,IAAA;IACnD,GAAA,KAAK,CAAC,EAAE,CAAA,CAAA;IACR,GAAA,YAAY,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;OASZ,KAAK,GAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAvBhB,GAAG,YAAA,CAAA,CAAA,EAAA,MAAM,GAAG,KAAK,IAAI,YAAY,CAAA,CAAA;;;;OAChC,YAAA,CAAA,CAAA,EAAE,GAAG,GAAG,EAAE,GAAG,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA,CAAA;;;;OAC9B,MAAM,CAAC,GAAG,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BCYJ,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;sFALL,GAAQ,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA;yCAEC,GAAI,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;2CATJ,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFxB,UAiBM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OAXF,UAUM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;OAHF,UAEO,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;0DADF,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;0CAHI,GAAI,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;;4CATJ,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAdT,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,MAAgB,EAAA,GAAA,OAAA,CAAA;SAOvB,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAL5B,GAAG,YAAA,CAAA,CAAA,EAAA,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA,CAAA,CAAA;;;;IACpB,GAAG,YAAA,CAAA,CAAA,EAAA,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA,CAAA,CAAA;;;;IAClB,GAAG,YAAA,CAAA,CAAA,EAAA,KAAK,GAAG,IAAI,GAAG,MAAM,CAAA,CAAA;;;;IACxB,mBAAG,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,IAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+EC0CH,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;yCACd,GAAI,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;+DALA,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;2CACZ,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFxB,UASM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OALF,UAIM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;wGAHqB,GAAK,CAAA,CAAA,CAAA,CAAA,EAAA;;;;;0CACd,GAAI,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;;4CAJJ,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;WA7CT,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,OAAe,EAAA,GAAA,OAAA,CAAA;WACf,YAAwB,EAAA,GAAA,OAAA,CAAA;IACxB,CAAA,IAAA,EAAA,KAAK,GAAW,YAAY,EAAA,GAAA,OAAA,CAAA;IAC5B,CAAA,IAAA,EAAA,GAAG,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;SAEvB,UAAkB,CAAA;SAClB,SAAiB,CAAA;IACjB,CAAA,IAAA,IAAI,GAAW,CAAC,CAAA;SAEhB,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAA,CAAA;SACxB,WAAgB,CAAA;;cAEX,YAAY,GAAA;IACjB,EAAA,aAAa,CAAC,WAAW,CAAA,CAAA;;;cAGpB,aAAa,GAAA;eACT,IAAI,GAAA;WACL,GAAG,GAAG,IAAI,CAAC,GAAG,EAAA,CAAA;uBAClB,IAAI,GAAG,GAAG,IAAK,CAAA,GAAG,GAAG,UAAU,KAAK,IAAI,GAAC,OAAO,CAAA,CAAA,CAAA,CAAA;;IAE5C,GAAA,IAAA,GAAG,IAAI,SAAS,EAAA;QAChB,YAAY,EAAA,CAAA;QACZ,YAAY,EAAA,CAAA;;;;MAIpB,UAAU,GAAG,IAAI,CAAC,GAAG,EAAA,CAAA;IACrB,EAAA,SAAS,GAAG,UAAU,GAAG,IAAI,GAAG,OAAO,CAAA;IAEvC,EAAA,WAAW,GAAG,WAAW,CAAO,MAAA,IAAI,IAAI,GAAG,CAAA,CAAA;;;IAG/C,CAAA,OAAO,OAAO,aAAa,EAAA,CAAA,CAAA;IAC3B,CAAA,SAAS,OAAO,YAAY,EAAA,CAAA,CAAA;;cAEZ,OAAO,GAAA;MACnB,aAAa,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC5BR,SAAA,SAAS,CAAC,IAAsB,EAAA;SACjC,GAAG,GAAGH,KAAG,CAAC,IAAI,CAAA,CAAA;aAEd,GAAG,EACH,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,CAAA,EACb,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CACb,CAAA,EAAA,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;;;aAIZ,SAAS,CAAC,CAAS,EAAE,IAAc,EAAA;IACpC,CAAA,IAAA,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;IACf,CAAA,IAAA,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;IAChB,CAAA,IAAA,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;IAChB,CAAA,IAAA,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;IAChB,CAAA,IAAA,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA,CAAA;YAEbA,KAAG,CAAA,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA;;;aAGrB,WAAW,GAAA;SACnB,SAAS,GAAA;;eAGA,qBAAqB,GAAA;IACtB,GAAA,IAAA,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA;IACd,GAAA,IAAA,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;IAEhB,GAAA,IAAA,IAAI,GAAI,CAAA,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,CAAA,CAAA;IAExB,GAAA,IAAA,GAAG,GAAG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAA,CAAA;WACvB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAA,CAAA;WAEb,OAAO,GAAG,SAAS,CAAC,GAAG,CAAA,CAAA;IAEnB,GAAA,OAAA,EAAA,GAAG,EAAE,OAAO,EAAA,CAAA;;;eAIf,oBAAoB,GAAA;IAErB,GAAA,IAAA,IAAI,GACJ,CAAAA,KAAG,CAAC,GAAG,CACP,EAAAA,KAAG,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,GACZA,KAAG,CAAC,GAAG,CAAA,EACPA,KAAG,CAAC,CAAC,CAAA,EACLA,KAAG,CAAC,GAAG,CACP,EAAAA,KAAG,CAAC,CAAC,CACL,EAAAA,KAAG,CAAC,CAAC,CAAA,CAAA,CAAA;IAGL,GAAA,IAAA,CAAC,GAAGA,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,CAAA;WAClB,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAA,CAAA;IACjB,GAAA,IAAA,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IACZ,GAAA,IAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IACb,GAAA,IAAA,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IAEd,GAAA,IAAA,GAAG,GAAGA,KAAG,CAAA,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA;WAEpB,OAAO,GAAGA,KAAG,CACb,CAAA,GAAG,EACH,GAAG,CAAC,KAAK,CAAC,CAAC,GACX,GAAG,CAAC,IAAI,CAAC,CAAC,GACV,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;IAGN,GAAA,OAAA,EAAA,GAAG,EAAE,OAAO,EAAA,CAAA;;;eAIf,UAAU,GAAA;IACX,GAAA,IAAA,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA;WACd,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA,CAAA;WACT,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;WAC1B,GAAG,GAAG,EAAE,CAAC,CAAC,CAAA,CAAA;WAEV,IAAI,GAAA,CAAI,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAC,GAAG,EAAE,EAAE,CAAA,CAAA;IAEhC,GAAA,IAAA,GAAG,GAAG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAA,CAAA;WACvB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAA,CAAA;WAEb,OAAO,GAAG,SAAS,CAAC,GAAG,CAAA,CAAA;IAEnB,GAAA,OAAA,EAAA,GAAG,EAAE,OAAO,EAAA,CAAA;;;eAIf,UAAU,GAAA;IACX,GAAA,IAAA,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA;WACd,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA,CAAA;WACT,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA,CAAA;WAET,IAAI,GAAA,CAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA;IAE1B,GAAA,IAAA,GAAG,GAAG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAA,CAAA;WACvB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAA,CAAA;WAEb,OAAO,GAAG,SAAS,CAAC,GAAG,CAAA,CAAA;IAEnB,GAAA,OAAA,EAAA,GAAG,EAAE,OAAO,EAAA,CAAA;;;eAIf,WAAW,GAAA;IACZ,GAAA,IAAA,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA;IACd,GAAA,IAAA,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAE,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;IACtB,GAAA,IAAA,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAE,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;WAEtB,IAAI,GAAA,CAAI,EAAE,EAAE,EAAE,GAAC,EAAE,EAAE,EAAE,GAAC,CAAC,GAAC,EAAE,EAAE,EAAE,GAAC,CAAC,GAAC,EAAE,EAAE,EAAE,GAAC,CAAC,GAAC,EAAE,CAAA,CAAA;IAE5C,GAAA,IAAA,GAAG,GAAG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAA,CAAA;WACvB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAA,CAAA;WAEb,OAAO,GAAG,SAAS,CAAC,GAAG,CAAA,CAAA;IAEnB,GAAA,OAAA,EAAA,GAAG,EAAE,OAAO,EAAA,CAAA;;;eAIf,UAAU,GAAA;IACX,GAAA,IAAA,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA;;;YAGV,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAA,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;YAC5B,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAA,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;IAE5B,IAAA,IAAA,EAAE,KAAK,EAAE,EAAA,SAAA;IACT,IAAA,IAAA,EAAE,MAAM,EAAE,EAAA,SAAA;YAEV,IAAI,GAAA,CAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA;IAE1B,IAAA,IAAA,GAAG,GAAG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAA,CAAA;YACvB,GAAG,GAAG,GAAG,CAAC,GAAG,EAAA,CAAA;YAEb,OAAO,GAAG,SAAS,CAAC,GAAG,CAAA,CAAA;IAEnB,IAAA,OAAA,EAAA,GAAG,EAAE,OAAO,EAAA,CAAA;gBAEjB,KAAK,EAAA;;;eAKP,KAAK,GAAA;IACN,GAAA,IAAA,GAAG,GAAGA,KAAG,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA,CAAA,CAAA;IAC5B,GAAA,IAAA,GAAG,GAAG,EAAE,CAAA;WAER,OAAO,GAAG,SAAS,CAAC,GAAG,CAAA,CAAA;IAEnB,GAAA,OAAA,EAAA,GAAG,EAAE,OAAO,EAAA,CAAA;;;;IAIrB,CAAA,OAAA,SAAS,CAAC,CAAC,CAAA,EAAA,CAAA;;;;;IC7JN,SAAA,YAAY,CAAC,GAAW,EAAA;IAChC,CAAA,IAAA,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAA,CAAA;IAErB,CAAA,IAAA,KAAK,CAAC,MAAM,KAAK,CAAC,EACP,OAAA,IAAA,OAAO,CAAC,GAAG,CAAA,CAAA;IAErB,CAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CACD,GAAA,CAAA,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CACf,CAAA,EAAA,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;IAGnB,CAAA,IAAA,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;YAET,EAAE,CAAA;;;aAGG,GAAG,CAAC,CAAW,EAAE,EAAa,EAAA;IACnC,CAAA,OAAA,EAAE,CAAC,MAAM,GAAG,CAAC,GAChB,QAAQ,CAAC,EAAE,CAAA,GACXA,KAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAG,EAAA,CAAC,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;;;aAGV,cAAc,CAAC,QAAgB,EAAE,GAAW,EAAA;YACjD,QAAQ,CAAC,QAAQ,CAAC,GAAG,KACxB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAA,CAAA;;;aAGR,YAAY,CAAC,QAAgB,EAAE,GAAW,EAAA;YAC/C,QAAQ,CAAC,QAAQ,CAAC,GAAG,KACxB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAA,CAAA;;;aAGR,aAAa,CAAC,QAAgB,EAAE,GAAW,EAAA;YAChD,QAAQ,CAAC,QAAQ,CAAC,GAAG,KACxB,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAA,CAAA;;;aAGR,WAAW,CAAC,GAAU,EAAE,GAAU,EAAE,IAAa,EAAE,KAAa,EAAE,MAAgB,EAAA;SAC1F,KAAK,GAAGA,KAAG,CAAA,CAAA,GAAK,IAAI,CAAA,CAAA,CAAA;SACpB,QAAQ,GAAA,EAAA,CAAA;IACR,CAAA,IAAA,OAAO,GAAYA,KAAG,CAAC,KAAK,IAAI,CAAC,CAAA,CAAA;IACrC,CAAA,MAAM,KAAK,IAAI,CAAA;IAEX,CAAA,IAAA,SAAS,GAAG,EAAE,CAAA;;;UAGV,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAA,CAAA;UAElB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA,CAAE,EAAE,CAAC,GAAG,CAAA,IAAK,SAAS,EAAA,GAAK,CAAC,EAAA,SAAA;IAG7C,EAAA,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;MAEvB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;UAEX,MAAM,EACN,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA,EAAG,CAAC,CAAA,CAAA;UAEhC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAA,MAAA;cAEjB,OAAO,CAAC,EAAE,CAAC,GAAG,KAAK,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAA;;IAExC,CAAA,OAAA,CAAA,OAAO,EAAE,QAAQ,CAAA,CAAA;;;;;QCxDzBM,SAAO,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;QACxB,SAAmB,CAAA;QACnBC,OAAa,CAAA;QACbC,cAAY,GAAGF,SAAO,CAAC,MAAM,CAAA;IAC7B,IAAA,SAAS,GAAa,OAAO,CAAA;QAC7B,EAAE,GAAA,CAAc,EAAE,EAAE,EAAE,CAAA,CAAA;QACtB,EAAE,GAAA,CAAc,EAAE,EAAE,EAAE,CAAA,CAAA;QACtB,EAAE,GAAA,CAAc,EAAE,EAAE,EAAE,CAAA,CAAA;QACtB,EAAE,GAAA,CAAc,EAAE,EAAE,EAAE,CAAA,CAAA;QACtB,EAAE,GAAA,CAAc,CAAC,EAAE,CAAC,CAAA,CAAA;QACpB,GAAG,GAAA,EAAA,CAAA;QACH,GAAG,GAAA,EAAA,CAAA;QACH,GAAG,GAAA,EAAA,CAAA;QACH,GAAG,GAAA,EAAA,CAAA;QACH,GAAG,GAAA,EAAA,CAAA;IACH,IAAA,EAAE,IAAc,GAAG,CAAA,CAAA;IACnB,IAAA,WAAW,GAAY,KAAK,CAAA;IAC5B,IAAA,WAAW,GAAY,KAAK,CAAA;IAC5B,IAAA,QAAQ,GAAW,EAAE,GAAGA,SAAO,CAAC,MAAM,CAAA;QACtC,UAAkB,CAAA;IAClB,IAAA,SAAS,GAAY,KAAK,CAAA;IAC1B,IAAA,SAAS,GAAG,WAAW,EAAA,CAAA;QACvB,YAAY,GAAA,EAAA,CAAA;IACZ,IAAA,WAAW,GAAW,CAAC,CAAA;;IAGlB,SAAA,MAAM,CAAC,OAAe,EAAA;IAEvB,CAAA,IAAA,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;;IAEvB,CAAA,IAAA,SAAS,KAAK,QAAQ,EAAA;IACjB,EAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IAEnC,EAAA,IAAA,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;IACd,EAAA,IAAA,EAAE,GAAG,WAAW,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAA,CAAA;UACpD,EAAE,GAAGN,KAAG,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,EAAE,CAAA,CAAE,GAAG,CAAC,WAAW,CAAA,CAAA;UACvC,EAAE,GAAGA,KAAG,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,EAAE,CAAA,CAAE,GAAG,CAAC,WAAW,CAAA,CAAA;IAEvC,EAAA,IAAA,CAAC,GAAGA,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,CAAA;IACtB,EAAA,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAE,CAAA,GAAG,CAAC,EAAE,CAAA,CAAA,CAAA;UAElC,SAAS,EAAA,EACT,EAAE,GAAG,EAAE,CAAC,IAAI,CAACA,KAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,WAAW,CAAA,CAAE,GAAG,CAAC,EAAE,CAAA,CAAA,CAAA;IAErD,EAAA,IAAA,CAAC,GAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAA,CAAA;IAEZ,EAAA,OAAA,CAAA,GAAA,OAAO,CAAE,CAAA,EAAE,EAAE,EAAE,IAClB,CAAC,CAAA,CAAA;;;IAIL,CAAA,IAAA,SAAS,KAAK,OAAO,EAAA;IAChB,EAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IAEnC,EAAA,IAAA,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;IACd,EAAA,IAAA,EAAE,GAAG,WAAW,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAA,CAAA;IACpD,EAAA,IAAA,EAAE,GAAGA,KAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAA,CAAA;IACtB,EAAA,IAAA,EAAE,GAAGA,KAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAA,CAAA;IACtB,EAAA,IAAA,CAAC,GAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAA,CAAA;IAGZ,EAAA,OAAA,CAAA,GAAA,OAAO,CAAE,CAAA,EAAE,EAAE,EAAE,IAClB,CAAC,CAAA,CAAA;;;IAIL,CAAA,IAAA,SAAS,KAAK,OAAO,EAAA;IAChB,EAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IAEnC,EAAA,IAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;UACX,EAAE,GAAG,SAAS,GAAA,CAAI,CAAC,EAAE,CAAC,CAAA,GAAI,OAAO,CAAA,CAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;IAGpC,EAAA,OAAA,CAAA,GAAA,EAAE,EACL,CAAC,CAAA,CAAA;;;IAIL,CAAA,IAAA,SAAS,KAAK,QAAQ,EAAA;IACjB,EAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IACnC,EAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;UAEf,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;IAGhB,EAAA,OAAA,CAAA,GAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAChB,CAAA,EAAA,CAAC,EAAE,CAAC,CAAA,CAAA;;;IAIR,CAAA,IAAA,SAAS,KAAK,YAAY,EAAA;eACjB,SAAS,GAAG,GAAG,EAAE,IAAI,IAAA;IACrB,GAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IACnC,GAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;WACf,CAAU,CAAA;;WAEV,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAA,EAAA;IACpB,IAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;YAErB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA,CACL,CAAC,EAAE,CAAC,CAAA,GAAA,CAAK,CAAC,EAAE,CAAC,CAAA,CAAA;IAClB,IAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;;IAG1B,GAAA,IAAA,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAK,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAK,IAAA,SAAS,KAAK,CAAC,EAAA,SAAA;WAGnD,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAA,EAAA,CACnB,CAAC,EAAE,CAAC,CAAA,GAAA,CAAK,CAAC,EAAE,CAAC,CAAA,CAAA;IAEV,GAAA,OAAA,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;;;;IAItB,CAAA,IAAA,SAAS,KAAK,SAAS,EAAA;eACd,SAAS,GAAG,GAAG,EAAE,IAAI,IAAA;IACrB,GAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IAEnC,GAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;IACf,GAAA,IAAA,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;IAChB,GAAA,IAAA,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;IAEhB,GAAA,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAK,IAAA,WAAW,EACrB,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA;IAEd,GAAA,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAK,IAAA,SAAS,KAAK,CAAC,EAAA,SAAA;IAI1B,GAAA,OAAA,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CACR,EAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CACR,EAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,EAAE,CACf,EAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,EAAE,CAAA,CAAA,CAAA;;;;SAKvB,cAAc,CAAC,SAAS,EAAE,OAAO,CAAA,EAAA;IAC7B,EAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;UACf,CAAU,CAAA;UACV,CAAU,CAAA;IACV,EAAA,IAAA,SAAS,GAAG,GAAG,CAAA;;;IAEf,GAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;OACf,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAA,CAAE,GAAG,CAAC,CAAC,CAAA,CAAA;IACd,GAAA,IAAA,EAAA,SAAS,KAAK,CAAC,EAAA,MAAA;IACf,GAAA,QAAA,CAAA,CAAC,CAAC,KAAK,EAAG,CAAA,EAAE,CAAC,CAAC,CAAA,EAAA;;IAEpB,EAAA,IAAA,SAAS,KAAK,CAAC,EACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;cAEpB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;gBAGf,YAAY,CAAC,SAAS,EAAE,OAAO,CAAA,EAAA;;UAE3B,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAA,CAAA,CAAA;;UAClC,CAAU,CAAA;UACV,CAAU,CAAA;IAEV,EAAA,IAAA,SAAS,GAAG,GAAG,CAAA;;;IAEf,GAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;OACf,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAA,CAAE,GAAG,CAAC,CAAC,CAAA,CAAA;IACd,GAAA,IAAA,EAAA,SAAS,KAAK,CAAC,EAAA,MAAA;IACf,GAAA,QAAA,CAAA,CAAC,CAAC,KAAK,EAAG,CAAA,EAAE,CAAC,CAAC,CAAA,EAAA;;IAExB,EAAA,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAA,CAAA;IAEX,EAAA,IAAA,SAAS,KAAK,CAAC,EACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;cAEpB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;gBAGf,aAAa,CAAC,SAAS,EAAE,OAAO,CAAA,EAAA;;UAE5B,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAA,CAAA,CAAA;;UACjC,CAAU,CAAA;UACV,CAAU,CAAA;IAEV,EAAA,IAAA,SAAS,GAAG,GAAG,CAAA;;;IAEf,GAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;OACf,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAA,CAAE,GAAG,CAAC,CAAC,CAAA,CAAA;IACd,GAAA,IAAA,EAAA,SAAS,KAAK,CAAC,EAAA,MAAA;IACf,GAAA,QAAA,CAAA,CAAC,CAAC,KAAK,EAAG,CAAA,EAAE,CAAC,CAAC,CAAA,EAAA;;IAEpB,EAAA,IAAA,SAAS,KAAK,CAAC,EACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;IAE5B,EAAA,CAAC,GAAGA,KAAG,CAAC,GAAG,CAAE,CAAA,KAAK,CAAC,CAAC,CAAA,CAAA;cAEZ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;;;IAGf,CAAA,IAAA,SAAS,KAAK,UAAU,EAAA;IACpB,EAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;UACf,CAAU,CAAA;UACV,CAAU,CAAA;IACV,EAAA,IAAA,SAAS,GAAG,GAAG,CAAA;;;IAEf,GAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;OACf,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAE,GAAG,CAAC,GAAG,CAAA,CAAA;IACd,GAAA,IAAA,EAAA,SAAS,KAAK,CAAC,EAAA,MAAA;IACf,GAAA,QAAA,CAAA,CAAC,CAAC,KAAK,EAAG,CAAA,EAAE,CAAC,CAAC,CAAA,EAAA;;IAEpB,EAAA,IAAA,SAAS,KAAK,CAAC,EACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;cAEpB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;;;IAGf,CAAA,IAAA,SAAS,KAAK,UAAU,EAAA;IACpB,EAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;UACf,CAAU,CAAA;UACV,CAAU,CAAA;IACV,EAAA,IAAA,SAAS,GAAG,GAAG,CAAA;;;IAEf,GAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;OACf,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAE,GAAG,CAAC,GAAG,CAAA,CAAA;IACd,GAAA,IAAA,EAAA,SAAS,KAAK,CAAC,EAAA,MAAA;IACf,GAAA,QAAA,CAAA,CAAC,CAAC,KAAK,EAAG,CAAA,EAAE,CAAC,CAAC,CAAA,EAAA;;IAEpB,EAAA,IAAA,SAAS,KAAK,CAAC,EACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;cAEpB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;;;IAGf,CAAA,IAAA,SAAS,KAAK,MAAM,EAAA;IACf,EAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IACnC,EAAA,IAAA,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;IAGT,EAAA,OAAA,CAAA,GAAA,OAAO,CAAE,CAAA,CAAC,EAAE,CAAC,IAChB,CAAC,CAAA,CAAA;;;IAIL,CAAA,IAAA,SAAS,KAAK,MAAM,EAAA;IACf,EAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAI,GAAA,OAAO,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA,CAAA;IAE3C,EAAA,IAAA,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CACxB,GAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,GAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;cAEd,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;;;IAGf,CAAA,IAAA,SAAS,KAAK,QAAQ,EAAA;IACjB,EAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;;UAEnC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA;cACC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAA;IACtB,KAAA,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;UACd,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,OAAO,CAAA,CAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;;;UAGhC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAA,EAAA;kBACT,OAAO,CAAA,CAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,CAAA;;IAEhC,GAAA,IAAA,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;IACtB,GAAA,IAAA,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;IACtB,GAAA,IAAA,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAA,CAAA;eACb,GAAG,EAAE,GAAG,EAAE,CAAC,CAAA,CAAA;;;;IAIvB,CAAA,IAAA,SAAS,KAAK,cAAc,EAAA;eACnB,SAAS,GAAG,EAAE,EAAE,IAAI,IAAA;IACpB,GAAA,IAAA,CAAA,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAG,EAAA,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA,CAAA;IACnC,GAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAA,CAAA;IACnB,GAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IACX,GAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IACP,GAAA,IAAA,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;WACd,CAAC,GAAG,GAAG,CAAC,EAAE,CAAA,CAAA;WAEV,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW,IAAI,SAAS,EAAA,GAAK,CAAC,EAAA,SAAA;eAGtC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;;;;IAInB,CAAA,IAAA,SAAS,KAAK,UAAU,EAAA;;IAEf,GAAA,IAAA,CAAA,CAAC,EAAE,SAAS,CAAI,GAAA,WAAW,CAAC,EAAE,CAAC,CAAC,CAAG,EAAA,EAAE,CAAC,CAAC,GAAG,GAAG,CAAA,CAAA;IAC7C,GAAA,IAAA,CAAA,CAAC,EAAE,SAAS,CAAI,GAAA,WAAW,CAAC,EAAE,CAAC,CAAC,CAAG,EAAA,EAAE,CAAC,CAAC,GAAG,GAAG,CAAA,CAAA;WAE9C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA,SAAA;OAEV,YAAY,GAAA,CAAA,GAAO,SAAS,EAAA,GAAK,SAAS,CAAA,CAAA;YAErC,CAAC,CAAA,GAAI,WAAW,CAAC,EAAE,CAAC,CAAC,CAAA,EAAG,EAAE,CAAC,CAAC,CAAA,EAAG,YAAY,CAAA,CAAA;WAE5C,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA,SAAA;eAEb,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA;eAEZ,IAAI,EAAA;;;IAGX,CAAA,IAAA,SAAS,KAAK,YAAY,EAAA;UACtB,GAAc,CAAA;;IACT,EAAA,KAAA,IAAA,SAAS,GAAG,EAAE,EAAE,SAAS,KAAK,CAAC,IAAA;IAC/B,GAAA,IAAA,CAAA,CAAC,EAAE,SAAS,CAAI,GAAA,WAAW,CAAC,EAAE,CAAC,CAAC,CAAG,EAAA,EAAE,CAAC,CAAC,GAAG,GAAG,CAAA,CAAA;IAC7C,GAAA,IAAA,CAAA,CAAC,EAAE,SAAS,CAAI,GAAA,WAAW,CAAC,EAAE,CAAC,CAAC,CAAG,EAAA,EAAE,CAAC,CAAC,GAAG,GAAG,CAAA,CAAA;WAE9C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA,SAAA;IAEN,GAAA,IAAA,GAAG,GAAG,OAAO,CAAK,CAAA,GAAA,SAAS,KAAK,SAAS,CAAA,CAAA,CAAA;IAC7C,GAAA,YAAY,GAAG,GAAG,CAAA;IAEb,GAAA,IAAA,CAAA,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,GAAA,EAAA,CAAA;;IAEZ,GAAA,QAAA,GAAG,CAAC,MAAM;;;aAGT,CAAC;IACD,KAAA,CAAA,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,GAAG,CAAA;SACjB,GAAG,GAAA,CAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAA,CAAA;;aAErB,CAAC;IACD,KAAA,CAAA,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GAAG,CAAA;UACnB,CAAC,EAAE,CAAC,CAAI,GAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,GAAA,CACV,CAAC,CAAC,GAAG,CAAC,CAAC,CAAG,EAAA,CAAC,CACX,GAAA,CAAA,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;SACf,GAAG,GAAA,CAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAA,CAAA;;aAErB,CAAC;UACD,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,GAAI,GAAG,CAAA;IACtB,KAAA,CAAA,CAAC,EAAE,CAAC,CAAI,GAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,GAAA,CAAK,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA;IAChC,KAAA,CAAA,CAAC,EAAE,CAAC,CAAI,GAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,GAAA,CAAK,CAAC,EAAE,CAAC,CAAK,GAAA,CAAA,CAAC,EAAE,CAAC,CAAA,CAAA;IACjC,KAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;IACX,KAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;SACX,GAAG,GAAA,CAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAA,CAAA;;;;;IAI1B,GAAA,IAAA,YAAY,CAAC,GAAG,CAAA,EAAA,MAAA;;;aAEjB,GAAG,CAAA;;;IAGV,CAAA,IAAA,SAAS,IAAI,YAAY,EAAA;IACrB,EAAA,IAAA,CAAC,GAAG,EAAE,CAAA;;IACN,EAAA,IAAA,OAAO,OAA8B,GAAG,CAAA;SACvC,CAAC,EAAA,CAAG,CAAC,EAAE,CAAC,CAAA,CAAA;SACR,CAAC,EAAA,CAAG,CAAC,EAAE,CAAC,CAAA,CAAA;SACR,CAAC,EAAA,CAAG,CAAC,EAAE,CAAC,CAAA,CAAA;SACR,CAAC,EAAA,CAAG,CAAC,EAAE,CAAC,CAAA,CAAA;SACR,CAAC,EAAA,CAAG,CAAC,EAAE,EAAE,CAAA,CAAA;SACT,CAAC,EAAA,CAAG,CAAC,EAAE,CAAC,CAAA,CAAA;SACR,EAAE,EAAA,CAAG,CAAC,EAAE,CAAC,CAAA,CAAA;;;IAEV,EAAA,IAAA,GAAG,GAAG,QAAQ,CAAK,CAAA,GAAA,OAAO,CAAC,IAAI,EAAA,CAAA,CAAA,CAAA;IAC/B,EAAA,IAAA,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAA,CAAA;IACxB,EAAA,IAAA,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAG,EAAA,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAA,CAAA;IACjD,EAAA,IAAA,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA,EAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA,CAAA;IAC9B,EAAA,IAAA,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA,CAAA;IACV,EAAA,OAAAA,KAAG,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,GAAG,CAAA,CAAA,CAAA;;;;;;;;iCAQG,SAAS,CAAA,CAAA,CAAA,CAAA;;;aAGhCS,aAAW,CAAC,GAAc,EAAE,QAAiB,EAAA;IAC9C,CAAA,IAAA,SAAS,KAAK,QAAQ,EAAA;UAClB,EAAE,GAAG,EAAE,CAACT,KAAG,CAAC,EAAE,CAAA,CAAA,CAAG,GAAG,CAAC,WAAW,CAAA,CAAA;IAChC,EAAA,IAAA,EAAE,GAAG,EAAE,CAACA,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAI,CAAA,CAAA,CAAA,GAAG,CAAC,WAAW,CAAA,CAAA;IACxC,EAAA,IAAA,EAAE,GAAG,EAAE,CAACA,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAI,CAAA,CAAA,CAAA,GAAG,CAAC,WAAW,CAAA,CAAA;IACrC,EAAA,OAAA,OAAO,EACV,QAAQ,EACR,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAA,EAChB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAA,EAChB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAA,CAAA,CAAA,CAAA;;;IAIpB,CAAA,IAAA,SAAS,KAAK,OAAO,EAAA;aACd,OAAO,CAAA;OACV,QAAQ;IACR,GAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA,CAAA;OACnB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;OAC1B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;;;;IAI9B,CAAA,IAAA,SAAS,KAAK,OAAO,EAAA;aACd,OAAO,CAAA;OACV,QAAQ;OACR,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;OAC1B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;OAC1B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;;;;SAI9B,SAAS,KAAK,QAAQ,IACtB,SAAS,KAAK,YAAY,IAC1B,SAAS,KAAK,SAAS,EAAA;aAChB,OAAO,CAAA;OACV,QAAQ;OACR,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;OAC1B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;OAC1B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;;;;SAI9B,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAA,EAAA;aACf,OAAO,CAAA,CACV,QAAQ,EACR,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAClB,CAAA,EAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA,CAAA,EACnB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;IAIvB,CAAA,IAAA,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAK,IAAA,SAAS,KAAK,MAAM,EAAA;UAC9C,OAAO,GAAA,CAAI,CAAU,EAAE,CAAU,KACjC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,GAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA,GAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;;eAEpC,SAAS,GAAG,GAAG,EAAE,IAAI,IAAA;WAEtB,OAAO,GAAA;QACP,QAAQ;IACR,IAAA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAA,CAAA;IACvB,IAAA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAA,CAAA;IACvB,IAAA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAA,CAAA;;;IAGtB,GAAA,IAAA,CAAA,YAAY,CAAC,OAAO,CAAK,IAAA,SAAS,KAAK,CAAC,EAAA,SAAA;IAGtC,GAAA,OAAA,OAAO,CAAC,OAAO,CAAA,CAAA;;;;IAI1B,CAAA,IAAA,SAAS,KAAK,cAAc,EAAA;IACxB,EAAA,IAAA,EAAE,IAAI,CAAS,EAAE,CAAS,KAC1B,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAI,GAAA,CAAC,GAAG,CAAC,CAAA;UAEzB,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAA,CAAA;;eAEZ,SAAS,GAAG,GAAG,EAAE,IAAI,IAAA;WAEtB,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;IACT,GAAA,IAAA,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;WACf,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;IACT,GAAA,IAAA,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;WAEf,OAAO,GAAA,CACP,QAAQ,EACRA,KAAG,CAAC,EAAE,CAAE,CAAA,GAAG,CAAC,EAAE,CACd,EAAAA,KAAG,CAAC,EAAE,CAAA,CAAE,GAAG,CAAC,EAAE,CAAA,EACdA,KAAG,CAAC,EAAE,CAAA,CAAE,GAAG,CAAC,EAAE,CAAA,CAAA,CAAA;IAGb,GAAA,IAAA,CAAA,YAAY,CAAC,OAAO,CAAK,IAAA,SAAS,KAAK,CAAC,EAAA,SAAA;IAGtC,GAAA,OAAA,OAAO,CAAC,OAAO,CAAA,CAAA;;;;IAI1B,CAAA,IAAA,SAAS,KAAK,UAAU,EAAA;IAEpB,EAAA,IAAA,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,IAAK,CAAA,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;IAC1D,EAAA,IAAA,IAAI,GAAG,YAAY,CAAC,MAAM,CAAE,CAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;IAE/C,EAAA,CAAA,CAAC,EAAE,CAAC,CAAE,CAAA,OAAO,CAAC,CAAC,IAAA;WACR,CAAC,GAAGA,KAAG,CAAC,CAAC,CAAA,CAAA;IACN,GAAA,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA,EAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA;OACrC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA;;;;UAKhB,OAAO,GAAA,MAAA;gBACE,SAAS,GAAG,EAAE,EAAE,IAAI,IAAA;YAErB,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAA,CAAA;IAEzB,IAAA,IAAA,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,EAAA,EACpC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAA,CAAA,CAAA;IAEnC,IAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAA,CAAA,CAAA;YAExB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA,CAAA,IAAM,SAAS,EAAA,GAAK,CAAC,EAAA,SAAA;eAG3B,CAAC,CAAA;;;;eAIP,SAAS,GAAG,GAAG,EAAE,IAAI,IAAA;IAEtB,GAAA,IAAA,OAAO,IACP,QAAQ,EACR,OAAO,EACP,EAAA,OAAO,IACP,OAAO,EAAA,CAAA,CAAA;IAGN,GAAA,IAAA,CAAA,YAAY,CAAC,OAAO,CAAK,IAAA,SAAS,KAAK,CAAC,EAAA,SAAA;IAGtC,GAAA,OAAA,OAAO,CAAC,OAAO,CAAA,CAAA;;;;IAI1B,CAAA,IAAA,SAAS,KAAK,YAAY,EAAA;UACtB,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,IAAA,CAAK,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAA,CAAA,CAAA;IACtD,EAAA,QAAQ,OAAO,QAAQ,EAAA,GAAKA,KAAG,CAAE,CAAA,EAAE,EAAE,EAAE,CAAA,CAAA,CAAA,CAAA;UACnC,OAAkB,CAAA;;IACb,EAAA,KAAA,IAAA,SAAS,GAAG,EAAE,EAAE,SAAS,KAAK,CAAC,IAAA;IAC/B,GAAA,IAAA,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,CAAI,GAAA,OAAO,CAAC,QAAQ,CAAA,CAAA;IACnC,GAAA,OAAO,IAAI,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAA;IAE3B,GAAA,IAAA,YAAY,CAAC,OAAO,CAAA,EAAA,MAAA;;;IAGrB,EAAA,OAAA,OAAO,CAAC,OAAO,CAAA,CAAA;;;IAGtB,CAAA,IAAA,SAAS,KAAK,YAAY,EAAA;IACtB,EAAA,IAAA,OAAO,IAAI,QAAQ,CAAA,CAAA;UACnB,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;eAChB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA,EAAG,CAAC,EAAA,EAAA;WACrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA,SAAA;IACb,GAAA,IAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA,EAAE,CAAC,CAAC,CAAA,EAAA,SAAA;IACb,GAAA,IAAA,CAAC,KAAK,CAAC,EAAA,SAAA;IAEX,GAAA,OAAO,CAAC,IAAI,CAACA,KAAG,CAAC,CAAC,CAAA,CAAA,CAAA;WACd,OAAO,CAAC,MAAM,IAAI,CAAC,EAAA,MAAA;;;IAE3B,EAAA,OAAO,GAAO,CAAA,GAAA,OAAO,EAAK,GAAAA,KAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAI,CAAA,CAAA,CAAA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;IAChD,EAAA,OAAA,OAAO,CAAC,OAAO,CAAA,CAAA;;;IAGtB,CAAA,IAAA,SAAS,IAAI,UAAU,EAAA;UACnB,OAAO,GAAG,SAAS,CAAC,OAAO,CAAA;aACxB,OAAO,CAAA;;;iCAGU,SAAS,CAAA,CAAA,CAAA,CAAA;;;aAGhC,OAAO,CAAC,OAAe,EAAE,GAAc,EAAA;IAExC,CAAA,IAAA,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAA,CAAA;SACjC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAA,CAAA;IAEjB,CAAA,IAAA,GAAG,GAAG,OAAO,CAAA;OAGZ,KAAK,EAAE,YAAY,CAAA,EAAA,CACnB,KAAK,EAAE,cAAc,CAAA,EAAA,CACrB,KAAK,EAAE,aAAa,CAAA,CAAA,CACvB,OAAO,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,EAAY,CAAC,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;IAEnD,CAAA,GAAG,GAAG,GAAG,CACJ,OAAO,CAAC,CAAC,EAAE,GAAG,CACd,CAAA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAA,CAAA;IAElB,CAAA,IAAA,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAI,GAAA,CAAA,GAAG,EAAC,UAAU,CAAC,CAAC,CAAA,CAAA,CAAA;;IAE5C,CAAA,IAAA,SAAS,IAAI,QAAQ,EAAA;UACjB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA,CAAA;;UACT,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA;IACN,GAAA,GAAG,CAAC,CAAC,CAAI,GAAA,CAAC,CAAC,GAAG,EAAA,CAAA;IACd,GAAA,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAA,CAAA;;;UAE1B,GAAG,CAAC,EAAE,CAAC,CAAC,GACR,GAAG,GAAG,GAAG,CAAC,GAAG,EAAA,CAAA;;;SAGjB,SAAS,KAAK,YAAY,IAAI,SAAS,EAAA,EAAA;IACnC,EAAA,IAAA,CAAC,GAAG,GAAG,CAAC,CAAC,CAAE,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;IAChC,EAAA,GAAG,GAAI,CAAA,CAAC,EAAE,GAAG,CAAC,CAAC,CAAG,EAAA,GAAG,CAAC,CAAC,CAAG,EAAA,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;IAC/B,EAAA,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAA,CAAA;;;SAG1B,QAAQ,GAAG,SAAS,KAAK,QAAQ,CAAA;;IAE5B,CAAA,SAAA,EAAE,CAAC,CAAS,EAAA;IACb,EAAA,IAAA,CAAC,IAAI,GAAG,CAAC,MAAM,SAAS,EAAE,CAAA;WACzB,GAAG,CAAC,CAAC,CAAA,EAAA,OAAU,EAAE,CAAA;aACf,QAAQ,GACX,GAAG,CAAC,CAAC,CAAA,CAAE,QAAQ,EAAA,GACf,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;;IAGjB,CAAA,GAAG,GAAG,GAAG,CACJ,iBAAiB,EACjB,CAAA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,GACrB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAA,CAAA,CACrB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CACrB,CAAA,CAAA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAA,CAAA,CACrB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CACrB,CAAA,CAAA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAA,CAAA,CACrB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CACrB,CAAA,CAAA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAA,CAAA,CAAA;IAE1B,CAAA,GAAG,GAAG,GAAG,CACJ,OAAO,CAAC,GAAG,EAAE,IAAI,CAAA,CACjB,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAA,CAAA,CAAA;IAErB,CAAA,OAAA,CAAA,GAAG,EAAE,GAAG,CAAA,CAAA;;;UAGdU,OAAK,CAAA;KACP,WAAR,GAAA;eACqB,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAA,EAAA;eACjB,GAAG,CAAC,CAAC,CAAA,CAAE,iBAAiB,EAAA;aACvB,OAAO;IAAQ,KAAA,SAAS,GAAG,OAAO,CAAA;;aAClC,OAAO;IAAQ,KAAA,SAAS,GAAG,OAAO,CAAA;;aAClC,QAAQ;IAAO,KAAA,SAAS,GAAG,QAAQ,CAAA;;aACnC,UAAU;IAAK,KAAA,SAAS,GAAG,UAAU,CAAA;;aACrC,QAAQ;IAAO,KAAA,SAAS,GAAG,QAAQ,CAAA;;aACnC,SAAS;IAAM,KAAA,SAAS,GAAG,SAAS,CAAA;;aACpC,OAAO;IAAQ,KAAA,SAAS,GAAG,OAAO,CAAA;;aAClC,MAAM;SAAS,SAAS,GAAc,GAAG,CAAC,CAAC,CAAA,CAAA;aAC3C,aAAa;IAAE,KAAA,WAAW,GAAG,KAAK,CAAA;;aAClC,aAAa;IAAE,KAAA,WAAW,GAAG,IAAI,CAAA;;aACjC,OAAO;IAAQ,KAAA,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;aACxC,SAAS;IAAM,KAAA,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC5C,YAAY;IAAG,KAAA,SAAS,GAAG,IAAI,CAAA;;aAC/B,aAAa;IAAE,KAAA,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC3C,GAAG;IAAY,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA,CAAA;;aAC/B,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC1C,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC1C,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC1C,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC1C,GAAG;IAAE,KAAA,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAA,CAAA,CAAA;;aAC1C,KAAK;IAAE,KAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAA,CAAA,CAAA;;aACjD,KAAK;IAAE,KAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAA,CAAA,CAAA;;aACjD,KAAK;IAAE,KAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAA,CAAA,CAAA;;aACjD,KAAK;IAAE,KAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAA,CAAA,CAAA;;aACjD,KAAK;IAAE,KAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE,CAAA,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAA,CAAA,CAAA;;;;;MAG9D,SAAS,GAAG,IAAI,CAAC,MAAM,EAAA,CAAA;IACvB,EAAAH,OAAK,IAAI,CAAC,CAAA;;;KAGd,MAAM,GAAA;aACKA,OAAK,GAAG,CAAC,IAAIC,cAAY,CAAA;;;IAGpC,CAAA,SAAS,CAAC,KAAa,EAAA;IACnB,EAAAA,cAAY,IAAI,KAAK,CAAA;;;KAGzB,SAAS,GAAA;MACLD,OAAK,EAAA,CAAA;IAED,EAAA,IAAA,QAAQ,GAAG,SAAS,CAAA;IAEpB,EAAA,IAAA,OAAO,GAAG,SAAS,CAACA,OAAK,GAAG,SAAS,CAAC,MAAM,CAAA,CAAA;UAC5C,GAAG,GAAG,MAAM,CAAC,OAAO,CAAA,CAAA;IAEnB,EAAA,IAAA,CAAA,GAAG,EAAE,QAAQ,CAAA,GAAI,OAAO,CAAC,OAAO,EAAE,GAAG,CAAA,CAAA;IAEtC,EAAA,IAAA,OAAO,GAAGE,aAAW,CAAC,GAAG,EAAE,QAAQ,CAAA,CAAA;UAEnC,QAAQ,GAAA,CACRF,OAAK,GAAGC,cAAY,GAAGD,OAAK,GAAGC,cAAY,EAC3CA,cAAY,CAAA,CAAA;;;IAIZ,GAAA,OAAO,EAAE,QAAQ;OACjB,QAAQ;OACR,QAAQ;OACR,GAAG;IACH,GAAA,SAAS,EAAE,UAAU;OACrB,QAAQ;OACR,OAAO;;;;;aAKH,WAAW,GAAA;gBACZE,OAAK,EAAA,CAAA;;;;;aCroBJR,IAAE,CAA2B,IAAU,EAAE,EAA8B,EAAA;KACnF,KAAK,CAAC,IAAI,EAAE,EAAE,CAAA,CAAA;;;aAGFC,MAAI,CAA2B,IAAU,EAAE,IAAiB,EAAA;KACxE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAA,CAAA;;;IAGN,SAAAC,aAAW,CAAC,GAAe,EAAE,OAAe,EAAE,MAAe,EAAA;IAC9D,CAAA,OAAA,IAAA,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,CAAA,CAAA;;;;;;;;;;;;;;;0BCOjD,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;8CANE,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;8CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAQS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;0DADJ,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;+CANE,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;+CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WA3DzB,QAAkB,EAAA,GAAA,OAAA,CAAA;WAClB,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,KAAc,EAAA,GAAA,OAAA,CAAA;IACd,CAAA,IAAA,EAAA,KAAK,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;IAClB,CAAA,IAAA,EAAA,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,aAAa,CAAA,EAAA,GAAA,OAAA,CAAA;IACtC,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;SAEtB,KAAa,CAAA;SACb,GAAW,CAAA;SACX,QAAgB,CAAA;;IAEX,CAAA,SAAA,MAAM,CAAC,CAAU,EAAA;WACjB,UAAU,CAAC,CAAC,CAAA,IAAA,CAAM,KAAK,EAAA,OACjB,CAAC,CAAC,QAAQ,EAAA,CAAG,cAAc,CAAC,IAAI,CAAA,CAAA;UAEvC,QAAQ,GAAG,QAAQ,KAAK,QAAQ,CAAA;UAEhC,IAAI,GAAG,QAAQ,GACf,CAAC,CAAC,QAAQ,EAAA,GACV,GAAG,CAAC,CAAC,EAAE,SAAS,EAAA,CAAA,CAAA;UAEhB,KAAK,EACL,IAAI,IAAI,KAAK,CAAA;IAEV,EAAA,OAAA,OAAO,CAAC,IAAI,CAAA,CAAA;;;IAGP,CAAA,SAAA,QAAQ,CAAC,KAAY,EAAA;cACzB,KAAK;YAEJ,OAAO;IACR,IAAA,YAAA,CAAA,CAAA,EAAA,KAAK,GAAG,IAAI,CAAA,CAAA;IACZ,IAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,OAAO,CAAA,CAAA;;YAGjB,SAAS;wBACV,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA,CAAA,CAAA;IACpB,IAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,OAAO,CAAA,CAAA;;YAGjB,OAAO;wBACR,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA,CAAA,CAAA;IACpB,IAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,cAAc,CAAA,CAAA;;YAGxB,OAAO;wBACR,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA,CAAA,CAAA;IACpB,IAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,YAAY,CAAA,CAAA;;;;IAI/B,EAAA,YAAA,CAAA,CAAA,EAAA,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICsJf,EAAA,QAAA,aAAA,GAAM,IAAC,QAAQ;qBACjB,GAAE,CAAA,EAAA,CAAA,CAAA,CAAA;qBACH,GAAG,CAAA,EAAA,CAAA;IACH,EAAA,KAAA,EAAA,WAAW,YAAC,GAAM,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAHf,GAAA,IAAA,KAAA,cAAA,CAAA,EAAA,WAAA,CAAA,QAAA,cAAA,GAAM,IAAC,QAAQ,CAAA;6DACjB,GAAE,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;6DACH,GAAG,CAAA,EAAA,CAAA,CAAA;IACH,GAAA,IAAA,KAAA,cAAA,CAAA,EAAA,WAAA,CAAA,KAAA,GAAA,WAAW,YAAC,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDAjBN,GAAS,CAAA,CAAA,CAAA,EAAA;;;;;;;;;YAM5B,EAAE;IACD,IAAA,GAAA,aAAA,GAAM,IAAC,GAAG;IACR,IAAA,KAAA,EAAA,QAAQ,YAAC,GAAM,CAAA,CAAA,CAAA,CAAA;;;;;;IAInB,CAAA,IAAA,UAAA,cAAA,GAAM,IAAC,OAAO,CAAA;;IAAa,CAAA,MAAA,OAAA,GAAA,GAAA,kBAAA,GAAS,WAAC,GAAE,CAAA,EAAA,CAAA,CAAA,CAAA;;;oCAA5C,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;IAWkB,EAAA,OAAA,aAAA,GAAM,IAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6EAvBX,GAAS,CAAA,CAAA,CAAA,CAAA;;;IAO3B,GAAA,IAAA,KAAA,cAAA,CAAA,EAAA,iBAAA,CAAA,GAAA,cAAA,GAAM,IAAC,GAAG,CAAA;IACR,GAAA,IAAA,KAAA,cAAA,CAAA,EAAA,iBAAA,CAAA,KAAA,GAAA,QAAQ,YAAC,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;IAInB,IAAA,UAAA,cAAA,GAAM,IAAC,OAAO,CAAA;;;;;;;;;IAWG,GAAA,IAAA,KAAA,cAAA,CAAA,EAAA,eAAA,CAAA,OAAA,cAAA,GAAM,IAAC,OAAO,CAAA;;;;;;;;;;;sCAXpC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA9EG,SAAA,QAAQ,CAAC,KAAY,EAAA;IACtB,CAAA,IAAA,KAAK,CAAC,SAAS,EACR,OAAA,KAAK,CAAC,SAAS,CAAA;;IAElB,CAAA,QAAA,KAAK,CAAC,QAAQ;WACb,UAAU,CAAA;WACV,QAAQ,CAAA;WACR,SAAS,CAAA;WACT,OAAO;cACD,GAAG,CAAA;WACT,UAAU;cACJ,GAAG,CAAA;WACT,YAAY;cACN,GAAG,CAAA;WACT,YAAY;cACN,IAAI,CAAA;WACV,UAAU;cACJ,IAAI,CAAA;;;YAGZ,SAAS,CAAA;;;IAGX,SAAA,WAAW,CAAC,KAAY,EAAA;IACrB,CAAA,QAAA,KAAK,CAAC,QAAQ;WACb,UAAU;cAAS,GAAG,CAAA;;;YAGxB,EAAE,CAAA;;;;;;SA5IT,KAAY,CAAA;SACZ,QAAkB,CAAA;IAElB,CAAA,IAAA,KAAK,GAAG,WAAW,EAAA,CAAA;SACnB,MAAM,GAAG,KAAK,CAAC,SAAS,EAAA,CAAA;IACxB,CAAA,IAAA,QAAQ,IAAW,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAA,CAAA;SACzC,MAAwC,CAAA;SACxC,SAAS,GAAA,CAAc,CAAC,EAAE,EAAE,CAAA,CAAA;IAC5B,CAAA,IAAA,WAAW,GAAGA,aAAW,CAAC,iBAAiB,EAAE,IAAI,CAAA,CAAA;IACjD,CAAA,IAAA,OAAO,GAAGA,aAAW,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAA,CAAA;IAE/C,CAAA,IAAA,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM,EAAA,CAAA,CAAA;;cAEnC,QAAQ,GAAA;IACb,EAAA,GAAG,CAAC,UAAU,EAAA,CAAA;;IACN,EAAA,QAAA,MAAM,CAAC,QAAQ;YACd,UAAU,CAAA;YACV,YAAY;QACb,QAAQ,EAAA,CAAA;;;;;cAKX,QAAQ,GAAA;IACb,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;;IAET,EAAA,IAAA,MAAM,IAAI,OAAO,EAAA;IACjB,GAAA,MAAM,GAAG,SAAS,CAAA;OAClB,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAA,CAAA,CAAA;IAE9C,GAAA,GAAG,OAAO,WAAW,EAAA,CAAA,CAAA;cAEd,IAAI,CAAA;;;UAGX,MAAM,KAAK,SAAS,EAAA,OACb,KAAK,CAAA;;IAEZ,EAAA,IAAA,MAAM,IAAI,UAAU,EAAA;OACpB,QAAQ,EAAA,CAAA;cACD,IAAI,CAAA;;;aAGR,IAAI,CAAA;;;IAGN,CAAA,SAAA,SAAS,CAAC,KAAc,EAAA;IAC7B,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;UAET,QAAQ,EAAA,EAAA,OAAA;;IAGR,EAAA,IAAA,MAAM,KAAK,SAAS,EAAA;IACpB,GAAA,MAAM,GAAG,UAAU,CAAA;IAEf,GAAA,IAAA,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAA,CAAA,CAAA;IACnD,GAAA,IAAA,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAA,CAAA,CAAA;;IAE5D,GAAA,IAAA,QAAQ,KAAK,OAAO,EAAA;wBACpB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;IACb,IAAA,IAAA,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAA,CAAA;IAChC,IAAA,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAA,CAAA;IAChC,IAAA,WAAW,CAAC,KAAK,EAAA,CAAA;YACb,MAAM,EACN,QAAQ,CAAC,IAAI,EAAA,CAAA;;IAGjB,IAAA,QAAQ,CAAC,QAAQ,CAAE,CAAA,QAAQ,CAAC,OAAO,CAAA,CAAA;QACnC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;QACb,KAAK,CAAC,SAAS,CAAC,CAAC,CAAA,CAAA;wBACjB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;wBACjB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;;;IAGrB,GAAA,QAAQ,CAAC,OAAO,CAAE,CAAA,QAAQ,CAAC,OAAO,CAAA,CAAA;;;;oBAI3B,QAAQ,GAAA;IACnB,EAAA,YAAA,CAAA,CAAA,EAAA,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM,EAAA,CAAA,CAAA,CAAA;sBACxC,MAAM,GAAG,KAAK,CAAC,SAAS,EAAA,CAAA,CAAA;YAClB,IAAI,EAAA,CAAA;MACV,UAAU,EAAA,CAAA;;;cAGL,IAAI,GAAA;MACT,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;IACf,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;;;cAGR,UAAU,GAAA;IACf,EAAA,MAAM,GAAG,OAAO,CAAA;IAEhB,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;IACb,EAAA,WAAW,CAAC,MAAM,EAAA,CAAA;;MAElB,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAA;OAChB,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAA;;;sBAGxB,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAA,CAAA;;IAEnB,EAAA,QAAA,MAAM,CAAC,QAAQ;YACd,UAAU,CAAA;YACV,YAAY,CAAA;YACZ,YAAY,CAAA;YACZ,UAAU;QACX,QAAQ,EAAA,CAAA;;;;;cAoCX,QAAQ,GAAA;MACb,KAAK,CAAC,SAAS,CAAC,CAAC,CAAA,CAAA;sBACjB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;IACjB,EAAA,KAAK,CAAC,OAAO,EAAA,CAAA;MACb,GAAG,CAAC,IAAI,CAAC,YAAY,CAAA,CAAA;;;IAGzB,CAAA,OAAO,OAAO,UAAU,EAAA,CAAA,CAAA;KAExBF,IAAE,CAAC,iBAAiB,EAAA,MAAQ,QAAQ,EAAA,CAAA,CAAA;KACpCA,IAAE,CAAC,YAAY,EAAA,MAAQ,IAAI,EAAA,CAAA,CAAA;KAC3BA,IAAE,CAAC,kBAAkB,EAAA,MAAQ,QAAQ,EAAA,CAAA,CAAA;;SAEjC,MAAM,GAAA;MACN,KAAK,EAAA,CAAA;;;;;;;MAOL,IAAI,EAAA,CAAA,WAAA,CAAA;MACJ,IAAI,EAAA,CAAA,uBAAA,CAAA;MACJ,QAAQ,EAAA;IACJ,GAAA,GAAG,EAAE,cAAc;IACnB,GAAA,GAAG,EAAE,cAAc;IACnB,GAAA,EAAE,EAAE,aAAa;;;;;;;;;;iCAkBL,QAAQ,EAAA,CAAA;;;;IAST,GAAA,QAAQ,CAAC,EAAE,CAAA,GAAA,OAAA,CAAA;;;;;IACN,CAAA,MAAA,eAAA,GAAA,GAAA,IAAA,SAAS,CAAC,GAAG,CAAA,CAAA;IAMb,CAAA,MAAA,IAAA,GAAA,MAAAC,MAAI,CAAC,kBAAkB,CAAA,CAAA;;;;OADhC,KAAK,GAAA,OAAA,CAAA;;;;;;;OAIC,QAAQ,GAAA,OAAA,CAAA;;;;;mCA9Bb,QAAQ,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aCzKR,EAAE,CAA2B,IAAU,EAAE,EAA8B,EAAA;KACnF,KAAK,CAAC,IAAI,EAAE,EAAE,CAAA,CAAA;;;aAGF,IAAI,CAA2B,IAAU,EAAE,IAAiB,EAAA;KACxE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAA,CAAA;;;IAGN,SAAA,WAAW,CAAC,GAAe,EAAE,OAAe,EAAE,MAAe,EAAA;IAC9D,CAAA,OAAA,IAAA,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,CAAA,CAAA;;;;;QCtB9C,OAAO,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;QACxB,UAAsB,CAAA;QACtB,KAAa,CAAA;QACb,YAAY,GAAG,OAAO,CAAC,MAAM,CAAA;IAE7B,IAAA,GAAG,GAAI,CAAS,IAAS,IAAA,OAAO,CAAC,CAAC,CAAA,CAAA;IAClC,IAAA,GAAG,GAAI,GAAW,IAAS,IAAA,QAAQ,CAAC,GAAG,CAAA,CAAA;;aAElC,GAAG,CAAC,CAAS,EAAE,MAAc,EAAA;IAC9B,CAAA,IAAA,CAAC,GAAG,GAAG,CAAC,EAAE,CAAE,CAAA,GAAG,CAAC,MAAM,CAAA,CAAA;YACnB,GAAG,CAAC,CAAC,CAAA,CAAE,GAAG,CAAC,CAAC,CAAA,CAAE,KAAK,EAAA,CAAG,GAAG,CAAC,CAAC,CAAA,CAAA;;;aAG7B,OAAO,CAAC,EAAY,EAAE,GAAa,EAAA;SACpC,CAAC,GAAG,EAAE,CAAC,OAAO,EAAA,CAAA;IACd,CAAA,IAAA,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAE,CAAA,MAAM,GAAG,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAA;;SAEhD,MAAM,GAAA;MACN,EAAE,CAAC,UAAU,CAAC,KAAK,CAAA;MACnB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,CAAE,QAAQ,EAAA,IAAM,IAAI,GAAG,KAAK,GAAG,EAAE,CAAA;MACzC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAA,GAAI,GAAG;;;IAI7B,CAAA,OAAA,CAAA,MAAM,CAAC,GAAG,CAAC,CAAC,IACZ,MAAM,CAAC,GAAG,CAAC,CAAC,CACZ,CAAA,EAAA,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;;;UAKd,KAAK,CAAA;KACP,WAAR,GAAA;eACqB,WAAW,CAAC,GAAa,EAAE,GAAa,EAAA;cACtC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAA,CAAA;;;eAGjB,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAA,EAAA;eACjB,GAAG,CAAC,CAAC,CAAA,CAAE,iBAAiB,EAAA;;;;IAIpC,EAAA,UAAU,GAAG,IAAI,CACZ,MAAM,GACN,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CACd,CAAA,CAAA,IAAI,CAAC,WAAW,CAAA,CAAA;IAErB,EAAA,KAAK,IAAI,CAAC,CAAA;;;KAGd,MAAM,GAAA;aACK,KAAK,GAAG,CAAC,IAAI,YAAY,CAAA;;;IAGpC,CAAA,SAAS,CAAC,KAAa,EAAA;IACnB,EAAA,YAAY,IAAI,KAAK,CAAA;;;KAGzB,SAAS,GAAA;MACL,KAAK,EAAA,CAAA;;;UAGD,OAAO,GAAG,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAA,CAAA;;IAEvC,EAAA,IAAA,GAAG,GAAG,OAAO,CAAA,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;UAEtB,OAAO,GAAG,OAAO,CAAE,CAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAE,GAAG,CAAC,CAAC,IACpC,OAAO,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAA,EAAG,GAAG,CAAA,CAAA,CAAA,CAAA;IAEpC,EAAA,IAAA,EAAE,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA;UAEjB,OAAO,GAAG,OAAO,CAAA,CACjB,OAAO,CAAC,CAAC,CAAE,CAAA,CAAC,CACZ,EAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAA,EACZ,OAAO,CAAC,CAAC,CAAA,CAAE,CAAC,CAAA,EACZ,OAAO,CAAC,CAAC,CAAA,CAAE,CAAC,CAAA,CAAA,CAAA,CAAA;IAGZ,EAAA,IAAA,OAAO,GAAG,OAAO,CAAC,SAAS,CAC3B,GAAG,IAAI,GAAG,KAAK,OAAO,CAAC,CAAC,EAAE,CAAC,CAAA,CAAA,CAAA;UAE3B,QAAQ,GAAA,CACR,KAAK,GAAG,YAAY,GAAG,KAAK,GAAG,YAAY,EAC3C,YAAY,CAAA,CAAA;IAIZ,EAAA,OAAA,EAAA,EAAE,EAAE,OAAO,EAAE,OAAO,EACpB,QAAQ,EAAA,CAAA;;;;aAKJ,UAAU,GAAA;gBACX,KAAK,EAAA,CAAA;;;;;;;;;;;;;;;;;;iBCrEvB,GACI,CAAA,CAAA;2BAAC,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;iBAAC,GACZ,CAAA,CAAA;yEAPY,GAAQ,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA,CAAA,CAAA;6CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;8CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAQQ,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;2DADF,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;qGANC,GAAQ,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA,CAAA,EAAA;;;;;8CACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;+CAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;WA7BzB,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,KAAa,EAAA,GAAA,OAAA,CAAA;IACb,CAAA,IAAA,EAAA,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,aAAa,CAAA,EAAA,GAAA,OAAA,CAAA;IACtC,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;IAEtB,CAAA,IAAA,QAAQ,GAAW,OAAO,CAAA;;IAGd,CAAA,SAAA,QAAQ,CAAC,KAAY,EAAA;cACzB,KAAK;YAEJ,OAAO;IACR,IAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,OAAO,CAAA,CAAA;;YAGjB,OAAO;IACR,IAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,cAAc,CAAA,CAAA;;YAGxB,OAAO;IACR,IAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,YAAY,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAdlC,YAAA,CAAA,CAAA,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBCQnC,GACI,CAAA,CAAA;0BAAC,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;iBAAC,GACX,CAAA,CAAA;yCAPY,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;wCACE,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;yCAAa,GAAG,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;;OAFxC,UAQI,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;yDADE,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;yCALY,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;WAZT,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,IAAY,EAAA,GAAA,OAAA,CAAA;IACZ,CAAA,IAAA,EAAA,OAAO,GAAG,UAAU,CAAC,EAAE,EAAE,aAAa,CAAA,EAAA,GAAA,OAAA,CAAA;IACtC,CAAA,IAAA,EAAA,EAAE,GAAW,EAAE,EAAA,GAAA,OAAA,CAAA;IAEtB,CAAA,IAAA,QAAQ,GAAW,OAAO,CAAA;IAC1B,CAAA,IAAA,GAAG,GAAW,EAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICsJV,IAAA,IAAA,aAAA,GAAM,IAAC,EAAE;YACX,EAAE;;;;;;;;;;;;;;;;;IADA,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,cAAA,EAAA,EAAA,gBAAA,CAAA,IAAA,cAAA,GAAM,IAAC,EAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAOH,GAAE,CAAA,EAAA,CAAA,CAAA,CAAA;qBACH,GAAG,CAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iEADF,GAAE,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;iEACH,GAAG,CAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAVZ,CAAA,IAAA,YAAA,iBAAA,GAAS,IAAC,CAAC,CAAA,CAAA;;;;;;;;;;;iDAJU,GAAS,CAAA,CAAA,CAAA,EAAA;;;;;;IAW7B,CAAA,IAAA,UAAA,cAAA,GAAM,IAAC,OAAO,CAAA;;IAAa,CAAA,MAAA,OAAA,GAAA,GAAA,kBAAA,GAAS,WAAC,GAAE,CAAA,EAAA,CAAA,CAAA,CAAA;;;oCAA5C,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;oCASkB,GAAgB,CAAA,CAAA,CAAA,eAAG,GAAO,CAAA,CAAA,CAAA,CAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gFApB9B,GAAS,CAAA,CAAA,CAAA,CAAA;;;IAI9B,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,iBAAA,CAAA,IAAA,cAAA,CAAA,YAAA,EAAA,YAAA,iBAAA,GAAS,IAAC,CAAC,CAAA,CAAA,EAAA;;;;;;;;;;;;;IAOV,IAAA,UAAA,cAAA,GAAM,IAAC,OAAO,CAAA;;;;;;;;;8FASG,GAAgB,CAAA,CAAA,CAAA,eAAG,GAAO,CAAA,CAAA,CAAA,CAAC,MAAM,CAAA;;;;;;;;;;;sCATvD,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SApJF,KAAY,CAAA;IACZ,CAAA,IAAA,OAAO,IAAW,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAA,CAAA;SACxC,QAAkB,CAAA;SAElB,SAAS,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA;SAET,OAAO,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;IACxB,CAAA,IAAA,gBAAgB,GAAE,EAAE,CAAA;IACpB,CAAA,IAAA,KAAK,GAAG,UAAU,EAAA,CAAA;SAClB,MAAM,GAAG,KAAK,CAAC,SAAS,EAAA,CAAA;SACxB,MAA4B,CAAA;SAC5B,SAAS,GAAA,CAAc,CAAC,EAAE,EAAE,CAAA,CAAA;IAC5B,CAAA,IAAA,WAAW,GAAG,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAA,CAAA;IACjD,CAAA,IAAA,OAAO,GAAG,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAA,CAAA;;cAG1C,IAAI,GAAA;eACA,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAA,EAAA;eACjB,GAAG,CAAC,CAAC,CAAA,CAAE,iBAAiB,EAAA;aACvB,iBAAiB;IAAE,KAAA,YAAA,CAAA,CAAA,EAAA,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA,CAAA;;;;;;cAK5D,QAAQ,GAAA;IACb,EAAA,YAAA,CAAA,CAAA,EAAA,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM,EAAA,CAAA,CAAA,CAAA;sBACzC,MAAM,GAAG,KAAK,CAAC,SAAS,EAAA,CAAA,CAAA;IAExB,EAAA,GAAG,OAAO,UAAU,EAAA,CAAA,CAAA;;;cAGf,UAAU,GAAA;IACf,EAAA,MAAM,GAAG,OAAO,CAAA;IAEhB,EAAA,WAAW,CAAC,MAAM,EAAA,CAAA;IAClB,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;;MAEb,OAAO,CAAC,OAAO,CAAC,GAAG,IAAA;OACf,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAA;;;sBAGxB,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAA,CAAA;IAE3B,EAAA,GAAG,OAAO,WAAW,EAAA,CAAA,CAAA;;;cAGhB,QAAQ,GAAA;IACb,EAAA,GAAG,CAAC,UAAU,EAAA,CAAA;;;cAGT,QAAQ,GAAA;IACb,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;UAET,MAAM,IAAI,OAAO,EAAA,OACV,KAAK,CAAA;;IAEZ,EAAA,IAAA,MAAM,IAAI,UAAU,EAAA;OACpB,QAAQ,EAAA,CAAA;cACD,IAAI,CAAA;;;;IAIV,CAAA,SAAA,SAAS,CAAC,GAAW,EAAA;IAC1B,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;UAET,QAAQ,EAAA,EAAA,OAAA;IAGZ,EAAA,MAAM,GAAG,UAAU,CAAA;UAEf,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAA,CAAA;UAClD,OAAO,GAAG,MAAM,CAAC,OAAO,CAAA;;IAExB,EAAA,IAAA,QAAQ,KAAK,OAAO,EAAA;uBACpB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;WACb,MAAM,GAAG,KAAK,CAAC,MAAM,EAAA,CAAA;IACzB,GAAA,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAA,CAAA;IAChC,GAAA,WAAW,CAAC,KAAK,EAAA,CAAA;WACb,MAAM,EACN,QAAQ,CAAC,IAAI,EAAA,CAAA;;IAGjB,GAAA,OAAO,CAAC,QAAQ,CAAE,CAAA,QAAQ,CAAC,OAAO,CAAA,CAAA;OAClC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;OACb,KAAK,CAAC,SAAS,CAAC,CAAC,CAAA,CAAA;uBACjB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;uBACjB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;;;IAGrB,EAAA,OAAO,CAAC,OAAO,CAAE,CAAA,QAAQ,CAAC,OAAO,CAAA,CAAA;;;cAG5B,IAAI,GAAA;MACT,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;IACf,EAAA,OAAO,CAAC,KAAK,EAAA,CAAA;;;cAGR,QAAQ,GAAA;MACb,KAAK,CAAC,SAAS,CAAC,CAAC,CAAA,CAAA;sBACjB,SAAS,CAAC,CAAC,CAAA,IAAK,CAAC,EAAA,SAAA,CAAA,CAAA;IACjB,EAAA,KAAK,CAAC,OAAO,EAAA,CAAA;MACb,GAAG,CAAC,IAAI,CAAC,YAAY,CAAA,CAAA;;;KAGzB,IAAI,EAAA,CAAA;KAEJ,EAAE,CAAC,iBAAiB,EAAA,MAAQ,QAAQ,EAAA,CAAA,CAAA;KACpC,EAAE,CAAC,YAAY,EAAA,MAAQ,IAAI,EAAA,CAAA,CAAA;KAC3B,EAAE,CAAC,kBAAkB,EAAA,MAAQ,QAAQ,EAAA,CAAA,CAAA;IAErC,CAAA,OAAO,OAAO,UAAU,EAAA,CAAA,CAAA;;SAEpB,MAAM,GAAA;MACN,KAAK,EAAA,CAAA;;;;;;;;;MASL,IAAI,EAAA,CAAA,WAAA,CAAA;MACJ,IAAI,EAAA,CAAA,iCAAA,CAAA;MACJ,QAAQ,EAAA;IACJ,GAAA,GAAG,EAAE,cAAc;IACnB,GAAA,GAAG,EAAE,mBAAmB;IACxB,GAAA,EAAE,EAAE,aAAa;;;;;;;;;;iCAkBL,QAAQ,EAAA,CAAA;;;;IAOT,GAAA,OAAO,CAAC,EAAE,CAAA,GAAA,OAAA,CAAA;;;;;IACL,CAAA,MAAA,eAAA,GAAA,GAAA,IAAA,SAAS,CAAC,GAAG,CAAA,CAAA;IAMb,CAAA,MAAA,IAAA,GAAA,MAAA,IAAI,CAAC,kBAAkB,CAAA,CAAA;;;;OADhC,KAAK,GAAA,OAAA,CAAA;;;;;;;OAIC,QAAQ,GAAA,OAAA,CAAA;;;;;mCA3Bb,QAAQ,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BCxHf,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;OAHX,UAIM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;4DADD,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;2BALV,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;4DAAN,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;uBADN,GAAQ,CAAA,CAAA,CAAA,EAAA,OAAAQ,iBAAA,CAAA;;;;;;;;;;;6CANL,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA;6CACG,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OAFxB,UAgBS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAfG,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA;;;;8CACG,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAhBT,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,KAAkC,EAAA,GAAA,OAAA,CAAA;IAExC,CAAA,IAAA,EAAA,KAAK,EAAE,SAAS,EAAE,OAAO,KAAI,KAAK,CAAA;;;;;;;SACnC,OAAe,CAAA;SACf,QAAiB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAErB,GAAG,YAAA,CAAA,CAAA,EAAA,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAA,CAAA,CAAA;;;;OAE7B,YAAA,CAAA,CAAA,EAAE,OAAO,GAAA,CAAI,UAAU;SAAG,aAAa;SACpC,QAAQ,GAAG,cAAc,GAAG,YAAY,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICF/B,CAAA,IAAA,QAAA,YAAA,GAAI,IAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;;;;IAFP,GAAA,QAAA,CAAA,CAAA,EAAA,OAAA,EAAA,aAAA,YAAA,GAAI,IAAC,GAAG,CAAA,CAAA;;;;OAAnB,UAII,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;OAHA,UAEM,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA;;;;;IADD,GAAA,IAAA,KAAA,aAAA,CAAA,IAAA,QAAA,MAAA,QAAA,YAAA,GAAI,IAAC,IAAI,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;IAFP,GAAA,IAAA,KAAA,aAAA,CAAA,IAAA,aAAA,MAAA,aAAA,YAAA,GAAI,IAAC,GAAG,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;gCADhB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;oCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;0CAFY,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;OADxB,UAUM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;+BAPK,GAAK,CAAA,CAAA,CAAA,CAAA;;;;mCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;2CAFY,GAAE,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAPT,EAAU,EAAA,GAAA,OAAA,CAAA;WACV,IAA2B,EAAA,GAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICC1C,IAAIC,MAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAE1B,IAAI,gBAAgB,GAAG,CAAC,KAAoB,MAAM;IAC9C,IAAA,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;IAC1B,IAAA,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC;IACpC,IAAA,IAAI,EAAE,QAAQ,CAACA,MAAI,CAAC,IAAI,CAAC;QACzB,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK;IAC/B,QAAA,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;IAC1B,QAAA,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC;IAC9B,QAAA,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC;IAC7B,KAAA,CAAC,CAAC;IACN,CAAA,CAAC;;ICRF,SAAS,SAAS,CAAC,GAAW,EAAA;QAC1B,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEjC,IAAI,KAAK,GAAG,GAAG;IACV,SAAA,IAAI,EAAE;IACN,SAAA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;IACpB,SAAA,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC;aACX,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;aAClB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAE3B,IAAI,IAAI,GAAS,EAAE,CAAC;QACpB,IAAI,GAAG,GAAG,EAAE,CAAC;IAEb,IAAA,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;IACpB,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;IACtB,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;oBAAE,SAAS;gBAClC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACxB,SAAS;IACZ,SAAA;YACD,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;YACvB,GAAG,GAAG,EAAE,CAAC;IACZ,KAAA;IAED,IAAA,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,SAAS,WAAW,CAAC,GAAW,EAAA;IAC5B,IAAA,IAAI,MAAM,GACN,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;IACpC,QAAA,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;IACpC,YAAA,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;IAClC,gBAAA,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;IAClC,oBAAA,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEnB,IAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,SAAS,YAAY,CAAC,GAAW,EAAA;IAC7B,IAAA,IAAI,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAA,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,SAAS,cAAc,CAAC,GAAW,EAAA;IAC/B,IAAA,IAAI,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,IAAG;IAC1B,QAAA,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnC,OAAO,EAAC,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,EAAC,CAAC;IAClC,KAAC,CAAC,CAAC;IAEH,IAAA,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,SAAS,SAAS,CAAC,GAAW,EAAA;IAC1B,IAAA,IAAI,KAAK,GACL,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IACxC,QAAA,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;IACpC,YAAA,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;IACpC,gBAAA,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;wBAClC,CAAC,GAAG,CAAC,CAAC;IAEV,IAAA,KAAK,GAAG,KAAK;aACR,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;aACpB,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAE5B,IAAI,IAAI,GAAG,KAAK;aACX,GAAG,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IAEhC,IAAA,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,SAAS,YAAY,CAAC,GAAW,EAAA;IAC7B,IAAA,IAAI,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC;IACzB,SAAA,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAExD,IAAI,OAAO,GAAG,KAAK,CAAC;IAEpB,IAAA,OAAO,CAAC,OAAO,CAAC,CAAC,IAAG;IAChB,QAAA,QAAQ,CAAC,CAAC,CAAC,CAAC;IACR,YAAA,KAAK,UAAU;oBAAE,OAAO,GAAG,IAAI,CAAC;oBAAC,MAAM;IACvC,YAAA;IAAS,gBAAA,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;oBAAC,MAAM;IACxD,SAAA;IACL,KAAC,CAAC,CAAC;QAEH,OAAO;YACH,OAAO;SACV,CAAC;IACN,CAAC;IAED,IAAI,OAAO,GAAG,CAAC,GAAW,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;IAE1C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAE1B,IAAI,mBAAmB,GAAG,OAAO;IAC7B,IAAA,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;QAClC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,SAAS,EAAE,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAA,CAAC;;ICzGF,SAAS,aAAa,GAAA;QAClB,SAAS,MAAM,CAAC,KAAa,EAAA;IACzB,QAAA,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;SACvD;QAED,SAAS,QAAQ,CAAC,KAAa,EAAA;IAC3B,QAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;IACnB,YAAA,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;YAE1B,IAAI,CAAC,GAAGZ,KAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAE/B,IAAI,CAAC,CAAC,KAAK,EAAE;IACT,YAAA,OAAO,KAAK,CAAC;YAEjB,QAAQ,QAAQ,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9C,YAAA,KAAK,UAAU,EAAE,OAAO,CAAG,EAAA,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,CAAA,CAAG,CAAC;gBACzC,KAAK,UAAU,EAAE,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,YAAA,KAAK,MAAM,EAAE,OAAO,KAAK,CAAC;IAC7B,SAAA;SACJ;IAED,IAAA,SAAS,IAAI,CAAC,KAAa,EAAE,GAAW,EAAA;IACpC,QAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;IACnB,YAAA,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;YAE1B,IAAI,CAAC,GAAGA,KAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAE/B,IAAI,CAAC,CAAC,KAAK,EAAE;IACT,YAAA,OAAO,KAAK,CAAC;YAEjB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE3B,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;IACjB,YAAA,OAAO,KAAK,CAAC;YAEjB,QAAQ,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC9B,YAAA,KAAK,MAAM,EAAE,OAAO,CAAG,EAAA,KAAK,CAAI,CAAA,EAAA,KAAK,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;IAC3C,YAAA,KAAK,MAAM,EAAE,OAAO,CAAA,EAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAI,CAAA,EAAA,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IACpD,SAAA;SACJ;IAED,IAAA,IAAI,eAAe,GAAG;YAClB,KAAK;IACL,QAAA,KAAK,EAAE,KAAK;IACZ,QAAA,KAAK,EAAE,KAAK;IACZ,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IAC1B,QAAA,KAAK,EAAE,KAAK;IACZ,QAAA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC9B,QAAA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO;SAClC,CAAC;QAEF,SAAS,gBAAgB,CAAC,IAAa,EAAA;YACnC,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,QAAA,OAAO,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACvC;IAED,IAAA,IAAI,QAAQ,GAAG;IACX,QAAA,QAAQ,EAAE,SAAS;IACnB,QAAA,QAAQ,EAAE,SAAS;IACnB,QAAA,cAAc,EAAE,WAAW;IAC3B,QAAA,SAAS,EAAE,SAAS;IAEpB,QAAA,IAAI,EAAE,KAAK;IACX,QAAA,UAAU,EAAE,UAAU;IACtB,QAAA,UAAU,EAAE,UAAU;IACtB,QAAA,cAAc,EAAE,aAAa;IAC7B,QAAA,WAAW,EAAE,eAAe;IAE5B,QAAA,QAAQ,EAAE,QAAQ;IAClB,QAAA,cAAc,EAAE,aAAa;IAC7B,QAAA,cAAc,EAAE,aAAa;IAC7B,QAAA,kBAAkB,EAAE,iBAAiB;IACrC,QAAA,eAAe,EAAE,kBAAkB;IAEnC,QAAA,SAAS,EAAE,SAAS;IACpB,QAAA,WAAW,EAAE,cAAc;IAC3B,QAAA,WAAW,EAAE,cAAc;IAC3B,QAAA,eAAe,EAAE,kBAAkB;IACnC,QAAA,YAAY,EAAE,mBAAmB;SACpC,CAAC;IAEF,IAAA,IAAI,MAAM,GAAG;YACT,EAAE;YACF,EAAE;IACF,QAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YACd,EAAE;YAEF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE,EAAE,EAAE,EAAE,GAAG;YACX,EAAE;YAEF,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG;YACb,GAAG;IAEH,QAAA,GAAG,EAAE,GAAG;YACR,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG;YACb,GAAG;SACN,CAAC,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,GAAG,CAACA,KAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3C,SAAA,IAAI,EAAE,CAAC;QAER,SAAS,WAAW,CAAC,KAAa,EAAA;YAC9B,IAAI,KAAK,GAAa,EAAE,CAAC;IAEzB,QAAA,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YACpB,IAAI,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC3B,QAAA,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;IACvB,QAAA,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACnC,QAAA,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IACnB,QAAA,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;IAEpB,QAAA,CAAC,SAAS,SAAS,GAAA;IACf,YAAA,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;oBAAE,OAAO;IAE9B,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC9B,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACnD,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC1D,OAAO;IACV,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC9B,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACnD,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC1D,OAAO;IACV,aAAA;IAED,YAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1D,aAAA;IAED,YAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;aACpD,GAAG,CAAC;IAEL,QAAA,CAAC,SAAS,UAAU,GAAA;IAChB,YAAA,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;oBAAE,OAAO;IAC7B,YAAA,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;oBAAE,OAAO;IAE/B,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACZ,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;oBACnD,OAAO;IACV,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAChC,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACrD,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC1D,OAAO;IACV,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAChC,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACrD,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC1D,OAAO;IACV,aAAA;IAED,YAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1D,aAAA;IAED,YAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;aACtD,GAAG,CAAC;IAEL,QAAA,CAAC,SAAS,UAAU,GAAA;IAChB,YAAA,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC;oBAAE,OAAO;IAC9B,YAAA,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;oBAAE,OAAO;IAE/B,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACZ,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC9B,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;oBACpD,OAAO;IACV,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IACpC,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACzD,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC9D,OAAO;IACV,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IACpC,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACzD,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC9D,OAAO;IACV,aAAA;IAED,YAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9D,aAAA;IAED,YAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;aAC1D,GAAG,CAAC;IAEL,QAAA,CAAC,SAAS,OAAO,GAAA;IACb,YAAA,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC;oBAAE,OAAO;IAE9B,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACZ,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;oBACjD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,OAAO;IACV,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;oBACnD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;oBACxE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC7E,OAAO;IACV,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACb,gBAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;oBACnD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;oBACxE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC7E,OAAO;IACV,aAAA;IAED,YAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7E,aAAA;gBAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;aACzE,GAAG,CAAC;IAEL,QAAA,OAAO,KAAK,CAAC;SAChB;QAED,SAAS,IAAI,CAAC,KAAa,EAAA;IACvB,QAAA,IAAI,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IAC/B,QAAA,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC1B;IAED,IAAA,IAAI,UAAU,GAAG,IAAI,GAAG,CAAC;YACrB,CAAC,GAAG,EAAE,QAAQ,CAAC;YACf,CAAC,GAAG,EAAE,IAAI,CAAC;YACX,CAAC,GAAG,EAAE,IAAI,CAAC;IACd,KAAA,CAAC,CAAC;QAEH,OAAO;IACH,QAAA,KAAK,EAAE,CAAC,KAAa,EAAE,GAAW,KAAY;IAC1C,YAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;IACnB,gBAAA,OAAO,KAAK,CAAC;IAEjB,YAAA,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE;IAClB,gBAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;gBAEzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,gBAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;IAEzB,YAAA,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aAC7C;IACD,QAAA,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;YACzD,MAAM;SACT,CAAA;IACL,CAAC;IAEM,MAAM,UAAU,GAAG,aAAa,EAAE;;ICtQzC,SAAS,WAAW,CAAC,KAAa,EAAE,GAAW,EAAA;QAC3C,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEnD,IAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;IACnB,QAAA,OAAO,KAAK,CAAC;IAEjB,IAAA,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE;IAClB,QAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;QAEzB,OAAO,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,SAAS,UAAU,CAAC,GAAW,EAAE,IAAgB,EAAE,MAAgB,EAAA;QAC/D,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;IAC7B,QAAA,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAC7C,OAAO;gBACH,IAAI;gBACJ,UAAU,EAAE,CAAK,EAAA,EAAA,CAAC,CAAI,EAAA,CAAA;gBACtB,KAAK;aACR,CAAC;IACN,KAAC,CAAC,CAAC;QAEH,KAAK,CAAC,IAAI,CACN,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvD,KAAK,CAAC,OAAO,CAAC,IAAI,IACd,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAE3D,KAAK,CAAC,OAAO,CAAC,IAAI,IACd,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;QAIvD,KAAK,CAAC,OAAO,CAAC,IAAI,IACd,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAE3D,KAAK,CAAC,OAAO,CAAC,IAAI,IACd,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAEvD,IAAA,OAAO,GAAG,CAAC;IACf,CAAC;IAED,SAAS,QAAQ,CAAC,QAA0B,EAAE,GAAa,EAAA;QACvD,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK;IAC5B,QAAA,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC;YAClD,GAAG,EAAE,EAAE,CAAC,GAAG;IACd,KAAA,CAAC,CAAC,CAAC;IACR,CAAC;IAED,SAAS,WAAW,CAAC,QAA0B,EAAE,GAAa,EAAA;IAC1D,IAAA,IAAI,OAAO,GAAY,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM;IACtD,QAAA,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAC1B,KAAK,EAAE,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC;IAC/C,QAAA,OAAO,EAAE,EAAE,IAAI,CAAC;IACnB,KAAA,CAAC,CAAC,CAAC;IAEJ,IAAA,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI,gBAAgB,GAAG,CAAC,QAA0B,MAAM;IACpD,IAAA,SAAS,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,KAAmB;IACzC,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;YAE5C,OAAO,KAAK,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;IAClD,YAAA,KAAK,GAAG,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;YAE5C,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAE/B,OAAO;gBACH,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,KAAK;IACL,YAAA,IAAI,EAAE,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC7B,YAAA,OAAO,EAAE,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACnC,OAAO,EAAE,QAAQ,CAAC,OAAO;aAC5B,CAAC;SACL;IACJ,CAAA,CAAC;;ICyCF,IAAU,KAAK,CAiEd;IAjED,CAAA,UAAU,KAAK,EAAA;QACX,SAAS,QAAQ,CAAI,CAAsB,EAAA;YACvC,OAAO,CAAC,KAAK,SAAS,GAAG,EAAE;IACvB,YAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClC;QAED,SAAS,SAAS,CAAC,CAAM,EAAA;YACrB,OAAO,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;SACrD;QAED,SAAS,MAAM,CAAC,IAAe,EAAA;IAC3B,QAAA,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;IAEpB,QAAA,OAAO,SAAS,CAAC,MAAM,CAAC;gBACpB,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;IAEM,IAAA,eAAe,kBAAkB,CAAE,KAAa,EACnB,QAAkC,EAClC,GAAQ,EAAA;IACxC,QAAA,IAAI,MAAc,CAAC;IAEnB,QAAA,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAE9B,QAAA,KAAK,IAAI,OAAO,IAAI,QAAQ,EAAE;IAC1B,YAAA,IAAI,GAAG,GAAG,MAAM,MAAM,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3C,IAAI,OAAO,GAAG,KAAK,QAAQ;oBACvB,MAAM,GAAG,GAAG,CAAC;IACpB,SAAA;IAED,QAAA,OAAO,MAAM,CAAC;SACjB;IAdqB,IAAA,KAAA,CAAA,kBAAkB,qBAcvC,CAAA;QAEM,eAAe,sBAAsB,CAAE,KAAa,EACnB,IAAY,EACZ,QAAsC,EACtC,GAAQ,EAAA;IAC5C,QAAA,IAAI,OAAe,CAAC;IAEpB,QAAA,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAE9B,QAAA,KAAK,IAAI,OAAO,IAAI,QAAQ,EAAE;IAC1B,YAAA,IAAI,GAAG,GAAG,MAAM,MAAM,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3C,IAAI,OAAO,GAAG,KAAK,QAAQ;oBACvB,OAAO,GAAG,GAAG,CAAC;IACrB,SAAA;IAED,QAAA,OAAO,OAAO,CAAC;SAClB;IAfqB,IAAA,KAAA,CAAA,sBAAsB,yBAe3C,CAAA;IAEM,IAAA,eAAe,iBAAiB,CAAC,GAAS,EAAE,KAAa,EAAE,GAAQ,EAAA;IACtE,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;IAEnD,QAAA,KAAK,IAAI,OAAO,IAAI,QAAQ,EAAE;gBAC1B,MAAM,MAAM,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,SAAA;SACJ;IANqB,IAAA,KAAA,CAAA,iBAAiB,oBAMtC,CAAA;IAEM,IAAA,eAAe,iBAAiB,CAAC,GAAS,EAAE,KAAa,EAAA;IAC5D,QAAA,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;IAEnD,QAAA,KAAK,IAAI,OAAO,IAAI,QAAQ,EAAE;gBAC1B,MAAM,MAAM,CAAC,MAAM,OAAO,EAAE,CAAC,CAAC;IACjC,SAAA;SACJ;IANqB,IAAA,KAAA,CAAA,iBAAiB,oBAMtC,CAAA;IACL,CAAC,EAjES,KAAK,KAAL,KAAK,GAiEd,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC9F0B,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,YAAA,GAAK,IAAC,IAAI,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAKf,GAAG,CAAA,EAAA,CAAA;uBACL,GAAE,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCARZ,GAAK,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;IAMJ,CAAA,IAAA,YAAA,aAAA,GAAK,IAAC,OAAO,CAAA;;IAAc,CAAA,MAAA,OAAA,GAAA,GAAA,KAAA,EAAA,KAAK,YAAL,GAAK,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;;sCAArC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wFANA,GAAK,CAAA,CAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;IAMJ,IAAA,YAAA,aAAA,GAAK,IAAC,OAAO,CAAA;;;;;;;;;;;;;wCAAlB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASC,CAAA,IAAA,YAAA,GAAA,UAAU,CAAC,QAAQ,CAAA;;;;sCAAxB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;IAQC,CAAA,IAAA,UAAA,GAAA,UAAU,CAAC,MAAM,CAAA;;;;oCAAtB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;gBAFC,yCAEP,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IARO,IAAA,YAAA,GAAA,UAAU,CAAC,QAAQ,CAAA;;;;qCAAxB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;4CAAJ,MAAI,CAAA;;;;IAQC,IAAA,UAAA,GAAA,UAAU,CAAC,MAAM,CAAA;;;;mCAAtB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;2BALO,GAAG,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;OAFZ,UAII,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;OAHA,UAEM,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;4BAOD,GAAG,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;OAFZ,UAII,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;OAHA,UAEM,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAbb,GAAK,CAAA,CAAA,CAAA,CAAC,OAAO,CAAC,OAAO,IAAA,eAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAArB,GAAK,CAAA,CAAA,CAAA,CAAC,OAAO,CAAC,OAAO,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA9FlB,CAAA,IAAA,QAAQ,GAAG,mBAAmB,EAAA,CAAA;IAClC,CAAA,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAA,CAAA;SAE5B,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAA,CAAA;SACjC,KAAK,GAAG,KAAK,CAAC,SAAS,EAAA,CAAA;IAC3B,CAAA,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAA,CAAA;SAEtB,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAA,CAAA;;;IAG9B,CAAA,IAAA,MAAM,GAAG,KAAK,CAAA;;IACd,CAAA,IAAA,WAAW,GAAG,KAAK,CAAA;SACnB,QAAkB,CAAA;IAEtB,CAAA,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAA,CAAA;;KAE/B,OAAO,CAAA,MAAA;IACH,EAAA,cAAc,CAAC,IAAI,CAAA,CAAA;;;IAGd,CAAA,SAAA,eAAe,CAAC,EAAU,EAAA;UAC3B,MAAM,EAAA;OACN,cAAc,EAAA,CAAA;;;;MAIlB,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,KACzB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA,CAAE,OAAO,CAAA,CAAA,CAAA;MAE9C,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;IAEpC,EAAA,MAAM,GAAG,IAAI,CAAA;IACb,EAAA,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAA;UAEnC,WAAW,EAAE,QAAQ,CAAC,IAAI,EAAA,CAAA;;;cAGzB,cAAc,GAAA;IACnB,EAAA,YAAA,CAAA,CAAA,EAAA,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAA,CAAA,CAAA;IAEnC,EAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAA,CAAA;;IACzB,EAAA,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,CAAA,GAAG,EAAE,CAAC,KAAA;OACzB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA,CAAE,KAAK,CAAA,CAAA;OACpC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA,CAAE,OAAO,CAAA,CAAA;IACxC,GAAA,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAA,CAAA;;;IAG3B,EAAA,MAAM,GAAG,KAAK,CAAA;IACd,EAAA,WAAW,GAAG,KAAK,CAAA;IAEnB,EAAA,cAAc,CAAC,GAAG,CAAA,CAAA;;;cAGb,aAAa,GAAA;UACd,MAAM,EAAA;OACN,cAAc,EAAA,CAAA;;;;SAIlB,MAAM,GAAA;MACN,KAAK,EAAA,CAAA;;;;;;;;;MASL,IAAI,EAAA,CAAA,WAAA,CAAA;MACJ,IAAI,EAAA,CAAA,4BAAA,CAAA;;;;;;;;;;;OAQa,QAAQ,GAAA,OAAA,CAAA;;;;;iCAGH,aAAa,EAAA,CAAA;IAQf,CAAA,MAAA,eAAA,GAAA,EAAA,IAAA,eAAe,CAAC,EAAE,CAAA,CAAA;mCAdxB,aAAa,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCCXH,GAAQ,CAAA,CAAA,CAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAJpC,UAKK,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;yDADuB,GAAQ,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA5DpC,OAAO,CAAA,MAAA;IACH,EAAA,IAAI,CAAC,UAAU,EAAA,CAAA;MACf,QAAQ,EAAA,CAAA;;;cAUH,QAAQ,GAAA;;WAGL,MAAM,GAAG,IAAI,CAAC,SAAS,EAAA,CAAA;IAC3B,GAAA,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAA,CAAA;;IAEpC,GAAA,QAAA,MAAM,CAAC,IAAI;aACV,WAAW,CAAA;aACX,SAAS;gBACHa,MAAQ,CAAA;aACd,SAAS;gBACHC,MAAM,CAAA;aACZ,MAAM;gBACAC,MAAI,CAAA;aACV,SAAS;gBACHC,MAAG,CAAA;aACT,UAAU;gBACJC,IAAM,CAAA;aACZ,WAAW;gBACLC,aAAQ,CAAA;;SAEf,KAAK,CAAA,CAAA,oBAAA,EAAwB,MAAM,CAAC,IAAI,CAAA,CAAA,CAAA,CAAA,CAAA;gBACjC,IAAI,CAAA;;cAGhB,GAAG,EAAA;OAEN,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAA,CAAA;;;;SAInC,MAAM,GAAA;MACN,KAAK,EAAA,CAAA;;;;MAIL,IAAI,EAAA,CAAA,eAAA,CAAA;MACJ,IAAI,EAAA,CAAA,QAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEZ,UAAM,GAAG,GAAG,IAAI,GAAG,CAAC;QACnB,MAAM,EAAE,QAAQ,CAAC,IAAI;IACrB,CAAA;;;;;;;;"}